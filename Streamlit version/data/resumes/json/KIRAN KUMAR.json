{
    "id": "resume_e820557d-1439-41f2-b210-f741883d0970",
    "metadata": {
        "filename": "KIRAN KUMAR.docx",
        "processed_date": "2025-09-24T08:45:42.296566+00:00"
    },
    "raw_text": "KIRAN KUMAR\nEmail: kumarjava174@gmail.com                                                                                                                                             Mobile:510-770-6277\nProfessional Summary\n8+ years of IT experience in design (OOA, OOD), development, testing and documentation of Enterprise applications using J2EE technologies. Worked extensively in J2EE (JSP, Servlets, EJB), Struts, JSF, Spring, Hibernate, IBM Web sphere Application Server, BEA web logic Server 7.x, JDBC, JNDI, XML and RDBMS like Oracle. Strong knowledge in Software Development Life Cycle (SDLC), worked in most of the life cycle phases. \nGood knowledge and working experience in Object Oriented Analysis (OOA) and Object Oriented Design (OOD) \nWorking knowledge in multi-tiered distributed environment, OOP concepts, good understanding of Software Development Lifecycle (SDLC) \n Experience in web application design using open source Spring, JSF & Struts Frameworks and Java & J2EE Design Patterns.\n Experience in client side Technologies such as HTML, CSS, JQuery and JavaScript. \n Expertise in all Spring Modules such as Spring Core, MVC, Dependency Injection, AOP and Transaction. \nExpertise in Web UI development using JavaScript OOP, AJAX, CSS, (X) HTML. Expertise in XML technologies XPath, XSL, XSLT. \nExtensive experience in implementing MVC framework using Spring, Struts in J2EEarchitecture. \n Experience in working on various Spring modules (Spring MVC, DAO and AOP) along with Hibernate as the back-end ORM tool for implementation of persistence layer and mapping of POJO's. \nStrong working experience in application development using Core Java, Spring, Hibernate, Web services, JSP, Servlets, SQL, XML, HTML and Tomcat. \n Experience in Multi-tier web application development using MVC architecture, Design Patterns, Spring Application framework and Hibernate ORM.\nGood experience designing databases, ORACLE 8i/9i/10g, MySQL and SQL Server. \nExtensive experience in handling Oracle applications and database administration. \nExperience in managing business/mission critical high availability databases. \nExperience in working with multiple Servers like IBM Web Sphere, Web Logic, JBoss and Apache Tomcat. \nStrong J2EE/Java application development background, with experience in defining functional and technical specifications. \nExperienced in developing applications using Apache Tomcat, BEA Web Logic, and JBoss. \nExpertise in web services technologies such as SOAP, Restful. \nDesigned& configured JIRA project dashboards, Agile boards, workflow schemes. \nConfigured Issue Security Access Levels/Schemes for finance JIRA projects. \nIntensive knowledge in databases like Oracle, SQL Server, PL/SQL, Queries, Triggers, DB2 Client, Hibernate, and JPA. \nExtensive & expert level of experience with Java Platform, JEE, EJBs, JDBC, JPA, Servlets, JSP, JMS, XML, Applets, JavaScript, POJO. \n Experience in publishing and consuming SOAP/WSDL/JAX-WS based web services using Apache Axis and JAX-RS based web services using Apache CXF. \nExperience in using DOM and SAX parsers to process, validate, parse and extract data from XML files. \nWorked on developing the automation scripts for back-end testing using Selenium and executed the J unit tests. Implemented automation using Selenium Web Driver, Cucumber, Java, Maven & Jenkins. \nExperienced working with Web services technologies WSDL, JAX-WS, JAXB, JAX-RS. Implemented web application design in MVC architecture using the Struts framework and JSP.\n Expert in using Java IDE's like IntelliJ, Eclipse and NetBeans. Developed internal & external training portal (JSP/Struts, Weblogic, Tomcat, Eclipse, JBuilder. \nIn depth exposure to creating API for internal and external application using REST and SOAP based design. Open source framework like Jersey used for create REST API. \nDeveloped web services in Java and Experienced with SOAP, WSDL. \nBackend as REST API on Java using Java restlet framework. \nExperience in using JavaScript libraries JQuery and frameworks like AngularJS.\n Experience in designing, implementing Web Services using spring REST API, Loopback in producing Restful web services. \n Strong Experience developing whole client side solution using AngularJS and testing them with protractor. \nHands on experience with Oracle 8i/9i, Oracle 10g/11g, MS SQL, Postgres databases and writing complex SQL queries, writing Stored Procedures, Functions and Triggers and performed complex database related operations. \nExtensive experience in writing complex SQL Queries using JOINS and also selecting correct join type for efficiency. \nStrong Experience in development methodologies like waterfall, Agile (actively participate in scrums, code reviews, planning sessions), BDD, ATDD. \nExperience in Web Services Technologies like JAXP, JAXB, SOAP, WSDL, UDDI and Service Oriented Architecture (SOA).  And REST Web services written in Groovy wrapped by Jersey JAX-RS \nExperience in client side designing and validations using HTML, DHTML, CSS, Java Script, AJAX and JSP. \nExpertise in various open source frameworks like Struts 2.x, 1.x, spring, JSF, Ext JS and ORM Technology like Hibernate \nExperience in working with the REST web services and implemented in the SOAP UI for developing and testing the web services and parsing the XML files. \nExperience in developing web and enterprise applications using JAVA, J2EE (Servlets, JSP, JDBC, JNDI, XML, EJB, JPA, JMS, XML), JSF, Struts, spring, Hibernate and Web Services. \nExtensive knowledge in working with J2EE technologies such as Servlets, JSP, JDBC, EJB, JNDI, JSF, JavaBeans, JMS and Object Oriented Programming techniques. \nCreating the message from the uploaded information and transaction data and sending this information using SOAP.  And  Storing the SOAP messages received in the JMS Queue of Web Sphere MQ (MQ Series) \nExtensive experience in implementation of the version control software VSS, CVS and Clear Case. \nExperience in various Agile methodologies like Test Driven Development (TDD), SCRUM, and Pair Programming. \nImplemented the project using SOAP based Web Services, WSDL, UDDI, SOAP to communicate with other systems (Geneses, ESKEM legacy systems) by using apache Axis. \nTECHNICAL SKILLS \n\n\n\nWork Experience\n\nClient: Genentech, CA\nRole: Java Full Stack Developer\nDuration: July’ 15 To Till Date\n\nResponsibilities: \nDesigned application using UML. Elaborated on the Use Cases based on business requirements and was responsible for creation of Class Diagrams and Sequence diagrams. \nExtensive Programming, testing and debugging skills to write new applications. \nResponsibilities included development of new modules of the application such as Web using J2EE 1.6 technologies, Struts and Spring Framework. \nCreated Web Services in conformance to SOA architecture. \nDeveloped templets for Multiple Screens using AngularJs. \nImplemented coding of XML generation out of XSD Adobe schema. \nBuilding application with JS frameworks Such as Angular JS. \nUsed spring framework for dependency injection and integrated with Node JS, Hibernate and JSF. \nDeveloped MVC controllers and deployed flow of Execution in the Servlet Environment using Spring MVC. \nExtensively used Core Spring Framework for Dependency Injection of components. \nImplemented Web Services using Spring RESTful. \nImplemented REST web service in Scala using Akka for CBPMAN log tracking application. \nDeveloped Hibernate with Spring Integration as the data abstraction to interact with the database. \nUsed Hibernate for mapping Java classes with database and created queries with Hibernate query language (HQL). And Developed model objects using Hibernate. \nImplemented web services (WSDL) and effectively worked with SOAP and XML,XSLT. \nExperience in NoSQL (MongoDB) in using Hierarchy Modelling Techniques like Tree Aggregation, Adjacency Lists and materialized paths. \nDeveloped Java classes for XML processing and used XSLT for XML parsing \nDevelop quality code adhering to Scala coding Standards and best practices. \nWorked extensively on AngularJS/NodeJS creating Controllers. \nImplemented backend process for sending the data through FTP. s \nWorked with JMS as messaging service and JTA for Transaction management and having knowledge with JPA for Java persistence. \nImplemented SOA architecture using SOAP web services by using Apache CXF and JAX-WS. \nTransform the XML Data Using XSL into user required format.\nDesigned, built, and deployed a multitude applications utilizing almost all of the AWS Stack(Including EC2, MongoDB focusing on high-availability, fault tolerance, and auto-scaling) \nUsing JMS to send email or notify companies or users who have subscribed particular services in our product.  And Developed customer facing software for managing advertisements to grow the business using JavaScript/JQuery, HTML 5, and CSS. And Implemented SOAP Client (Consumer) using Apache CXF.\nUsed Web services - WSDL and SOAP for consuming data from the data center \nImplemented client side Java-beans for DAO pattern. And Used Soap UI for testing the SOAP Web Services. \nDeveloped Web Service using WSDL, SOAP & UDDI for CTD. \nJQuery High charts plugin integration with databases for displaying custom graphs (line, bar, pie etc.). \nEnvironment: Java, J2EE 1.6, Agile Scrum, Spring IOC, Spring MVC, Spring RESTful Web service, Hibernate 3.2, JMS, AJAX, Struts JSP, Oracle, Servlets, AngularJs, Javascript, NodeJS,, UML, CSS, Java Script, HTML 5, , Ant, Windows, GIT, Log4j.\n\nClient: Invesco, Houston, TX\nRole: Java Developer\nDuration:  Aug’ 14 – June’ 15\n\nResponsibilities: \nGathered system requirements for the application and worked with the business team to review the requirements, and went through the Software Requirement document and Architecture document. \nImplemented code according to coding standards and Created AngularJS Controller, which isolate scopes perform operations. \nDesigned and developed User Interface modules using JSP, HTML, and CSS JavaScript\nDeveloped UI using Java, struts, JSP, JDBC, HTML, JavaScript, Log4J, Oracle and SQL Server. \nDeveloped the Presentation tier using Struts (MVC Architecture). \nDeveloped web applications by implementing REST JAX-RS web services with annotations and handled XML & JSON as a response from the server. \nIntegrated the Java code (API) in JSP pages and responsible for setting up AngularJS framework for UI development.\nDeveloped html views with HTML5, CSS3, bootstrap and AngularJS. \nDeveloped customer facing software for managing advertisements to grow the business using JavaScript/ JQuery, HTML 5, and CSS. \nUsed Struts tag libraries and custom tag libraries extensively while coding JSP pages. \nInvolved in designing UML Use case diagrams, Class diagrams, and Sequence diagrams using Rational Rose. \nWorked as a part of Agile SCRUM team for product development. \nCreated user-friendly GUI interfaces and Web pages using HTML, JavaScript's. \nDeveloped client request validations and processed using JavaScript. \nExtensive Programming, testing and debugging skills to write new applications. \nUsed TDD methodology to develop the application. \nIntegrated Hibernate with spring for Handling Transactions. \nDeveloped the application using Struts Framework that uses the Model View Controller (MVC) architecture. \nDeveloped various Struts Action classes in the middle tier and injected Spring Dependency Injection for the service layer implementation.\nDeveloped presentation layer using JSP, HTML5, CSS and JQuery. \nExtensively used Spring IOC for Dependency Injection. \nUsed standard J2EE 1.6 design patterns and Model View Controller in application design. \nUsed Spring-Hibernate integration and JPA ORM in the back end to fetch data from Oracle and MySQL databases. \nUsed Business Delegate, Singleton, Front Controller, Factory and DAO design patterns. \nDeveloped Action classes and DAO classes to access the database. \nDeveloped several POJO classes to map the data into java Object. \nConsumed messages from IBM MQ. \nImplemented SOAP Client (Consumer) using Apache CXF. \nUsed Java Mail API, and implemented an automated functionality to generate e-mails to the managed whenever a user registers for the applications. \nUsed Oracle 11g database for tables creation and involved in writing SQL queries using Joins and Stored Procedures. \nUsed Toad database tool to build, edit, and format database queries, as well as eliminate performance issues in the code. \nCreated indexes, avoiding inefficient queries, avoiding too many open connections and avoiding inline queries wherever possible. \nInvolved in doing performance tuning by observing AWR reports and execution plans. \nImplemented the JMS Queue to receive the input in the form of XML and parsed them through a common XSD. And Implemented JQuery and JSON to minimize code and manage complex data set. \nUsed JUnit for testing the application and Maven for building Projects. \nDeployed the applications on Rational Application Developer (RAD). \nUsed GIT tool to keep track of all work and all changes in source code, Developed templets for Multiple Screens using AngularJs. And Building application with JS frameworks Such as Angular JS. \nDeveloped a heavily asynchronous single page application which takes the user through an extensive search criteria and graphs reports using the high charts plugin. And Used Jenkins for Auto builds. \nEnvironment: Java, J2EE 1.6, Spring 3.2, Spring IOC, Hibernate, Struts MVC, MySQL, JSP, HTML 5, CSS, JQuery, Java Mail, AJAX, CVS, XML, XSD, MongoDB, Oracle, Agile Scrum, TDD, SOAP (Apache CXF), WSDL, JUNIT, Ant, UML, Unix, GIT, Oracle 11g, Jenkins, Angular JS, Javascript, NodeJS..\n\nClient:  PAREXEL ,IN\nRole: Java Developer\nDuration: May’ 13 - July’ 14\n \nResponsibilities\nDesigned use case diagrams, class diagrams, and sequence diagrams as a part of Design Phase using Rational Rose. \nDeveloped the necessary front end user interfaces in JSP's, HTML, JavaScript, CSS and AngularJS that will be integrated using Spring MVC Framework. \nDeveloped the entire application implementing MVC Architecture, integrating JSP with Hibernate and struts frameworks. \nWorked extensively on AngularJS creating Controllers. \nDesigned User Interface using Java Server Pages (JSP), Cascading Style Sheets (CSS), and XML. \nDeveloped the Enterprise Java Beans (Stateless Session beans) to handle different transactions such as bill payments to the service providers. \nDeveloped deployment descriptors for the EJB to deploy on Web Sphere Application Server. \nImplemented Service Oriented Architecture (SOA) using JMS for sending and receiving messages while creating web services. \nDeveloped Web Services for data transfer from client to server and vice versa using Apache Axis, SOAP, WSDL, and UDDI. \nUsed JMS to publish messages to queues, to be processed by message driven beans (MDB) \nExtensively worked on MQ Series using point-point, publisher/subscriber messaging Domains for implementing Exchange of information through Messages. \nDeveloped XML documents and generated XSL files for Payment Transaction and Reserve Transaction systems. \nImplemented various J2EE Design patterns like Singleton, Service Locator, Business Delegate, DAO, Transfer Object, and SOA. \nWorked on AJAX to develop an interactive Web Application and JavaScript for Data Validations. \nUsed Subversion to implement version control System. \nBuild ANT Script for the application and used Log4J for debugging. \nUsed JUnit Framework for the unit testing of all the Javaclasses. \nEnvironment: JDK 1.5, J2EE, EJB 3.0, JNDI 1.2, Hibernate 2.1, Struts 1.3, HTML, JavaScript, Angular, XML, CSS, JUnit, UML, iReport 2.0 and 4.0, Web Services, SOAP, WSDL, UDDI, AXIS 2, Ajax, Ant, Eclipse 3.3, IBM Web Sphere 6.1, DB2, subversion, Linux.\n\nClient: CME Group, Chicago, IL\nRole: Java Developer\nDuration: Nov’ 12 – April’ 13\n \nResponsibilities: \nImplemented the advance validation rule model for administering the rules against the uploaded overrides based on the business requirement. \nDesigning & developing the secured business layer for accessing the rules & persistence of the validated overrides. \nWriting Oracle Procedures and functions for persistence & managing rules that belong to the application layer of the database backend. \nDeveloped JSP, JSF and Servlets to dynamically generate HTML and display the data to the client side. Extensively used JSP tag libraries. \nDesigned and developed Application based on Struts Framework using MVC design pattern. \nUsed Spring Core for dependency injection/Inversion of control (IOC). \nUsed Hibernate Framework for persistence onto oracle database. \nCreated a Front-end application using Bootstrap, Node.js, SOA, Restful, ESB, AngularJS, JSPs, Hybris, JSF, Swing, ExtJS3.0, GWT and Spring MVC, AWS for registering a new patient and configured it to connect to database using Hibernate. \nWrote and debugged the ANT Scripts for building the entire web application. \nUsed XML to transfer the application data between client and server. \nDesigned, architected, and implemented the system enhancements which utilized PowerBuilder for dynamic front end user interface. Design includes services that encapsulate all database interaction from the front end screens. \nXSLT style sheets for the XML data transformations. \nUsed Data Access Objects (DAO) to abstract and encapsulate all access to the data source. \nUsed the JDBC for data retrieval from the database for various inquiries. \nPerformed purification of the application database entries using Oracle10g. \nUsed CVS as source control. \nCustomer collaboration over contract negotiation and Responding to change over following a plan has been achieved using Agile Development. \nWorked on agile approaches, including Extreme Programming and Test-Driven Development. \nUsed JUnit to write repeatable tests mainly for unit testing. \nUsed of 'Agile Development Methodology' and tested the application in each iteration. \nWrote complex SQL and HQL queries to retrieve data from the Oracle database. \nEnvironment: Java, J2EE, JSP, JSF, Servlets, Struts 2.0, Spring 2.0, JDBC 3.0, Web Services,Angular,Javascript, XML, JNDI, Hibernate 3.0, JMS, WebLogic,  AWS, Eclipse, Oracle 10g, HTML, Rational Rose IDE, Junit 4.0, Log4j, JavaScript 1.2, XML/XSLT, SAX, DOM.\n\nClient: Fidelity, Malvern, PA\nRole: Java Developer\nDuration: Dec’ 11 - Oct’ 12\n\nResponsibilities: \nInvolved in all the phases of SDLC including Design & Analysis of the Customer Specifications, Implementing and testing. And Designing the technical Design Documents as per the Business requirements. \nWorked on server side implementation using spring core, spring annotations navigation from presentation to other layers using Spring MVC and integrated spring with Hibernate using Hibernate template to implement persistent layer. \nImplemented Spring JMS message container listener to retrieve log objects from queue and send different destinations. \nImplemented, configured spring message sources, resource bundles for labels, message properties for internationalization. And Using JIRA to manage the issues/project work flow. \nImplemented centralized dispatch controller to pass incoming request to helper classes using Spring MVC annotations, custom annotations and java reflection technology. \nDeveloped Java Web Services using SOAP, REST, WSDL &UDDI and Spring. \nWorked on implemented directives and scope values using Angular Js for an existing webpage. \nUsed Oracle as the backend database and integrated with Hibernate to retrieve Data Access Objects. \nInvoked rest-core methods from the individual change appliers using Jersey-client library. \nUsed  Agile and Scrum methodologies for testing purpose \nDesigned and developed a unified messaging service platform using Apache. \nConfigured Hibernate configuration file to configure the data base drivers, connection pooling, session management and mapping files to map to tables in the oracle database. \n Used Oracle ADF, JDeveloper, HTML5, jQuery for all front end development.\n Developed stored procedures to implement business logic and called from hibernate using Callable statements. \n Implemented Hibernate second level of caching using configuration files and EHcache provider. \nUsed Maven, Selenium Grid to execute Selenium automation suites on different platform, browser combinations in parallel.  And Developed  and maintained  of packages, functions, application procedures, stored procedures, triggers, tables, indexes, views using Oracle PL/SQL database programming language and maintaining the DDL scripts.  \nExported Test case Scripts (Java-Selenium RC) in Eclipse IDE and modified the selenium scripts and executed. \nDeveloped User Interface Components using JSF (Java Server Faces) . Designed web module in spring framework for the J2EE application. \nWrote JSF Backing Beans for controlling the UI and writing custom components and validations. \nDesigned REST APIs supporting JSON that allow sophisticated, effective and low cost application integration. \nUsed REST API with JAX-RS for consuming web services to handle two interfaces XML and JSON. \nImplemented single ton, facade and MVC design pattern. \nImplemented cross-domain calls using JQuery, implemented call back functions to handle JSON responses. \nCommunicated with other Health Care info by using Web Services with the help of SOAP, WSDL JAX-B. \nImplemented SOA architecture using SOAP web services by JAX-WS \nCreated WSDL and WADL as a start points to develop an application. \nDeveloped RESTFUL web services on JBoss IDE using Spring Framework. \nUsed JBoss IDE with integrated server for designing, coding and developing applications. . \nDeveloped REST architecture based webservices to facilitate communication between client and servers. \nDeveloped user interface using CXF servlet, Spring and jax-ws tag Libraries to simplify the complexities of the application. \nTested REST and SOAP based application on SOAP UI Testing Tool. \nDeveloped server-side services using Java, spring, Web Services (Restful, SOAP, WSDL, JAXB, JAX-RPC), SOA (Service oriented architecture)\nIntegrated the application with Spring Quartz framework. \nTesting and production support of core java based multithreading ETL tool for distributed loading XML data into Oracle11g database using JPA/Hibernate. \nEnvironment: Java/J2EE (jdk 1.5/1.7), Spring, Spring MVC, Hibernate,Angular, JMS, Rest web services, Junit, JSF, Maven, Rest, XML, JSON, JAX-RS, JIRA, Stored Procedures, Apigee, Easy Mock, ETL, UML, JPA, Jenkins, apache\n\nClient: Zonta Technologies\nRole: Jr. Java Developer\nDuration: Aug’ 06 – Nov’ 11\n\nResponsibilities: \nDeveloped custom JSP tags for Pricing, Order Management, Product Management modules. \nWrote script for AJAX implementations in the website. \nPerformed XML Transformations from value objects to xml and from xml to Html data. \nDesigned and developed views, controller and model components implementing Struts Framework. \nPerformed unit testing using JUnit. \nDeveloped the Logging framework using log4j. \nImplemented Design patterns for recurring problems.\nDeveloped Web Services which are published on to the Websphere application server. Implemented \"Model View Controller (MVC)\" architecture to obtain \"Layered Architecture\" to isolate each layer of the application to avoid the complexity of integration and customization.\nUsed WebLogic server as the application server to host the EJB's. \nUsed Eclipse IDE for developing the application. Used SVN for version control. \nResponsible for development of DAO's (Data Access Objects) to interact with the database using JDBC. \nUsed ANT to build the deployment JAR and WAR files. \nTested web services using SOAP UI. \nLog4j was used to log both User interface and Domain Level Messages. \nEnvironment: Java, J2EE, J2EE, JSP, Rational Rose, Servlets, Struts Framework, JavaScript, Oracle and BEA WebLogic Server, ANT, SVN, Log4J.\n\nEducation\nJawaharlal Nehru Technological University\n2008\n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "collaboration",
        "communication",
        "css",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "mongodb",
        "mysql",
        "node.js",
        "oracle",
        "rest api",
        "scala",
        "scrum",
        "sql"
    ]
}