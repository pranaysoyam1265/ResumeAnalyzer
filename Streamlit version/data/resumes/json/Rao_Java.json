{
    "id": "resume_d9776e38-7a2b-4bda-8790-7bed5689c228",
    "metadata": {
        "filename": "Rao_Java.docx",
        "processed_date": "2025-09-24T08:45:49.251522+00:00"
    },
    "raw_text": "Rao\nraojavadev7@gmail.com\n201-701-3757\n\nOBJECTIVE\nHad 8 years of IT experience in all phases of Software Development Life Cycle (SDLC) such as Planning, Analysis, Design, Implementation, Testing and Maintenance of Web Based, Client-Server, Dev-ops tools, Software Configuration and Build/Release Management and N-tier Architectures in domains like Insurance, Healthcare and Finance. I had a wide knowledge and proven experience in web development and maintenance. I am self-starter, quick learner and capable of working independently to achieve milestones and deadlines. I am adept at prioritizing, tracking and completing tasks to accomplish project goals.\n\nPROFESSIONAL SUMMARY\nExperience in providing technical solutions for business applications in development, designing, testing, building frameworks and implementing web-based Client-Server and Middleware multi-tier distributed environments using Java, J2EE.\nExperience in implementation of Web-based and Stand alone applications using concepts of Object Oriented Design (OOD), Object Oriented Analysis (OOA),Object Oriented Programming (OOP).\nHands on experience with various application design patterns like MVC, MVVC, MVP and GWT.\nDesigned and developed software applications using Java, Multithreading, Servlet, AngularJS, Bootstrap 3, JSP, JSTL, HTML, JavaScript, Ext JS, Groovy, Grails, EJB, JMS, XML, XSL, JSF, Ajax, JQuery, Adobe Flex 3, GWT, ADF etc.\nUsed Angular 2, TypeScript, Webpack, ES6 Features to develop the application. \nTurn mockups and design into pages complete with HTML/HTML5, CSS/CSS3, JavaScript and Angular2.\nExperience with Java 1.8 features such as Lambda Expressions for making anonymous inline function calls by using functional Interfaces which makes code readable and concise. \nWorked with Java 1.8 Streams API and parallel Streams API for enabling parallel processing of collections in distributed environment.\nHands on Experience in developing and designing the Micro Services using REST framework and Spring Boot. \nHands on Experience in designing and implementing AWS Solutions using EC2, S3, EBS, Elastic Load balancer (ELB), VPC, Lambda. \nUtilized AWS EC2 instances for application installation and preferred S3 buckets for the storage.\nExpertise in developing the Web-Based application by implementation of frameworks like Struts (Struts, Tag Libraries and Struts custom validation rules, Tiles), Spring (Spring MVC, Spring Web Flow, Spring IOC, Spring AOP, Spring Security, Spring Boot, Spring Data, Spring Batch), AJAX frameworks (Rich Faces, My Faces) and ORM frameworks like Hibernate and Mybatis.\nExpertise in implementing Web Services, related technologies & frame works: WSDL, SOAP, REST, JAX-WS, JAXB, JAX-RPC, AXIS and Jersey, SOAP UI and producing client utilizing Eclipse for Web Services consumption.\nDiverse experience utilizing tools in N-tier and Micro services architecture applications using Spring Boot, Spring Cloud config, Netflix OSS components(Eureka, Zuul, Hystrix), Pivotal Cloud Foundry, AWS, Rabbitmq, Kafka, Zookeeper, Cassandra, MySQL, Restful Web Services.\nHands on Experience in core java concepts like Collection Framework, Multi-threading, Generics, Annotations, Serialization, Thread pools, JavaBeans, Externalization\nExperienced in XML technologies like DTD, XSD, XSLT and parses like DOM, SAX and JAXB.\nHands on Experience at writing composite SQL queries, procedures, Triggers and stored procedures in various databases such as MySQL, Oracle and Cassandra.\nMade the integration of data in several applications in favor JSON documents with dynamic schemas using MongoDB (NoSQL) database. \nWorked on Node.js and MongoDB data store procedures to satisfy various business requirements of the application.\nExperienced in Middleware persistence framework like Hibernate/JPA for mapping Java classes with database and utilizing Hibernate Query Language (HQL).\nInstallation and configuration of Active MQ, Open MQ, IBM MQ Series and caching software like Oracle Coherence, Redis, Memcached and IBM ExtremeScale.\nExperienced in managing the security part of the application using technologies related to SSO.\nSingle sign-on (SSO) and multi-factor authentication with this property a user logs in with a single ID and password to gain access to a connected system or systems without using different usernames or passwords, or in some configurations seamlessly sign on at each system.\nInvolved in Authorization, Authentications & SSO using LDAP & AD.\nExperience in configuring and deploying the applications on application servers like WebSphere, Weblogic, JBoss and Glassfish.\nExpertise in performing the unit testing using JUnit, integration and deploying the applications using tools such as ANT and Maven, debugging through log4j.\nExperienced in developing Automation Scripts using Selenium Web-driver\nExperienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications. Used Apache Active MQ and Apache Camel providers.\nActively involved in the DevOps streamlining process through Jenkins CI and CD Release Automation.\nStrong working experience in Cloud technologies like Pivotal Cloud Foundry (PCF), spring boot, Spring Cloud Config Server (SCCS), Jersey in spring boot, Service Registry (Eureka) on new development project as well as migration to traditional project on Cloud.\nExperience in implementing security models OAUTH2 and SAML for authentication/authorization using Spring Security and IAM Cloud Security. \nExperience in deploying the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS, Netflix Eureka.\n Strong technical, administration, &mentoring knowledge in Apache Spark and Datastax Cassandra.\nExperienced in using streaming software like: Apache Storm, Kafka, Spark, RabbitMQ and integrating with APIs [Restful] with APIGEE and Layer7 \nExperienced in designing and developing asynchronous event based framework based on messaging infrastructure to process huge volume of messages using Solace queues, Apache Kafka, Storm and Zookeeper. Knowledge and experience in job work-flow scheduling and monitoring tools like Oozie and Zookeeper.\nKnowledge in testing web application vulnerabilities, OWASP is used as a guide in this review and testing process.\nExperienced in using JSON as the data exchange format and Swagger to provide the contracts between UI and middleware.\nExperience in writing shell scripting for deployment process and expertise in sharing files between Linux boxes and windows using the WinSCP, a secure FTP, SCP client for Microsoft Windows\nExperience in developing unit testing frameworks using JUnit, JMeter, DB Unit, Mockito and Groovy Spock based on test first or test driven methodology.\nExperienced in designing and implementing sw business rules using DROOLS framework. \nExperience in handling HP Fortify issues, Sonar, PMD.\nExtensive experience with Java complaint IDE’s like IBM RAD , IBM WSAD, Eclipse, Spring  STS and Intellij IDEA.\nWorked on production 0 for the client and business user application. Also supported critical business applications as L2 production support engineer.\n\nTECHNICAL SKILLS\nPROFESSIONAL EXPERIENCE\n\nClient: Express Scripts\t\t\t\t\t\t\t\t                          Jan'17-Till date\nLocation: Franklin lakes, NJ\nRole: Full Stack Developer\n\nDescription: The Health Evaluation System is developed for the doctors who can use the system and give the details to the patients by the printout. This system will have all the information regarding the health related issues. Using this system doctor will get all the types of medicines for any type of health issues. The system will store all the information regarding health issues and their medications for different ages.\n\nRoles & Responsibilities:\nInvolved in analysis, specification, design, and implementation and testing phases of Software Development Life Cycle (SDLC) and used agile methodology (SCRUM) for developing application.\nUpgraded existing UI with HTML5, CSS3, JavaScript, Ext Js and Bootstrap with Angular interaction.\nUsed Angular 2.0 for Router to build single page applications for navigation through the different status and multiple modals. \nUsed Angular 2.0 forms like Template Driven forms and Modern Driven (Reactive) forms to perform form validations both on server and client side.\nUsed JSP, JQuery, AJAX and JSON for implementing presentation layer as well as MAVEN and Node Js server for deploying EAR files.\nUsed Java 1.8 features like stream API and Lambda expressions.\nMaintained Interface compatibility and concurrency in the project using Java 1.8 new features like default, static methods and Concurrency API.\nDeveloped various helper classes needed following Core Java multi-threaded programming and Collection classes.\nInvolved in migrating monolithic application in Microservice Architecture and Developed Micro-services using Pivotal Cloud Foundry platform build upon Spring Boot Services.\nDesigned and developed Micro Services business components using Spring Boot.\nWorked on the REST Web Services and used Spring Framework and developed the Spring Features like Spring Core, Spring IOC, Spring AOP, Spring Data Access, and spring web test, Spring MVC, Spring DAO, Spring Boot, Spring Batch, Spring Security, and Spring Integration..\nDeveloped messaging module using Spring JMS, Apache Camel and Kafka.  \nUsed Spring AOP Module to implement logging in the application to know the application status.\nDeveloped an API to write XML documents from a database. Utilized XML and XSL Transformation for dynamic web-content and database connectivity. \nDesigned and developed third-party payment services, REST Web Services to offer users convenient payment methods using various APIs provided by various third-party payment processors based on OAuth 2.0 protocol.\nDeveloped the persistence layer using Hibernate Framework, created the POJO objects and mapped using Hibernate annotations and Transaction Management.\nInvolved in multi-tiered J2EE design utilizing Spring Inversion of Control (IOC) and Hibernate.\nInvolved in testing the applicable code using JUnit..\nResponsible for creation and execution of automation test scripts using Selenium, Webdriver.\nWritten SQL Queries and stored procedures to interact with OracleDB.\nConfiguring and maintaining the database PL/SQL. \nWorked with NoSQL Cassandra to store, retrieve, and update and manage all the details for Ethernet provisioning and customer order tracking.\nDeveloped custom Apache Spark batch job programs in Scala to create recommendations based on customer data.\nUsed JIRA to assign, track, report and audit the issues in the application. Configured and customized logs using Log4J. \nConfigured CICD pipeline by setting up Build, test, & deploy automation Jobs in Jenkins using Conditional Build steps pipeline by integrating Jenkins, Maven and Artifactory.\nInstalled, configured SonarQube and continuously integrated the issues.\nEmployed fail safe and circuit breaker patterns for the first time in Client's email applications using Hystrix and Hystrix Dashboard in Spring Boot Micro Service Applications. \nImplemented Single Sign On (SSO) to define the user roles and access\nDeployed the Application into Docker container and made easily accessible at runtime using Cloud Foundry and other cloud services like AWS, Netflix Eureka. \nResponsible for creating an instance on Amazon EC2 (AWS) and deployed the application on it and responsible for maintaining and expanding our AWS infrastructure using AWS (EC2/EBS).\nUtilized Amazon Web Services (AWS) EC2 to deploy Docker containers.\nResponsible to maintain the networking from AWS cloud back to On-Primary connectivity and no direct internet access from AWS cloud VPC to the rest of the world (Internet). \nInstalling and configuring the applications like docker tool and kubernetes for the orchestration purpose. \n Using Chef deployed and configured Elastic search for log analytics, full text search, application monitoring in integration with AWS Lambda and CloudWatch. \nCreated dynamic routing/load balancing capability enabling large application scaling for high availability.\n\nEnvironment: Agile(SCRUM), HTML5, CSS3, Bootstrap, JavaScript, JQuery, Ajax, AngularJs, AWS, Micro Services, Spring MVC, Hibernate, Spring, Oracle, Spring Batch, Spring Boot, Spring Security, JSON, XML, GIT, JUnit, Maven, JMS, Apache Tomcat, WebSphere, Rest Restful, JAX-RS, Log4J, SOA, JIRA, Jenkins.\n\nClient: \tBCBS\t\t\t\t\t                                                                                  Sep’15 – Dec'16\nLocation: Dallas, TX\nRole: Full Stack Java Developer\nDescription: Blue Cross and Blue Shield is an insurance company owned by its policyholders. This application was created to help individuals and families easily shop for and buy health insurance. BCBS offers a variety of insurance plans, as well as tools to help to help you choose the plan that’s right for you.\nRoles &Responsibilities:\nInvolved in Daily Scrum (Agile) meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint.\nExtensive experience on DevOps essential skills like continuous integration, continuous deployment, continuous delivery, supporting Build Pipelines Release management and cloud computing.\nInvolved in the front end using JSP, HTML5, CSS3, JavaScript, and AJAX.        \nUsed AngularJs to create views to hook up models to the DOM and synchronize data with server as a Single Page Application. \nInvolved in development of Agent Verification System using Spring MVC framework. \nUsed Spring AOP for logging, auditing and transaction management to distinguish business logic from the cross-cutting concerns. \nImplemented the application using Spring IOC, Spring MVC Framework, spring Batch and handled the security using Spring Security.\nWorked on Single Sign On application using LDAP directory service for secure authentication and assigning roles based on the login id.\nImplemented Web-Services to integrate between different applications components using Restful Web Services by using Jersey.\nInvolved in identifying and implementation of different J2EE design patterns like Service Locator, Business Delegate, and DAO. \nImplemented business logic using Array list, Map and Sets of Collections API.  \nDeveloped Web Services component using XML, WSDL, and SOAP with DOM parser to transfer and transform data between applications.\nUsed apache common digester to parse data from XML files and populate data into java beans. \nCreated data model and generated Hibernate mappings and domain objects using Hibernate tools.\nInterfaced with the MySQL back-end database by integrating spring with Hibernate.\nExtensively used hibernate named queries, criteria queries, Hibernate Query Language (HQL) and Optimistic Locking and Caching to process the data from the database.\nDesign and Coding the core framework using J2EE, Spring Boot, Jersey, Cloud technologies (SCCS, Eureka, encryption, security groups) on Pivotal Cloud Foundry (PCF) and the services with the integration points using J2EE, spring and Informatica Web Services (JAX RPC/JAX WS)\nDeployed and Monitored Micro Services using Pivotal Cloud Foundry, also Managed Domains and Routes with the Cloud Foundry.\nPerformed deployment of applications on IBM WebSphere Application Server. \nInvolved in implementing validations, exception handling. Worked with XML, XSLT for building up & transforming the xml files. \nUsed IBM MQ and IBM Broker for transferring the data across multiple applications.\nUsed IBM MQ as Queuing mechanism to send messages to clients and interact with other systems.\nInvolved in testing the applicable code using JUnit. \nUsed ClearCase for version control and ClearQuest for bug tracking and Used Apache ANT script for building the application with the build.xml. \nUsed logging techniques provided by Log4j tool for efficient logging and debugging.\nDeveloped the application using Eclipse IDE and used its features for editing, debugging, compiling, formatting, and build automation. \nEnvironment:HTML5, CSS3, JavaScript, JQuery, AngularJs, DOJO, AJAX, JSP, Agile, Hibernate, Spring, Spring MVC, Servlets, REST, JAX-WS, Log4j, PL/SQL, Web Services, Weblogic Application Server, Oracle, JUnit, Log4j, JIRA, SVN.\n\nClient: Flag Star Bank\t\t\t\t\t\t\t\tOct'14 –Aug’15\n      Location: Troy, Michigan\nRole: Java Developer\nDescription: Flagstar Bank is a Michigan based financial organization that offers services such as commercial and personal banking, online banking services, investment and loans. This application is developed to enhance online banking facility to the customer. Banking application has various modules for account maintenance, and email notification modules\nRoles &Responsibilities:\nInvolved in SDLC requirements gathering, analysis, design, development and testing of application developed using agile methodology.\nCreated user-friendly GUI interface and Web pages using HTML, Ajax and Java script.\nJVM tuning experience by changing to heap sizes according to the requirement.\n Experience in presentation layer for front-end of the application by using NodeJS boot strap programming and HTML pages. \nUsed Spring MVC and Dependency Injection for handling presentation and business logic.\nTo maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging, User Interface exceptions, Transactions using Spring AOP. Integrated Spring DAO for data access using Hibernate.\nUsed Spring Security for Authentication and Authorization of the application.\nExtensively used JSON to parse the data from server side to satisfy the business requirement.\nUsed Apache Axis Service Engine for creating and deploying Web Service clients using SOAP, WSDL.\nUsed Web Services for creating rate summary and used WSDL and SOAP messages for getting useful plans from different module.\nImplemented persistence framework using Hibernate& handled Transaction Management using the provided data source.\nResponsible for designing Hibernate mapping files based on business logic and Object relationships.\nIntegrated spring and hibernate together and worked on developing backend components and services using Hibernate and spring.\nExtensively used HQL and SQL for querying databases. \nDeveloped Message Driven Bean for asynchronous sending Messages using JMS.\nUsed Spring JMS module for lookup for the queues and MDBs for the listeners \nEstablished Database Connectivity using JDBC, Hibernate O/R mapping with Spring ORM for Oracle. \nPackaged and deployed the application in JBoss.\nUsed Gradle tools for building and deploying the Web applications.\nAnalysis and Bug fixing of the production problems and defects along with enhancements\nImplemented JUNIT test cases for unit testing and Suites for end to end testing.\nUsed JIRA for tracking the Project Stories in Agile Methodology.\nUsed Tortoise SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.\nEnvironment: HTML, CSS, JavaScript, Bootstrap, AngularJs, JSON, XML, AJAX, JQuery, Struts, Hibernate, Spring MVC, SOAP,WSDL, HQL, SQL, JBoss, Oracle, JMS, JNDI, Maven, RMI, IntelliJ, UML, JIRA, JUNIT, Tortoise SVN, LINUX.\n\nClient: All Star                                                                                                 Nov'13 – Oct'14\nLocation: Chicago, IL\nRole: JAVA Developer\nDescription: All Star Insurance is a leading insurance company owned by its policyholders. An application is created to help individuals and families easily shop for, and buy health insurance which is used to handle insurance claims. ePAS is a secure, web-based insurance policy. Administration system allows authorized agents to quote and submit new policy applications, view policy statuses and submit policy endorsements. The system will guide the agent through the policy application and endorsement. Processes and automatically apply underwriting rules when submitting transactions.\t\nRoles &Responsibilities:\nInvolved in all phases of the Software development life cycle (SDLC) using Agile Methodology.\nDeveloped User Interface using JSP, JSTL, HTML, CSS, Java Script, jQuery.\nUsed various jQuery UI controls and corresponding Event handlers.\nTo maintain loose coupling between layers published the business layer as services and injected necessary dependent components using Spring IOC and published cross cutting concerns like Logging, User Interface exceptions, Transactions using Spring AOP. Integrated Spring DAO for data access using Hibernate. Used Spring Security for Authentication and Authorization of the application.\nImplemented persistence framework using Hibernate and Handled Transaction Management using the provided data source. Responsible for designing Hibernate mapping files based on business logic and Object relationships.\nIntegrated Spring and Hibernate together and worked on developing backend components and services using Hibernate and spring. Established Database Connectivity using JDBC, Hibernate O/R mapping with Spring ORM for DB2. \nWorked on Hibernate in Data Access Layer for mapping the java objects to relational database and SQL queries to fetch the data, insert and update the data from the database. \nImplemented SOA architecture with Web Services using SOAP, WSDL and XML using Apache CXF framework and worked on parsing the XML files using DOM/SAX parsers.\nExtensively used JSON to parse the data from server side to satisfy the business requirement.\nCreated Tables, Triggers, PL/SQL Stored Procedures, SQL queries, Joins and views for IBM DB2.\nImplemented SOAP based Web Services and used Soap UI for testing.\nUsed Spring JMS module for lookup for the queues and MDBs for the listeners.\nInvolved in Unit Testing of various modules by generating the Test Cases. Performed deployment of applications on WebSphere. Written LINUX shell scripts to identify user login information.\nInvolved in day to day handling of JIRA issues (production issues at time) that involved data inconsistencies that required to be solved in very less time.\nInvolved in Bug fixing of various modules that were raised by the testing teams in the application during the Integration testing phase.\nEnvironment: Java, J2EE, HTML, CSS, JavaScript, JQuery, JSP, JSTL, Spring, Hibernate, XML, XSD, SOAP UI, SOAP, WSDL, Log4j, JUnit, IBM DB2, WebSphere, SVN, Eclipse IDE, JIRA, Agile Methodology, Linux, Rational Rose and UML\n\nClient: Soft Pro Systems Ltd, Hyderabad, India\t\t                                                              June’11 – July’13\nRole: Java Developer\nProject: B2B solutions\nDescription: This project is mainly an Intranet application meant for employees in the organization. They are Intranet mailing System, Chatting, File Transfer and Remote Login. This project is based on the client server methodology\nRoles &Responsibilities:\nInvolved in Requirement Analysis, Design, Development and Testing of the risk workflow system.\nInvolved in the implementation of design using vital phases of the Software development life cycle (SDLC) that includes Development, Testing, Implementation and Maintenance Support in WATER FALL methodology.\nCreated user-friendly GUI interface and Web pages using JSP, HTML, CSS, AJAX, JavaScript and JQuery.\nInvolved in component development using J2EE principles and used design patterns such as Singleton, Factory and Data Access Object (DAO) in the implementation of the application.\nResponsible for designing, coding and developed the application in J2EE using Struts MVC.\nImplemented Struts framework (Action & Controller classes) for dispatching request to appropriate classes. \nUsed simple Struts Validation for validation of user input as per the business logic and initial data loading.\nAchieved synchronization of multiple threads through Multithreading and Exception Handling.\nExtensively used JSON to parse the data from server side to satisfy the business requirement.\nDeveloped Struts Action Forms, Action classes and performed action mapping using Struts. \nDeveloped RESTful and SOAP based Web Services to consume and produce data in XML and JSON.\nAnd also was involved in several custom validations Integration if Mybatis has reduced to create a JDBC connection and has eased the way of writing code. \nWritten SQL queries, PL/SQL store procedures and Triggers to fetch and store data from the database.\nUsed Log4J for application logging and notification tracing mechanisms.\nDeveloped the ANT scripts for preparing WAR files used to deploy J2EE components and deployment of the application was on Jetty.\nPrepared JUnit test cases and executed the test cases using JUnit. \nInvolved in bug fixing during the System testing, Joint System testing and User acceptance testing.\nUsed GIT to check-in and check-out and co-ordinate among team members for Version Controlling. Environment: Java, HTML, CSS, AJAX, jQuery, JavaScript, Struts, Web Services, SOAP, RESTful, JSON, XML, JDBC, SQL, MySQL, ANT, Eclipse, JIRA, GIT, Jetty and UNIX.\n\nClient: Info Tech                                                                                                                        May'09 – June’11\nLocation: Hyderabad, India\t\nRole: Jr. JAVA Developer\nDescription: This is an Intranet application for shopping online within the community. The member of the community sitting at his home or office can shop different items belonging to different categories like Stationary, Electronic Goods, Apparel, Furniture, Vehicles, Home need appliances etc. in the store belonging to that community. The mode of payment is through their membership Card. An Updated record is delivered every month to the concerned member so those dues may be deducted from his membership account. Adequate security features were incorporated into the Project. Another record maintains stock update.\nRoles &Responsibilities:\nInvolved in understanding and analyzing the requirements of the project. Followed Waterfall Methodology to implement the project. Used Java JDK features to implement the functionalities.\nDesigned and developed the User Interface using HTML, JavaScript, AJAX and CSS.\nImplemented Struts MVC design pattern and front controller pattern and used for back-end.\nDeveloped Action Class components for performing business process execution and involved in configuration of struts configuration specific xml file.\nCreated and handled Custom-Exceptions that are related to business operations. Created child Threads to improve the performance by running some independent tasks at background.\nDeveloped Server-Side components for the business services for creating Items, BOM, Sourcing Rules, and substitute.\nUsed Log4j for logging purposes during the development of the application. Used JDBC to interact with the underlying MySQL Database.\nExtensively worked on SQL for writing complex queries in the business logic layer. \nDeployed Applications on Apache Tomcat Server and used CVS as the version control manager. \nEnvironment: Java, JDBC, JDK, Servlets, Struts, JSP, Hibernate, Java Mail API, AJAX, HTML, XML, ANT, Log4J, CVS, RAD, Putty, MySQL, Mantis, Apache Tomcat, Eclipse IDE, Waterfall Methodology.\n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "cassandra",
        "css",
        "docker",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "kubernetes",
        "lambda",
        "mentoring",
        "mongodb",
        "mysql",
        "node.js",
        "oracle",
        "r",
        "redis",
        "s3",
        "scala",
        "scrum",
        "spark",
        "sql",
        "typescript",
        "webpack"
    ]
}