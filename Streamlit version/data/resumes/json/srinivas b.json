{
    "id": "resume_01aaa6fc-3ce4-4168-8da2-8f9777038798",
    "metadata": {
        "filename": "srinivas b.docx",
        "processed_date": "2025-09-24T08:45:55.560496+00:00"
    },
    "raw_text": "\nSrinivas\nSrinivasjava04@gmail.com\n315-221-3723\nOBJECTIVE:  \t\nTechnically skilled and qualified Java programmer looking for a position of a Full Stack Java Programmer to utilize my proficiency and skills in creating best interactive websites.\nProfessional Summary:\n8+ years of experience as a Full Stack Developer with solid understanding in all the phases of the Software Development Lifecycle (SDLC), this includes Analysis, Design, Development, Testing and Maintenance of Java UI applications for large Enterprise Customers.\nStrong programming skills in Java, J2EE, J2SE with extensive ability to develop scalable applications.\nExperienced in developing Web UI Applications using HTML5, CSS3, Boot Strap, Java Script, Type script, Ajax, JQuery, Angular.js, React.js, Express.js, Node JS, JQuery UI and Spring MVC. \nExperience in XML related technologies like XSL, XSD, XPATH, DTD, and XML Schemas, XML Parsers like DOM & SAX. \nWorked on Lambda Expressions, Functional interfaces Stream API's, Time API, and Improvements on Collection, Concurrency, and IO improvements by using Java 8. \nHands on experience in Amazon Web Services (AWS) provisioning and good knowledge on AWS services like Elastic Compute Cloud (EC2), Simple Storage Service (S3), Glacier, Auto Scaling, IAM, Dynamo DB, Virtual Private Cloud (VPC), Route53, Cloud Watch, AWS CLI, Cloud Formation, Cloud Front, Elastic Beanstalk, ELB (Elastic Load Balancers), RDS, SNS, SWF, SES, SQS, and EBS etc. \nExperienced in AWS Dynamo DB to capture the any modification on DB. \nExtensive working with Amazon web Services like using Elastic Beanstalk, EC2 and AMI with Linux.\nAdding permissions to AWS SQS to interact with the Queue and involved in writing custom policies.\nExperienced in using Eureka Servers while deploying in EC2. \nThorough knowledge of Micro service architecture and experience in implementing several design patterns \n Designed and developed Micro service business components using Java /J2EE, Spring Boot and Implemented REST web services based on RESTful APIs. \nExpertise in design and development of enterprise level spring based web applications using Spring REST, Hibernate, EJB, Struts, Servlets, JSP for User Interface Applications.\nExperienced on spring framework applications like Spring Core, Spring AOP, Spring IOC, Spring MVC, Spring Batch, Spring JPA, Spring Security and Spring Boot and did integration to Micro services into existing system architecture.\nProficient in Spring AOP, Security, Event Handling, Spring MVC, Spring IOC Container.\n Developed DAOs (Data Access Object) using Hibernate as ORM to interact with DBMS - like MySQL, PostgreSQL, SQL server 2012, PL-SQL Oracle10g and NoSQL databases like MongoDB.\nIntegrated Hibernate in context files and configured Hibernate session factory. \nGood Experience in developing Web Services, Restful API using Jersey Framework, and SOAP using Spring-WS.  \nExperienced with web services (SOAP/RESTful) and used to scale the applications for better BOA.\nWell versed in developing SOA services and consuming the services. \nWorked on Service Oriented Architecture (SOA) such as Apache Axis web services which use SOAP, REST, and WSDL and exposure to JAXB, JAX-RPC, and JAX-RS & JAX-WS.\nBuild hypermedia-driven and implemented connectors between HATEOAS and Spring REST services.\n Improved overall performance via Multithreading, collections, synchronization, and exception handling strategies. \nUsed Apache for integration and Data Processing with Spring and for Multi-Threaded Message Consumption and worked on Zookeeper to maintain services.\nExtensive experience in using NPM, BOWER, Grunt and Gulp for build process.\nExperience with Docker images, Containers, push/pull with Spring Boot, used Jenkins for CICD and AI.\nPerform API functional testing in POSTMAN and SWAGGER.\nExperience in message streaming by using Apache Kafka. \nExperience with large-scale distributed systems using JMS, Message Queues and Spring JMS Integration. \nHands-on experience in using message brokers such as Active MQ and RabbitMQ.\nHands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon.\nStrongly associated with usage of Selenium, Jenkins, Junit and Curl for Unit and System Testing.\nExperienced on tools like JIRA for bug tracking.\nExperienced with CICD - ANT/MAVEN/GRADLE/JENKINS/CVS/GIT/GITHUB.\nExperience with web/application servers Web Sphere, Web Logic, Jetty, JBoss, and Tomcat Server.\nExperience in performing Unit testing, Integration Testing and generation of test cases using JUnit. \nExperience in working on version control tools like SVN, CVS and GIT. \nGood exposure on using IDE'S like Eclipse, Sublime Text, IntelliJ and Net Beans. \nManaged the platform over the years through Agile, Scrum and Waterfall practices \nTECHNICAL SKILLS: \n\n\nProfessional Experience:\n\n\nResponsibilities: \nWorked in a highly dynamic AGILE environment and participated in scrum and sprint meetings.\nDevelop new fronted from the ground up using HTML5, CSS3, JAVASCRIPT, JQuery, Bootstrap, AngularJS, and NodeJS as front end building Environment.\nConfigure and run gulp tasks in NodeJS runtime and handle injection, CSS pre-processing, minifying, test-running, and building-sync. \nDeveloped custom directives, Factories and Services in AngularJS and implemented code per coding standards and created AngularJS Controller to isolate the scopes to perform operations and extensively used Core Java such as Exceptions, and Collections. \nExpertise in consuming Restful web services using Node JS, AngularJS and jQuery along with JSON parsing to implement AJAX call and render the response data to User Interface. \nExtensively used Java 8 features such as lambda expressions, Parallel operations on collections, multithreading and for effective sorting mechanisms.\nUsed Streams and Lambda expressions available as part of Java 8 to store and process the data. \nDesigned and developed the framework to consume the web services hosted in Amazon EC2instances. \nWorked with AWS cloud service in creating EC2 instances and providing them roles and sometimes participated in writing custom policies and deployed applications on Elastic Bean Stalk and EC2.\nExperienced with event-driven and scheduled AWS Lambda functions to trigger various AWS resources.\nUsed AWS SDK for connection to Amazon S3 buckets as it is used as the object storage service to store and retrieve the media files related to the application and Amazon Cloud Watch is used to monitor the application and to store the logging information. \nMYSQL was used as the database for the application which was hosted in the cloud using Amazon RDS service. \nConfigured and managed AWS Glacier, to move old data to archives based on retention policy of databases/ applications. \nInvolved in AWS SQS to interact with queue and giving roles to it and involved in writing Custom policies.\nParticipated in troubleshooting issues on AWS, Netflix Eureka and Cloud environments.\nAnalysing of SOA based application with Solar/web service/apache ignite cache based systems for optimal design/usage.\nExperienced in implementing Micro Services, SOA with xml base web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach.\nWorked with the SPRING framework hibernate integration to maximize the Classical model view controller layer (MVC) Architecture. \nImplemented SPRING MVC application framework to create and configure of Java beans using SPRING IOC and used SPRING Hibernate support, transaction management. \nExperience in creating RESTful web services using Jersey, spring framework and JAX-RS.\nImplemented RESTful Web services to retrieve data from client side and made REST API calls from Angular JS and parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth1/2. \nCreating REST based Web Services by establishing links using HATEOAS from spring based Applications.\nInvolved in developing API’s and Rest API proxy using APIGEE edge and for sending mobile notifications.\nDeveloped the Web Services Client using REST, RSDL for verifying the new customer history to a connection.\nDeveloped DAOs (Data Access Object) using Hibernate as ORM to interact with DBMS - MySQL and Mongo DB.\nOptimized the full text search function by connecting to Mongo DB. \nWorked with Docker to deploy Micro-services in modern containers to increase Isolation.\nWorked on Thread handling to maintain continuity of execution and extensively implemented Multithreading concept to handle Transaction Management with isolation and propagation levels. \nInvolved in Designing Kafka messaging queues. \n Used MAVEN as a Build Process and used generating Documentation, Reporting, and adding Dependencies.\nPerformed daily Night Build & Weekly Build & Release for the product using Ant, Maven build scripts.\nUsing JUnit test in Eclipse, developed Unit test cases and test suite, Curl was also implemented to test.\nUsed Jenkins as the integration tool and improved scalability of applications on cross-platforms.\nDeployed the Application EAR and RESTful Services on JBoss Application Server.\nInvolved in Production Support and Maintenance of the application and troubleshooting of Issues on JBoss by checking logs, payments etc. \nEnvironment: Java/JDK, J2SE/J2EE, HTML5, CSS3, JavaScript, JQuery, Spring, Spring Boot, Spring Batch, Spring MVC, AngularJS, NodeJS, Ec2, S3, SDK, MySQL, SOA, JDBC, Hystrix Dashboard, AWS, Netflix Ribbon, Hibernate, REST, JSON, RESTful, Eclipse, MAVEN, JUnit, Jenkins, JBoss, Linux OS, MongoDB, GIT, PL/SQL, Docker, ANT, JIERA, Kafka, JMS.\n\n\nResponsibilities: \nResponsible for all stages of design, development, and deployment of applications.\nActive role in Test Driven Development termed as TDD apart from Agile Software Development.\nDefined and constructed layers, server-side objects and client-side interfaces based on J2EE design patterns.\nDesigned, analyzed and developed the front-end and back-end Servlets, Bootstrap for designing, HTML5, CSS3, Ajax, Angular JS, React JS for developing presentation layer.\nCreated the AngularJS app using Yeoman, Grunt and Bower and used Angular UI for component model.\nActively involved in using MVC, HTML5 to enable client-side date to meet specific criteria by applying various validation variables and used the CSS classes to provide visual feedback on validation.  \nDeveloped SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability.\nAnalyze business requirements and develop various business delegates to integrate with Middleware services like JAX-WS using SOAP and REST. \nWorked on Rest Web services for backend services used Oracle for database services and RESTful web services using Jersey for JAX-RS implementation. \nDeveloped Restful Web services for other systems to interact with our system and secured the service with Spring-Security and Oauth-1.0.\nUsed Spring MVC components to implement business layer and Spring Boot for Micro-services. \nUsed the Spring IOC feature to get Hibernate session factory and resolve other bean dependencies also used Spring framework AOP features and JDBC module features to persist the data to the database for few applications.\nUtilized spring core, AOP and security to build robust business operations with transactional support. \nConfigured hibernate with Spring ORM as part of spring and Hibernate Integration for best results.\nDeveloped the data access classes using JDBC and SQLquerylog4j for logging and SVN for version control.\nSound knowledge in SQL within Oracle, MySQL, MS-SQL Server 2012.\nImplemented the function to send and receive AMQP messages on RabbitMQ synchronously and asynchronously, and send JMS message to Apache Active MQ on the edge device.\nDeveloped unit and integration tests for existing micro services using JUnit, Mockito and Docker environments.\nDeveloped and Implemented ANT and MAVEN Scripts to automation of build process on MAVEN build tools to test the application manually and run the JUNIT Test suites.\nDeveloped ANT scripts to build and deploy the application in the WebSphere Application Server. \nUsed JIRA tool for Issue/bug tracking, monitoring of work assignment in the system \nLog4J was used to monitor the error logs and used GIT as version control tool. \n\nEnvironment: Java, J2SE/J2EE, JDK, RCP, AWS SDK, Git, Swing, JFC, Spring, Hibernate, Core Java, SOAP/Rest, Web Services, JavaScript, UML, Bower, HTML5, CSS, SASS, Sonar, WAS 8 WSDL, JIRA, JAX-WS, JAX-RS, MYSQL, JMS, Oracle, Angular JS, WebSphere, Spring, Spring Boot, Spring Batch, AJAX, jQuery, JUnit, Maven, ACTIVE MQ, Rabbit MQ.\n\n \nResponsibilities:\nContributed greatly to increase the code quality and productivity through Test Driven Development (TDD) and Agile Estimation and Planning. \nUsed AngularJS to create views to hook up models to the DOM and synchronize data with server as SPA.\nWorked extensively on the front-end side using JSP, HTML, CSS3, JavaScript and JQuery. \nDeveloped HTML and JavaScript. Developed Scripts for UNIX platform deployment.\nResponsible for JAVA, J2SE/J2EE, JBPM, EL and Java FX coding / development.\nUsed Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes.\nImplemented SOA to develop REST Based Web services using Apache Axis. \nDesigned and developed Web Services (SOAP, WSDL). Created and compiled XML Schema to generate Java Bean classes using Apache Axis.\nInvolved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements.\nInvolved in Java Multithreading to cascade multiple changes on multiple records in only one transaction\nUsing Struts Framework developed and implemented the web-based application following the MVC.\nImplemented the service layer using Spring with transaction and logging interceptors.\nFixing the bugs and developing new enhancements using JAVA/J2EE, spring, Hibernate, WebLogic.\nUsed spring framework for middle tier and Spring-hibernate for data access.\nUsed Spring MVC as Web module, involved in design, development of new Action classes to interact with business logic and Used Hibernate as ORM to map Java classes to data base tables.\nImplemented J2EE patterns, Data Access Object (DAO), Session facade, Business Delegate and Value Object.\nDeveloped and Deployed the Application on Eclipse IDE and WebLogic Web Servers. \nDeveloped build script using MAVEN to build, package, test and deployed the application in WebLogic. \nUse WebLogic fuse for remote console login, JMX management and web server console.\nUsed Ant & maven scripts for build and deployment of the application. \nUsed Eclipse as IDE tool to develop the application and JIRA for bug and issue tracking. \nCode walk through, modules integration and unit testing using JUnit and Mockito. \nUsed Log4J, Splunk for logging and tracing the messages.\nImplemented Test Scripts based on the User Requirements as specified by the Business side and Requirement document and analysing Business Requirements and handling it as per Requirements. \nProject coordination with other Development teams, System managers and web master and developed good working environment.\n\nEnvironment: Java, JSP, Servlets, Spring AOP/IOC, Spring MVC, Hibernate, XML, JBPM, HTML, JDBC, Web services, Web Services (SOAP/WSDL and REST), Multithreading, WebLogic, Mockito, Junit, Maven, Log4J, SVN, Oracle, UNIX.\n\n\nResponsibilities:\nInvolved in the analysis, design, and development and testing phases of Software Development Life Cycle.\nDeveloped N-tier client-server business application software using Model View Controller (MVC) Architecture. \nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionality Involved in writing different Design Patterns like Filter, Action, Business Delegate, Service Locater, Data Transfer Objects (DTOs) and Data Access Objects (DAOs). \nUsed Hibernate in persistence layer and developed POJO's, Data Access Object to handle database operations.\nWorked on System security with the use of SSL (Secure socket layer), encryption and used role-based security.\nJSON being light in nature was used as the chief source of communication between the server and application.\nExpertise in developing reusable and interoperable Web service modules based on micro services, SOA architecture using SOAP and RESTful and Preparation of Java and JSP coding standard checklist. \nInvolved in the development of Servlet, Struts Action classes, Business Objects, Web Services.\nInvolved in writing JSP using Bean, Logic, HTML, and Iterate Tags. \nUsed the spring validation and Tiles Framework in the presentation layer. \nDeveloped user interface using JSP, Spring Tag Libraries to simplify the complexities of the application. \nDeveloped user interface with Java Server Pages, Ajax support to speed up the application form filling. \nWSDL has been used to expose the Web Services. \nUsed Apache Axis as the Web Service framework for creating and consuming Web Service clients using SOAP and WSDL. \nSOAP has been used as a protocol to Communicate in the form of XML messages.\nImplementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC.\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts.\nDeveloped Struts Action Forms, Action classes and performed action mapping using Struts. \nDesigned various tables required for the project using Oracle database \nUsed Apache Tomcat server for deploying the application.\n Involved in writing the Maven build file to build and deploy the application. \nInvolved in writing JUnit Test Cases and Ant Build Script. \nUsed Log4J to capture the logging information.\n\nEnvironment: Java, JSP, HTML, CSS, Servlets, XML, SOAP, WSDL, Oracle, Eclipse, JAX-R, JAX-WS, PL/SQL, Apache Server, Struts, DAO, AOP Spring, MVC Spring, Hibernate, Junit, Maven.\n\n\nResponsibilities:\nInvolved in all phases of project from analysis and requirement phase to delivering the project.\nWorked in a Waterfall environment and participated throughout the SDLC process. \nImplemented Struts MVC Design pattern for the Application for the front-end appearance and log in Screens.\nDeveloped applications using Application Lifecycle Management to deliver reliable applications.\nDeveloped the view-controller components using Servlet/JSPs, JavaScript, CSS and HTML.\nWrote client side validation in Java Script.\nInvolved in creating JSP pages for presentation of the data to the end user.\nDeveloped JSP / Action servlet classes \nApplied J2EE design patterns such as MVC, Singleton, and Data Access Objects in the architecture \nUsed JDBC as DAO class to persist the data on to Oracle Database.\nWrote ANT scripts to deploy the components on Jetty Application Server.\nDid regular code reviews and fixed major bugs without side effects.\nStrict adherence to Java coding standards.\nImplementing Log4j for logging and debugging.\nPrepared JUnit test cases and executed the test cases using JUnit.\nUsed Firebug to keep track of issues.\nDeveloped the whole project on Eclipse IDE.\nInvolved in bug fixing during the System testing, Joint System testing and User acceptance testing.\n\nEnvironment: \nJava, HTML, JSP, Servlet, EJB, Struts, JDBC, Oracle 8i, WebSphere Application Server, ANT, JUnit, Java Script, Rational Rose, Dream Weaver, CSS, Ant, Log4j, Firebug, Eclipse.\n\n\nResponsibilities:\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP.\nInvolved in development, testing and implementation of the complete business solution. \nUsed Java Servlets extensively and using JDBC for database access. \nDesigned and developed user interfaces using JSP, JavaScript and XHTML. \nUsed various J2EE design patterns like Singleton, Command Pattern for the implementation of the application. \nDesigned, coded and configured server side J2EE components like JSP, Servlets, JavaBeans, JDBC, JNDI, JTS, Java Mail API, XML. \nInvolved in database design and developed SQL Queries on MySQL. \nConfigured the product for different application servers. \nInvolved in client side validations using JavaScript.\nUsed Swing Layout managers and Swing components for creating desktop application.\n\nEnvironment: Java, JDBC, Servlets, Struts, JSP, Hibernate, Java Mail API, AJAX, HTML, XML, ANT, Log4J, CVS, Eclipse, Putty, MySQL, Apache Tomcat Server.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "communication",
        "css",
        "docker",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "lambda",
        "mongodb",
        "mysql",
        "oracle",
        "postgresql",
        "r",
        "rds",
        "react",
        "rest api",
        "s3",
        "scrum",
        "sql"
    ]
}