{
    "id": "resume_154359c8-bc64-4409-9be2-80e1784d1a80",
    "metadata": {
        "filename": "kalyan das.docx",
        "processed_date": "2025-09-24T08:45:42.157683+00:00"
    },
    "raw_text": "KALYAN DAS\nSENIOR FULL STACK JAVA DEVELOPER\n+1 (816) 945 2787, k.kalyandass87@gmail.com \nSUMMARY:\nHighly Skilled Professional with having 8+ years of professional experience in designing, developing and testing internet/intranet Web-based applications, Client/Server applications, J2EE Architecture, OO Design patterns, Core Java.\nExperience in designing web/enterprise applications using Software Development Lifecycle (SDLC) methodology.\nProficient in applying design patterns like MVC, Singleton, Session Facade, Service Locator, Adapter, Visitor, Observer, Decorator, Front Controller, Data Access Object.\nVery good understanding of Model View Controller (MVC), Client Server and Multi-tier architectures.\nExcellent experience in Object Oriented Analysis and Design (OOAD), Development, Implementation and Testing of various software applications using Java, J2EE.\nExpertise in Java concepts like OOP, JAVA SWING, JDBC, JMS, Multi-Threading and JUnit.\nHands on expertise in designing, developing and deploying applications using J2EE technologies including JSP, Servlets, Spring, Hibernate, EJB, JSTL, Struts, AJAX, JDBC, JNDI, Java Beans, Web Services and RDBMS. \nExpertise in web development using HTML 4/5, DHTML, CSS, Java Script, XSL, XSLT, and XML (DOM, JAXP, JAXB).\nExpertise on Spring Boot, Spring Core, Spring ORM, Spring DAO, and Spring MVC architectures.\nProficient in implementation of frameworks like Struts, spring, JSF, AJAX frameworks (RichFaces, MyFaces) and ORM frameworks like Hibernate.  \nExcellent experience with Application Servers like JBoss, Tomcat7.x/6.x/5.x/4.x/3.x, IBM WebSphere 7.x/6.x/5.x and Oracle/BEA WebLogic 10.x/9.x/8.x/7.x/6.x \nExcellent experience with major relational databases – Oracle 8i/9i/10g, SQL Server 2000/2005/2008, DB2, My SQL.\nGood knowledge and working experience on Big data technologies like Spark, Scala, Hadoop, Map-Reduce, HDFS, Hive, HBase, Zookeeper, Kafka.\nStrong experience with MongoDB development (reports, schema design, map reduce functions) and migrations from SQL relational databases. \nExperience in building large scale web applications using JavaScript, React.js, Backbone.js, Node.js, Ext JS, jQuery.\nSolid experience of Defect/Test Management tools like JIRA, Quality Center/Test Director, Bugzilla.\nDesigning and Developing Single Page web applications (SPA) using AngularJS, and Node.js with other UI technologies/ libs such as Backbone, jQuery, Bootstrap.\nProficient in creating the Dash Boards using the Backbone.js for faster performance with AJAX calls.\nExtensive Experience in retrieving and manipulating data from backend using Database SQL queries, PL/SQL- Stored Procedures, Functions, Sequences, Triggers, Views and Packages.\nExperience in creating rules using Business Rules Engines: Drools, ILOG.\nExpertise in working on ANT, Hudson, Maven, Log4j, JUnit, Mockito, JMock, Test-ng.\nExperience in using various version control tools like SVN, CVS and IBM Rational Clear Case.\nExtensive development experience in different IDE's like Eclipse, NetBeans, JBuilder 9.x/8.x, JSource, JDeveloper.\nExcellent experience in writing ANT, Maven build scripts, providing logging facility using Log4j, Writing JUnit test cases and used Clear Quest, JMeter, Bugzilla for bug tracking.\nProficient in NoSQL DB such as Apache Cassandra DB, Mongo DB.\nExpertise in developing SOA (Service Oriented Architecture), REST and J2EE Web Services based on SOAP, WSDL, UDDI, JAX-WS, JAXB, JAX-RPC, JAX-RS using tools like Apache Axis.\nExperience working with big data and real time/near real time analytics and big data platforms like Hadoop, Spark using programming languages like Scala and Java.\nExperience in preparing project related documents using Microsoft Office Suite like MS-Office, MS-Excel, MS-PowerPoint and MS-Visio.\nExperience in Integration tools Oracle SOA Suite/BPEL/Fusion Middleware, web-methods and Apache CAMEL.\nExtensive experience in using Amazon Web Services like RDS, EC2, Redshift, SQS, SNS, Cloud Watch and S3.\nExperience in Integration of Amazon Web Services, AWS with other applications infrastructure.\nExtensive programming experience with Google Map APIs, YouTube Data APIs.\nTECHNICAL SKILLS:\nEducation:\nBachelor of Technology in Information Technology (B. Tech), Jawaharlal Nehru Technological University, JNTU, Hyderabad.\t\t\t\t\t\t\t\t\t\t\t             Class of 2009\nPROFESSIONAL EXPERIENCE:\nCitizens Energy Group - Indianapolis, IN\t\t\t\t\t\t\t                   Jan’17 - Till Date\nSenior Full Stack Java Developer\nRESPONSIBILITIES:\nWorked and developed functionalities in Agile Methodology of SDLC, and involved in Team planning and grooming sessions and Retro session in Agile environment.\nInvolved in development, deployment of Web Applications, Micro services deployed on Cloud Foundry.\nWorking with Offline First Multi-device and Multi-Platform application architecture.\nWorked on Rest Web services as well as Node Rest framework for backend services and developed backend code using Java collections including Set, List, Map, Multithreading and Exception Handling.\nWorking on AngularJS 1.5 to Angular 2.0 Code transition. With ES6 and TypeScript.\nBuilt npm libraries/packages in Node.js and Grunt Task runner for Unit testing AngularJS components as part of Test-driven development. \nPrepared Tableau reports in various subject areas like Materials Procurement Savings, Bill of Materials, Customer Service Index, Employee Productivity and Employee Safety.\nDeveloped Spring Application using Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security, and Spring DAO and middleware application using spring core framework.\nUsed Executor Service Multi-Threading in programming and developed various helper classes. \nInvolved in coding for the presentation layer using jQuery, jQuery Mobile, Node.js, and JavaScript.\nInvolved in developing iOS SOA application based on Microservices and Predix cloud.\nWorking on RESTful web services, exclusively consuming REST API with Asynchronous behavior.\nImplemented application using Spring Boot Framework and handled the security using Spring Security. \nSelected the Test Cases to be automated and performed functional testing of the front end using Selenium (IDE and Web Driver) & created Data Driven framework using JUnit.\nDesigned and Implemented Real time applications using Apache Spark and Kafka. \nWrote SQL queries and developed the back-end programs in PL-SQL for this application.\nProvided data persistence by object/relational mapping solution via Hibernate for application save, update, delete operations. \nExperience with messaging systems like Kafka, RabbitMQ\nImplemented interceptors using Hibernate and build and release Spring Boot framework. \nPerformed Unit testing, Integration Testing and generating of test cases for web applications using JUnit.\nUsed Spring (IoC) for injecting the beans and reduced the coupling between the classes. \nImplemented the Model View Controller using Spring MVC and implemented various design patterns.\nWorked on GIT for version control and bug tracking. Worked on Code integration and deployment tool Jenkins, Ansible, Docker.\nManaged local deployments in Kubernetes, creating local cluster and deploying application containers.\nWorked with Object relational databases like PostgreSQL Database and H2 database engine.\nWorked with CouchBase NoSQL database, multiple ERP connections based on RDBMS. \nUsed Node.js, Express.js to create server-side API with MongoDB.\nUsed Postman Collections for Rest API testing. JSON output was tested using Advanced REST Client or POSTMAN.\nStrong understanding of supporting JSON based RESTful web-services, integrating with the front-end.\nDevelop RESTFUL Web Services interface supporting both XML and JSON to publish printing machines operational data, also developed the code to interact with other web services.\nDeploy and debug application on Predix Platform (Cloud Bases PaaS Model) and Cloud foundry.\nENVIRONMENT: J2EE, Spring Boot, JPA, Tableau, Predix (Cloud Foundry), Ansible, JDK 1.8, AngularJS, Node.js, JUnit, Eclipse STS, Spring Framework, Agile Scrum, Rest Web Services, Postman, Postgres DB, HTML5, CSS3, Selenium Web Driver, Amazon Web Services, Apache Spark, Jenkins, Ansible, Docker.\t\t\t\t\nFreeman Health System, Joplin, MO\t\t\t\t\t\t\t     Sept’ 2015 – Dec’ 2016\nSenior Full Stack Java Developer\nRESPONSIBILITIES:\nInvolved in Requirements gathering, analysis, design, development, testing and Maintenance phases with TDD approach\nDesigned and developed the UI using HTML5, CSS3, JavaScript, Node.js, and Backbone.js, Ext JS, AJAX, and JSON.\nUsed Bootstrap for responsive design which allows users to access it from any device.\nThe presentation layer used Spring MVC to implement the MVC architecture design and facilitates user interface designed by use of JSP's and tag libraries.\nWorked on Media Queries as a complement to the Grid System of UI Bootstrap to facilitate the implementation of the responsiveness\nEnhanced user experience by designing new web features using MVC Framework like Backbone.js accommodate these advanced and fast technologies. Enhanced User Interface based on Adobe Flex.\nDeveloped entire user interface using various Ext JS components like Form panels, Tab panels, View port and Editable grids. \nInvolved in converting Hive/SQL queries into Spark transformations using Spark RDD, Scala and Python.\nDeveloped and implemented Swing, spring and J2EE based MVC (Model-View-Controller) framework for the application. \nGathered existing functionality of various products from PE BRD, HLAD and FDN.\nImplemented RUP development process on Software Development Life Cycle and done with effort estimations using Function point’s 3p estimations.\nPrepared design documents with Sequence Diagrams, Class Diagrams using Microsoft VISIO tool.\nUsed spring framework to inject services, entity services, transaction management, and concerns by factory class corresponding to the use case operation executing.\nUsed ReactJS to create views to hook up models to the DOM and synchronize data with server as a Single Page Application (SPA).\nInvolved in using spring concepts DI/IOC, AOP, Batch implementation and Spring MVC.\nImplemented Declarative transaction management using Spring AOP.\nDeployed Spring Boot based microservices Docker container using Amazon EC2 container services and using AWS admin console.\nWritten Storm topology to accept the events from Kafka producer and emit into Cassandra DB. \t\nUsed spring JDBC Template to do CRUD operations with Database.\nDesigned AWS Cloud Formation templates to create custom sized VPC, subnets, NAT to ensure successful deployment of Web applications and database templates.\nDeveloped modules in the application using micro services architecture style.\nInvolved in building and deploying scripts using Maven3.3 to generate WAR, EAR and JAR files.\nLeveraged Zeno framework for Writing Storm topology to accept the events from Kafka producer and to emit into Mongo DB.\nCreated WSDLs as per wire frames, UI pages generated client jars using JAX-WS.\nUsed Apache CXF to create SOAP based Restful web services.\nDeveloped Applications using Rule Engines, Drools 4. X and ILOG with corresponding to validate the business User Roles.\nUsed CORE and HTML5 tag libraries for expressing Java Server Faces within a view template.\nWrote AngularJS services to consume Restful web service to load data.\nExplored Spark, Kafka, Storm along with other open source projects to create a Realtime analytics framework. \nUsed SVN for version control and source repository, Used Fisheye for Code Review and JIRA for reporting Bugs.\nWorked on Column Filters of Data table using jQuery and ReactJS.\nInvolved in writing Thread Safe blocks for multithread access to make valid transactions.\nCreated continuous integration builds using Ant Jenkins, Docker, Ansible and deployed on WebSphere app server.\nDone with Web sphere server configurations, Data Sources, Connection Pooling, MQ Series Queues set up for messaging and deploying the apps on different servers in different environments like QA/IST/Production.\nUsed Google Maps API to implement location module in the application.\nUsed Spark-Streaming APIs to perform necessary transformations and actions on data model which gets the data from Kafka in near real time and Persists into Cassandra.\t\nWorked on Rest Web services as well as Node Rest framework for backend services and used MongoDB (NoSQL) for database services.\nUsed ActiveMQ messaging to set up communication between applications in ESB. And flows are created for JAX-WS and JAX-RS web services.\nParticipated in migration to DB2 data base from Oracle DB.\nFollowed coding guidelines and implemented Core Java J2EE design patterns.\nUsed IBM Clear case as version controlling system.\nInvolved in deploying the application in UNIX and to connect to see logs for fixing UAT/Production defects.\nCoordinated with Performance team to get thread dumps tuned java as well as DB code.\nENVIRONMENT: JAVA 1.6/1.7, J2EE, Servlets, JSP, Swing, Web Sphere Application Server 8.x, XML, HTML, XSD, XSLT, XPATH, JAXP, JAXB, WSDL, Maven, Java Spring MVC, SOAP, Drools, JavaScript, Jenkins, Docker, Ansible, AngularJS, Node.js, Backbone.js, Bootstrap, Ext JS, Spring frame work- Boot, DI, AOP, ReactJS, MVC, REST, JAX-RS, CXF, IBM MQ Series, RAD 8.0, JUNIT, TDD, AWS, IBM Clear Case, SOAPUI, JProfiler, Selenium, JNDI, Java/J2EE design patters, Adobe Flex, EMMA, JIRA, Ant, MongoDB, Elastic Search, HP QC, DB2, IBM Optimum tool, Google Maps API, Drools, iLog, Linux, Micro services etc.\t\t\nFNB Corporation, Pittsburgh, PA\t\t\t\t\t\t                          July 2014 – Aug’ 2015\nFull-Stack Java Developer\nRESPONSIBILITIES:\nWorked on JavaScript to validate input, manipulated HTML elements using JavaScript and AngularJS developed external JavaScript codes that can be used in several different web pages.\nCreated rule files using JBoss Drools 5 rules.\nInvolved in preparing High low-level design docs with UML diagrams.\nInvolved in PSI estimations using Fibonacci approach and divided feature into different USs.\nDeveloped the presentation layer written using HTML, CSS3, Ext JS, ReactJS and client-side validations were done using JavaScript, jQuery, and JSON.\nDesigned a responsive website using Bootstrap grid system to layout contents that fit different devices including mobile, tablet and desktop.\nConfigured Spark streaming to receive real time data from the Kafka and store the stream data to HDFS using Scala.\nWritten business logic to retrieve data from legacy systems using web methods Mainframe, Java\nAdministered and configured multiple web methods B2B installations. This included moving developed code to various environments, setting up multiple databases aliases (Oracle), partner server’s subscriptions.\nUsed multithreading extensively to improve the performance of the application.\nWorked on the Common UI layout for defining the Header, Footer and Menu using JSF Facelets.\nDeveloped Spark code using Scala and Spark-SQL/Streaming for faster testing and processing of data.\nDeveloped the application using frameworks like Struts, Java Server Faces (JSF) and Spring frameworks\nUsed AWS Beanstalk for deploying and scaling web applications and services developed with Java, PHP, Node.js, Python, Ruby, Ansible and Docker on familiar servers such as Apache, and IIS.\nDeveloped custom directives, Factories and Services in AngularJS.\nKnowledge on Apache Spark java API and worked on Drools to configure rules as per business requirements.\nImplemented EJB's session bean to maintain mobile session.\nWorked with NoSQL databases such as Cassandra, MongoDB.\nImplemented methods to validate, invalidate, keep a live session for login process and maintaining session credentials.\nImplemented Spring MVC Controller module for better handling of client request, consume RESTful Webservice and sending response back to client.\nUsed Maven repository to include all the jar files required for the JDBC Connections and JSP Tag libraries.\nDeveloped certain features of the application functionality i.e. CRUD (Create, read, update, delete) features using Backbone.js and Responsive Design.\nDeveloped REST services to talk with adapter classes and exposed them to the AngularJS front-end. Worked on Restful web services which enforced a stateless client server and support JSON few changes from SOAP to RESTFUL Technology Involved in detailed analysis based on the requirement documents\nWorked on serialize and de-serialize of data in applications using JSON\nImplemented code to consume messages from streaming data platform (SDP) using Apache Kafka.\t\nUsed Spring MVC as Web module, involved in design, development of new Action classes to interact with business logic\nDesigned, built, and deployed a multitude application utilizing almost all the AWS stack (Including EC2, MongoDB focusing on high-availability, fault tolerance, and auto-scaling).\nExperienced in build, deploy multi module applications using Maven, ANT and CI/CD services like Jenkins, Docker, Ansible.\nTransformed, Navigated, Formatted XML documents using XSL, XSLT, XPath, and XSL-FO.\nInvolved in Web sphere server configurations, Data Sources, Connection Pooling, MQ Series Queues set up for messaging and deploying the apps on different servers in different environments like QA/IST/Production.\nUsed IBM Clear Case for source code version control.\n\nENVIRONMENT: JAVA/J2EE, HTML, XHTML, DHTML, JS, AJAX, jQuery, DOJO,CSS3, Servlets, JSP, AngularJS, Node.js, Backbone.js, ReactJS, Bootstrap, XML, XSLT, XPATH, WSDL,AWS,  SOAP, CXF, REST, JAX-RS, JAX-WS, Web Logic server 10.3.3, JMS, Maven, Drools 5 , Eclipse, Jenkins, Docker, Ansible, JUNIT, MongoDB ,Mockito, Star Team, TDD, Spring MVC, Ext JS, EMMA, JIRA, Spring framework DI, AOP, Batch, Struts, Hibernate, Elastic Search, Ant, HP QC, Coherence, Rally, Apache Camel.\nKansas City Life Insurance Company, Kansas City, MO\t\t\t\t\t            Nov 2013 - June 2014\nJava/J2EE Programmer\nRESPONSIBILITIES:\nParticipated in all phases of the project like design, development, testing, enhancements and production support.\nDeveloped and supported all tiers of the application – UI/Business Logic/Database\nWorked on impact analysis to migrate existing persistence layer to Hibernate.\nCreated and injected dependency injection and to wire objects of business classes. \nExpertise in developing Web Applications using Spring Dependency Injection, and AOP for modularity.\nDesigned the Front-end screens using JSP, Servlets, HTML, and JavaScript.\nDesign & Development of User Interface module using J2EE, JSP, Servlets and Struts Framework.\nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionalities.\nProvided installation, configuration & maintenance of pre-prod and production Cloud environments including services such as Tomcat, Apache, Jetty, MongoDB, MySQL, and Jira. \nExposed the Web Services to the client applications by sharing the REST Request and Response.\nDeveloped the functionalities under Agile Methodology JIRA processes.\nPrepared documents containing detailed recommendations for automation and support, enabling business process improvements.\nLed and participated in weekly marketing meetings to build relationships with the marketing team and improve problem resolution process.\nInstalled, Configured and administered Tomcat server.\nDeveloped the application using JSP, Java Servlet, and XML.\nWorked with DB2 and Wrote SQL Queries, Stored Procedures, triggers, views and integrated SQL Queries into DAO.\nImplemented entity beans utilizing container-managed relationship for retrieving data.\nThoroughly Unit tested the application by writing test cases in JUnit for different scenarios.\nInvolved in testing, debugging, bugs fixing and documentation of the system.\nENVIRONMENT: Java, JSP, DB2, JUnit, Eclipse, WebLogic, Log4j, XML, J2EE, JSP, JIRA, Web Services. Servlets, Struts Framework.\nAxis Bank, Hyderabad, TS\t\t\t\t\t\t                            Sept 2011 - Oct 2013\nJava/J2ee Developer\nRESPONSIBILITIES:\nWorked extensively with the backend which comprised of Spring, Hibernate and JPA.\nUsed JSON and XML formats to transfer data from the server.\nImplemented Web Services to handle data from third party interfaces used tool like axis 1.4 to create web service clients.\nDeveloped AJAX based web based UI framework.\nCreated simple user interface for application's configuration system using MVC design patterns and Swing framework. \nDeveloped Servlets and JSP for performing CRUD operations on domain specific entities.\nDeveloped Service Layer using POJOs and Spring IOC.\nDeveloped Data Access Layer using Hibernate and DAO Design Pattern.\nUsed Java Message Service (JMS) for loosely coupled, reliable and asynchronous exchange of user and   real estate information among J2EE components and legacy system \nInvolved in working with J2EE Design patterns (Singleton, Factory, DAO, and Business Delegate) and Model View Controller Architecture with JSF and Spring IOC.\nUsed Apache POI API to generate excel document for data in each grid in the application.\nExtensively used Spring IOC architectural model to inject objects based on the selection of components like setter injection and Interface injection to manage the object references.\nInvolved in the development of the application based on backend Spring MVC architecture.\nUtilized Spring MVC framework to implement design patterns like IOC (Dependency Injection), Spring DAO (Data access objects), Data Transfer objects, Business objects, ORM Mappings.\nUsed the Spring DAO to handle exception for database transaction like open connections, no result, connection aborted, closing the connections etc.\nUtilized the concept of Lazy initialization and Eager fetch based on the requirements and increase the performance within the session of objects.\nENVIRONMENT: Spring, Hibernate, Swing, Oracle, Maven, Eclipse, AJAX, JSP, HTML, CSS, Java Script, XML, Servlets, Design Patterns, Web Services.\nSingleSource Computing Pvt. Ltd., Hyderabad, TS\t\t\t\t                          June 2009 – Aug 2011\nJava Developer\nRESPONSIBILITIES:\nInvolved in the software development life cycle requirement gathering, coding, testing, and implementation.\nUsed Java Message Service (JMS) for loosely coupled, reliable and asynchronous exchange of user and   real estate information among J2EE components and legacy system \nInvolved in working with J2EE Design patterns (Singleton, Factory, DAO, and Business Delegate) and Model View Controller Architecture with JSF and Spring IOC.\nInstalled, Configured and administered JBoss server.\nDeveloped UI using java swings. \nConfigured and Implemented Web Services specifications.\nDisplayed the Documents in PDF format using Spring AbstractPdfView.\nDeveloper advanced UI features (like slider, crop etc.) using jQuery.\nDynamic web pages are developed using JSP, servlet, HTML, JavaScript, XML and CSS.\nUsed CVS for version control.\nExtracted data in UI for different clients using JSON format. \nImplemented client-side validations using JavaScript \nImplemented AJAX to speed up web application \nUsed Web Developer, Firebug, and IE developer toolbar for debugging and browser compatibility \nParticipated in maintenance and production support. \nUsed Junit to test all the APIs and business logic.\nENVIRONMENT: Web Service, WSDL, spring, Swing, jQuery, HTML, JSON, AJAX, JSP, JavaScript, Web Services.XML, UML, Oracle, JBoss, CVS.\n",
    "extracted_skills": [
        "agile",
        "angular",
        "ansible",
        "aws",
        "cassandra",
        "ci/cd",
        "communication",
        "css",
        "docker",
        "ec2",
        "git",
        "hadoop",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "kubernetes",
        "mongodb",
        "mysql",
        "node.js",
        "oracle",
        "php",
        "postgresql",
        "python",
        "rds",
        "react",
        "rest api",
        "ruby",
        "s3",
        "scala",
        "scrum",
        "spark",
        "sql",
        "tableau",
        "typescript"
    ]
}