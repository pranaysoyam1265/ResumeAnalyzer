{
    "id": "resume_e66fc524-1e19-402d-92df-697efa2adc78",
    "metadata": {
        "filename": "ravikiran JALASUTRAPU.docx",
        "processed_date": "2025-09-24T08:45:49.999403+00:00"
    },
    "raw_text": "SUMMARY\n\nFull Stack Developer with 9+ years of experience in Software Analysis, Design, Development, Implementation and Testing of Object Oriented Applications and Web based Enterprise Applications using JAVA/J2EE technologies.\nExperience in Waterfall, Agile (scrum) methodologies where there is a daily SCRUM meetings to understand the status and resolve any issues and in making web pages cross browser compatible and server scripting languages.\nProficient in UI design, developed Front End using HTML, CSS, JavaScript, JQuery, Ajax, Angular JS, Bootstrap like Node JS and Backbone JS.\nExpertise in DOM manipulation using JavaScript and Angular JS. \nExperience in Core Java concepts such as OOP Concepts, Collections Framework, Exception Handling, I/O System, Multi-Threading, JDBC.\nWorked with Web Sphere Application Server, Oracle Web Logic application server, JBoss Fuse and Apache Tomcat Application Server.\nHighly experience with Java IDE’s like Eclipse, STS, RAD, IntelliJ, NetBeans.\nDesign and Develop reference implementation on jBPM for multiple teams. \nCheck images are forwarded to the appropriate channel partner based on the rules set using Drools rule engine. \nExperience in developing with various open source frameworks such as Java Server Faces (JSF), Spring  (Core, IOC, AOP, Batch, Security, Boot) Framework, Struts Framework, Tiles Frameworks and ORM Tools like Hibernate and IBatis.\nExpertise in implementing various J2EE design patterns like Singleton, Session Facade, Data Access Objects (DAO), Factory, Data Transfer Object (DTO) and Business. \nDeveloped app monitoring framework using Drools/Kafka \nExperience in working with XML technologies like XML, XSL, XSD, DTD, XSLT and parsing XML with SAX & DOM parsers. \nDesigned, developed, tested, integrated, and deployed large numbers of complex rules in rule flows, Drools Fusion and Drools CEP.\nDesigning and implementing BPM services for various domains within using tools like Apache camel\nExpertise in developing web services using SOAP, WSDL, RESTful, JAX-WS, JAX-RS, JAX-RPC.\nWorked on translation of diameter protocol for Reinvent client. Manually translated the source code of RF Server module from C, C++ to Java. Manually converted source code in C++ for Client Profile Server to C so that it can be converted to Java using the \"C to Java Translation Tool\".\nStrong skills in RDBMS implementation and development using Oracle, IBM DB2 Database Servers and hands on experience with SQL, PL/SQL.\nHands on work experience on various Enterprise Integration frameworks like Apache Camel\nGood understanding on NoSQL databases like Mongo DB.\nExperience with MOCKITO, JUnit, Log4j in developing test cases and determining application functionality.\nSubversion SVN, CVS, GIT, RTC and Visual Source Safe as versioning software tools. \nHands on experience in building tools like ANT, Maven, Gradle.\nInvolved in issue tracking and agile project management using JIRA.\nExperience in developing applications on Windows, UNIX and Linux platforms.\nHaving Experience on UNIX commands and Deployment of Applications in Server.\nDomain knowledge and business expertise in Banking, finance, Insurance, Healthcare.\n\n\nEDUCATION\n \nBACHELOR OF TECHNOLOGY COMPUTER SCIENECE  ​from VBCE , India.\n\n\n\nPROFESSIONAL PORTFOLIO\n\nClient:  Volkswagen Group of America, Auburn-hills, Michigan.\t                   \t\t                                                        \nRole: Full Stack Java Developer\nDuration:  May 2017 – till date\nProject: \n TDI Court Settlement, CCCA (Customer Care Capacity Assistance): The purpose of this project is to provide a Customer web based application which will simplify case communication with customer care team and customers, provide online process status, automate email communications throughout process, and enable customers to upload required documents. \nBack Office (BO): There are processes that allow back office agents to search for a case and perform a few of the functions to keep the case moving forward, to help the consumer move back in the process if they need to change some information, or to complete the process entirely on behalf of the consumer.\n \nResponsibilities:\n• Developing UI using Vaadin frame work and constructing the brand-new CSS style sheets and other UI based components. \n• Actively involved in mock screens development and project start-up phase. \n• Efficiently managed the tasks and working and delivering features in a fast-paced scrum environment. \n• Experience working in Agile development following SCRUM process, Sprint and daily stand-up meetings. \n• Involved in developing the UI, layout and front-end programming for web application that matches requirements of the client. \n• Prepared Technical Design documents with UML diagrams using Microsoft Visio. \n• Involved in building a single page and cross browser compatible web application using Angular-JS (Angular routing). \n• Configured Jenkins jobs, Install Plugins for generating artifacts.\n•Used WebSphere Application Server deploying various components of application.\n• Functionalities include writing code in HTML, CSS, JavaScript, JQuery, Ajax, JSON, Angular-JS, and Bootstrap with oracle    database as the backend.  \n• Worked with advanced MVC framework such as Spring-IOC, AOP, MVC and Batch which is used for implementing       backend functionality. \n• Designed and developed business components using Spring Boot \n\n• Participated in coding Spring AOP components for the Logging, Exception handling and Transactional Model to handle many         requests \n• Support & Enhancement to the existing implementation of correspondence components which are developed using EJBs, JPA      and Web Services / JMS Technologies. \n• Used Hibernate, object/relational-mapping (ORM) solution, technique of mapping data representation from MVC model to Oracle Relational data model with SQL-based schema. \n• Used Microservice architecture with Spring Boot based service through REST.\n• Used Java Message Service (JMS) for reliable and asynchronous exchange of important information for status report. \n• Working within SOA based enterprise framework to build web services for Middle Tier processing. \n• Developed SOAP based web services using WSDL, SOAP, JAX-WS and AXIS. \n• Produced as well as consumed RESTful web services using Jersey API's. \n• Followed Java & J2EE design patterns and the coding guidelines to design and develop the application. \n• Fixed defects identified during QA, UAT and Production. \n• Done with Web logic application server set up & deployed the application on it. \n• Worked with SVN which is used as a version control tool in the project. \n• Experience with Unit testing using JUnit and Mockito. \n \nEnvironment: Java 8, J2EE, Restful Web Services, Vaadin 7.0, JavaScript, Spring Framework, Hibernate, JPA, MySQL, Maven, WebLogic 12c, Junit, Oracle, CVS 1.2, Git, Angular JS.\n \nClient:  Synovus bank, New york.\t                   \t\t                                                        \nRole: Full Stack Java Developer\nDuration:  June  2015 – April 2017\n\nDescription: \nSynovus Bank is one of the growing commercial banking organization providing banking, brokerage, insurance for personal financial, small business and corporate banking services. Easy online Access was an implementation of online account management system that provides secure online access to customer accounts and keeps track of daily account activity like withdrawals, payments, and trades.  The application also provides customers with online account transfers. Transaction details are first sent to these systems for authorization to communicate with the back end systems. Thus, security of transactions is ensured. \n\nResponsibilities:\nInvolved in the complete SDLC including design of System Architecture, development of System Use Cases based on the functional requirements. \nInvolved in Daily Scrum (Agile) meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint.\nInvolved in the front end using HTML, JavaScript, JQuery, AJAX and Servlets, JSP, Struts2, JSTL.\nUsed Marionette framework to simplify the construction of large scale JavaScript applications.\nWorked with cross-browser issues related to the front end that is created using JavaScript, CSS, HTML, Angular-JS and Node-JS.\nDesigned and created Angular JS factories to make RESTful API calls by using $http and $resource to get the JSON contract.\nExperience using two-way data-binding, directives, controllers, filters, ui-routers and creating custom directives in Angular JS.\nInvolved in the development of presentation layer and GUI responsive development using JSP, HTML5, CSS/CSS3,Bootstrap& used Client Side validations were done using Node-JS, XSLT and JQuery (Masking), and Google graphs XMLDOM.\nImplemented Restful Web services to retrieve data from client side and made REST API calls from Node JS, parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth.\nSpecified, prototyped, developed and tested an object-oriented, multiplatform Java framework containing support to: data structures, common algorithms sockets, threading.\nImplemented MVC architecture using Struts2, JSP, Spring, and Hibernate and used Spring Framework to initialize managed beans and services.\nApache Camel is used to route the incoming message to the valid service queue\nKnowledge of using Apache Camel through Fuse Mediation Router\nUsed Angular, Bootstrap for rich user interface and faster performance and Angular UI Router for routing pages.\nInvolved in development of Agent Verification System using Spring MVC framework. \nUsed Java collection API extensively such as Lists, Sets and Maps.\nDevelopment SOAP and RESTFulWeb services using Apache Axis1, Weblogic, Web Service Tools, Session beans as web services, Spring MVC and Jersey. \nDesigning and implementing BPM services for various domains within using tools like Apache camel\nUsed Spring Security for Authentication and Authorization of the application.\nWorked with DROOLS engine for spring integration and validate business rule before executing in runtime. \nCheck images are forwarded to the appropriate channel partner based on the rules set using Drools rule engine. \nProvided public IP to external clients to connect them to JBoss Fuse.  \nDeveloped app monitoring framework using Drools.\nwriting packages/procedures for Java (JBOSS Fuse) facing applications \nHigh level of competency in JBoss Fuse messaging Architecture \nImplemented client-server business applications using Micro services.\nCreated data model and generated Hibernate mappings and domain objects using Hibernate tools.\nInterfaced with the NoSQL MongoDB back-end database by integrating Spring with Hibernate.\nExtensively used hibernate named queries, criteria queries, HibernateQuery Language (HQL) and Optimistic Locking and Caching to process the data from the database.\nImplemented quartz jobs for running the batch jobs based on the cron triggers configured in the spring files. \nDeveloped Unit /Integration test cases using Junit tool.\nUsed Gradle tools for building and deploying the Web applications.\nUsed JIRA tool for tracking stories progress and follow Agile methodology.\nUsed logging techniques provided by Log4j tool for efficient logging and debugging. \nDeveloped the application using Eclipse as the IDE and used its features for editing, debugging, compiling, formatting, build automation and version control (SVN). \nInvolved in Maintenance and Enhancements for the project.\nConfigured Jenkins jobs, Install Plugins for generating artifacts.\nSoftware configuration management (Automate CI&CD pipe by using Jenkins)\nDeployed in JBOSS Fuse.\nInvolving in Building the modules in Linux environment with ant script.\nEnvironment:\nJDK1.7 and 8, HTML, CSS, JavaScript, JQuery, Ajax, Angular-JS, Agile, Hibernate, Spring, Spring Security, Spring Boot, Micro services, Servlets, JSP, Struts2, Junit, SOAP, RestFul, WSDL, XML, JBOSS Fuse, BPM,JSON, SoapUI, JAX-WS, Log4j, PL/SQL, web services, Linux, Jenkins, MongoDB, Eclipse, Gradle, Junit, JIRA, SVN, Agile.\n\n\n\n\nClient:  Gogo LLC, Chicago\nRole: Sr. Java/J2EE Developer\nDuration: May 2014 – April 2015\t\nDescription: \nGogo llc  started as a simple sketch. Now, Gogo llc  deliver reliable connectivity and entertainment to thousands of aircraft worldwide, enhancing the experience for both passengers and crew.\nResponsibilities:\t\nInvolved in the complete SDLC including design of System Architecture, development of System Use Cases based on the functional requirements. \nInvolved in Daily Scrum (Agile) meetings, Sprint planning and estimation of the tasks for the user stories, participated in retrospective and presenting Demo at end of the sprint.\nParticipated in system implementation, including maintenance, user allocation, approval, design, coding, error removal, logic optimization, systems re-evaluation and documentation.\nWorked simultaneously in both production and development teams. \nDesigned and developed dynamic web pages using JSP, HTML/HTML5, CSS3, JavaScript, JQuery, and Angular-JS for single page applications. \nExperienced in developing functionalities like navigation bars, dropdown lists, custom filters and state parameters using AngularJS. \nDeveloped new business rules and enhanced the existing ones to meet client specifications using JBoss FUSE drools.\nResearch and Develop on jBPM independently. \n Automate the existing manual process in and as a jBPM workflow. \nExperience with Test Driven Development and Dockers and Node.js.\nUnit testing with JavaScript and node.js. Used Angular-JS Http to read data from web servers and process JSON data to render in the UI. \nProvided customized jBPM solutions as per client requirement. \nDefined a message store architecture necessary to support drools rule engine input processing, scalability and recovery. \nWrote various types of Business rules in the. drl and .ece using Drools rule engine for business decision-making. \nProvided guidance on jBPM to several teams. \nDeveloped internal coding using J2EE technologies based on the MVC Architecture.\nImplemented Restful Web services to retrieve data from client side and made REST API calls from Angular JS, parsed the data to project to client and handled the security and Authorization using Spring Security and OAuth.\nDeveloped Business objects using POJOs and data access layer using Hibernate framework\nAchieved Dependency injection by creating Spring services, Spring controllers and DAOs to wire objects of business classes.\nImplemented DAO pattern to fetch data from database using Hibernate to carry out various database operations and avoid redundant database access statements \nDesigned and developed business components using Spring Boot, Spring Dependency Injection (Core), Spring AOP, EhCache Framework and Spring Annotations. \nExperience programming in the JBOSS Fuse Enterprise SOA environment including JBOSS Fuse Workflow and Drools Business Rules engine \nUsed Hibernate Transaction Management, Spring/Hibernate Batch Transactions and Hibernate cache concepts.\nUsed Spring Data Framework to use the features of Spring JDBC and Spring ORM classes like JDBC Template and Hibernate Template to perform the database operations by connecting to Data sources available.\nRemoved all the XML based configurations required to build the MVC application and maintained in the classes using Spring Boot.\nUsed Spring Boot which is radically faster in building cloud Micro Services.\nUsed AWS deployment services to quickly set up a dynamic website and configured virtual servers using AWS EC2 and responsible for maintaining and expanding our AWS infrastructure using AWS EC2/EBS.\nUsed AWS S3 to store data and to retrieve the stored date very quickly and used Elastic Search for searching the document. Used AWS SNS to send messages to multiple users and delivered in an algorithmic way using AWS SQS.\nCreated new tables, Stored Procedures, functions, views, indexes and constraints, triggers and required SQL tuning to reduce the response time in the application\nFocused on Test Driven Development thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality\nUsed Maven building tool for creating EAR file to be deployed in application servers. It is also used for dependency management of code in application.\nUsed NoSQL DB like MongoDB for the proof of concept.\nUsed Mongo DB as data storage and utilized aspects like replica sets, sharding and clever document design to make service extensible scale and feature wise.\nOptimized the full text search function by connecting to Mongo DB.\nDeveloped Unit /Integration test cases using Junit tool.\nUsed JIRA tool for tracking stories progress and follow Agile methodology.\nDeveloped the application using Eclipse as the IDE and used its features for editing, debugging, compiling, formatting, build automation.\nDeployed Websphere Adapters inbound and outbound integrated ECM systems and Rule Engine to BPM\nDeployed Applications on Oracle Websphere Server.\nInvolving in Building the modules in Unix environment with ant script. \nInvolved in Maintenance and Enhancements for the project.\nEnvironment: \nJDK 1.7 and 8 , HTML5, CSS3, JQuery, Ajax, Angular-JS, Bootstrap, JSON, J2EE, Spring MVC, Micro Services, AWS, Spring Security, Spring Boot, Spring JDBC, Spring ORM, JSP, Hibernate, Restful, Stored Procedures, Websphere, RAD, Unix, log4j, , BPM, Agile/Scrum Methodology, Maven, JIRA, TDD, Mongo DB, Jenkins, GIT, JUnit, Eclipse, SVN.\t\n\nClient: Wireless Facilities Inc, CA\nRole: Sr. Java/J2EE Developer\nDuration: September  2013 - march 2014\t\nResponsibilities: \nInvolved in various phases of Software Development Life Cycle (SDLC).\nUsed Rational Rose for the Use Case Diagrams, Object Diagrams, Class Diagrams and Sequence Diagrams to represent the detailed design phase.\nFront-end is designed by using HTML5, CSS3, JSP, Servlets, JSTL, Ajax, DOJO and Angular JS.\nInvolved in developing the CSS sheets for the UI Components.\nPersistence layer was implemented using Hibernate Framework and JPA.\nDeveloped various EJB components to fulfill the business functionality.\nDeveloped Session Beans to process requests from the user and used entity beans to retrieve and update customer information.\nUsed cloud platform AWS-SNS to deliver push messages to applications.\nCreated, Listed, Deleted and Purged queues on cloud platform AWS-SQS.\nUsed message queuing service provided by cloud platform AWS-SQS.\nBeans are used as persistence layer and are used to interact with the Oracle database.\nInvolved in writing Thread Safe blocks for multithread access to make valid transactions.\nUsed Apache Axis for consuming SOAP Web Services with CXF web services using JAX-WS.\nWorked on developing Restful web services using Spring Boot. \nMonitored the error logs using Log4J and fixing the problems.\nWrote UNIX Shell Scripts.\nUsed AJAX to get the dynamic behavior of the screens.\nUsed XML with SAX parser to transfer data between applications.\nWritten the Rest Services to get the data from Oracle database.\nDeveloped and deployed applications on cloud platform.\nImplemented Test Driven (TDD) Design to build testable and maintainable application. \nUsed Java/J2EE Design patterns like Business Delegate, Session Facade, Data Transfer Object (DTO) and Service Locator in the project extensively which facilitates clean distribution of roles and responsibilities across various layers of processing.\nWrote PL/SQL stored procedures, Prepared statement and used API.\nUsed Maven dependencies during implementing CXF web services.\nWrote scripts to create tables, views, indexes and synonyms required meeting developer needs. \nUsed Hibernate Transaction Management, Spring/Hibernate Batch Transactions and Hibernate cache concepts.\nPerformed CRUD operations with data in Oracle database.\nUsed Jenkins with maven for Build and Deployment. \nUsed Sonar for maintaining the code quality and JUnit code coverage. \nCreated Unit, Acceptance and Integration Test Documents and Code Review Documents.\nUsed WebSphere Application Server deploying various components of application.\nEnvironment:\nEJB, Hibernate, J2EE, Java, XML, Servlets, JSP, UML, JMS, Cloud platform, JSTL, HTML5, CSS3, JavaScript, Angular JS, AWS, Oracle, Jenkins, Ext JS, Maven, SOAP,CXF Web Services, UNIX, Ajax, CVS, Oracle, WebSphere Application Server.\nClient: Capital South Bank, FL\nRole: Sr. Java/J2EE Developer\nDuration: january 2011 - August 2013\n\t       \nResponsibilities: \nInvolved in SDLC Requirements gathering, Analysis, Design, Development and Testing of application using Agile Model\nInvolved in the development of presentation layer and GUI responsive development using JSP, HTML5, CSS/CSS3,Bootstrap& used Client Side validations were done using Angular-JS, XSLT and JQuery (Masking), and Google graphs XMLDOM.\nWrote WebServices using SOAP for sending and getting data from the external interface.\nUsed the Tiles Framework and Tag Libraries in the presentation layer to simplify the complexities of the application.\nUsed Spring Inversion of Control, to make application easy to test and integrate\nUsed Auto wired Pojo.\nFunctionalities include writing code in HTML, CSS, JavaScript, JQuery, Ajax, JSON, Angular-JS, and Bootstrap with oracle database as the backend. \nWeb application development for backend system using Angular-JS with cutting edge HTML5 and CSS3 techniques\nUtilized  Spring annotations and XML configuration for Dependency Injection\nImplemented web services for communicating by using SOAP.\nProvided connections using Spring JDBC to the database and developed SQL queries to manipulate the data.\nUsed Spring DAO concept in order to interact with database (DB2) using jdbc template.\nWorked on Web Services Testing tools like SoapUI and Parasoft.\nUsed Rational Clear Case for version control. \nDeployed Applications on Apache Tomcat Server.\nUsed CodePro Analytics to make sure all the code maintain standards.\nUsed Maven script for building and deploying the application.\nInvolved in bug fixes, enhancements and code refactoring.\nEnvironment:\nJ2EE 1.5, JSP , angular js, Spring 2.5, XML, web Services, SOA, SOAP-UI, WSDL 1.1, SAX, JavaScript, Rational Clear case, Apache Tomcat Server, HTML,CSS,XSTL,DB2, Oracle11g/10g,  Log4J 1.2, JUnit ,Maven\n\nClient:  CH Excellency pvt .ltd, Hyderabad, INDIA\nRole: Java/J2EE developer\nDuration: November 2009 – September 2010\t\nResponsibilities:\nDeveloped screens with JSP, AJAX and JavaScript, CSS, HTML.\nUtilized various JQUERY plug-ins to build Rich Internet Application (RIA) to make it look more intuitive.\nUsed JSF framework in developing user interfaces using JSF UI Components, Validation, Events and Listeners.\nDesigned the application using Agile Methodology.\nDetermined & developed the Web Services.\nInvolved in Creation of WSDL and schemas.\nMade proficient use of WSDL files. Used SOAPUI for testing the web services.\nImplemented SOA based web services, designed and built SOAP web service interface, implemented using SOAP & Apache Axis.\nInvolved in Implementation of Spring IOC container.\nExtensively used DAO design pattern, including mapping DAO objects, configuration file and classes to interact with the Sybase database.\nUsed Core Java concepts such as multi-threading, collections, garbage collection and other JEE technologies during development phase and used different design patterns.\nWrote EJB Stateless session to communicate with Controller and Service layer i.e. make the EJBcalls from Backing Beans.\nImplemented Spring JDBC template, Spring Exception Strategy and AOP. \nSet up Web Sphere Application server and used Ant tool to build the application and deploy the application in Web Sphere Application server.\nUsed UNIX Shell Scripting to update the databases and Start up the application server.\nSetting of DB2 build settings in RAD application development server.\nUsed Apache JMeter for load testing.\nMaintained code source control using SVN\nImplemented JUnit for testing.\nEnvironment:\nJava 1.5, Core Java, Spring, EJB,WSDL, XSD, JSP, AJAX, JavaScript, JFace, CSS, HTML, Web Services, Web App, SOAP, WebSphere Server, DB2 database Server, XML, JUnit, Sybase, Apache JMeter, Rational Unified Process (RUP), SVN\n\nClient:  Halcyon Softech Pvt Ltd, Hyderabad\nRole: Java/J2EE developer\nDuration: August 2008 – October 2009.\t\t\t\t                                                                         \nResponsibilities:\nDeveloped programs for accessing the database using JDBC thin driver to execute queries, Prepared statements, Stored Procedures and to manipulate the data in the database\nInvolved in resolving the Design issues and other project related problems\nDesign patterns of Delegates, Data Transfer Objects and Data Access Objects.\nDeveloped the credit check module using Servlets and JSP.\nInvolved in injecting dependencies into code using spring core module.\nCSS is used to style Web pages with user friendly guidelines.\nDeployed web components, presentation components and business components in Web Logic Application Server. \nPerformed client side validations using JavaScript.\nExtensively worked on Java server side programming using Servlets, and JSP.\nInvolved in peer code reviews and performed integration testing of the modules.\nCreated and maintained mapping files, persisting classes and transaction control in JDBC to access the database.\nDeveloped DAO objects and implemented data access layer using JPA-Hibernate to perform CRUD operations.\nDeveloped session EJB and message driven bean (MDB) to process JMS XML messages.\nImplemented servlets to handle HTTP requests for on-line requests, credit card payments, registration and bug tracking.\nExtensively worked with XML schema (XSD), XSL/XSLT, and XML to navigate in XML documents, and SAX to process and parse xml files.\nDeveloped Message Driven Beans for asynchronous processing of alerts.\nDeveloped web services SOAP, WSDL and web services clients using JAXB and XML, implemented SOAP architecture.\nEnvironment:Java 1.6,JUNIT, DB2, Rational Rose, CVS, UNIX, Struts 1.0, JSP, JDBC, EJB 2.0, ANT, XML, IBM Web Sphere, Servlets, Struts, JavaScript, JAX-WS (SOAP) web services, SAX.\n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "communication",
        "css",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "mongodb",
        "mysql",
        "node.js",
        "oracle",
        "project management",
        "rest api",
        "s3",
        "scrum",
        "sql"
    ]
}