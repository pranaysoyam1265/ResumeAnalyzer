{
    "id": "resume_6bbdc84d-ff12-42e9-887f-55839af3eb57",
    "metadata": {
        "filename": "Sahithi K.docx",
        "processed_date": "2025-09-24T08:45:51.486509+00:00"
    },
    "raw_text": "Sahiti K\n267- 404 -1719\nsahithi.javadev8@gmail.com\n\nSUMMARY\n8 years of IT experience in analysis, design, development, documentation, implementing and testing of web using Java and J2EE, Springs Framework, Struts Framework, Hibernate, Web Services (SOAP, Restful), JavaScript, HTML, CSS, AngularJS, AJAX and XML.\nSolid background in Core Java concepts like Exception handling, Multi-threading, Synchronization, Serialization, IO, Collections framework, Java Beans, Executor Services, Thread pools.\nExperience in working with open source frameworks like Spring, Struts and ORM frameworks like Hibernate and Spring JPA.\nExtensive experience using JSF, Servlets, JSP, JDBC, JMS, JSTL and JNDI.\nSDLC: Software development experience in object oriented programming, design and development of Multi-Tier distributed, Enterprise applications.\nExperienced with hands on development in various Spring components like Spring MVC, AOP, Spring IOC, Spring JDBC, Spring JPA, Spring Securities and Spring Batch, Spring Boot, Spring Microservices, and swagger apis.\nExpertise in IDEs for software development like NetBeans, Eclipse, Eclipse STS, RAD, and JDeveloper.\nExperience in working with various Application Servers like IBM Web Sphere, Web Logic, JBoss and Apache Tomcat Servers.\nExpert in frontend technologies such as HTML,HTML5, CSS, JavaScript, JQuery, Angular JS, AJAX, JSTL and JSON.\nExpertise in XML and related technologies like XSL, XSLT and parsers like JAXP (SAX, DOM) and JAXB.\nPossess work experience with middleware technologies like MQ-Series, Oracle Fusion (BPEL and OSB), Apache CAMEL.\nExperience in NodeJS, implementing NodeJS callbacks, NodeJS web server, NodeJS Restful apis.\nExperience in defining integration using Apache Camel routes and Message channels.\nExperience in defining CAMEL content based switches for flow deviation.\nProficient in OOAD Technologies developing Use Cases, Activity diagrams, Sequence Diagrams and Class diagrams using case tools like Microsoft Visio and Rational Rose.\nGood experience in working with Spring Boot, Spring Microservice,  discovery server like Netflix Eureka Server.\nExperience in Database Design, Creation and management of Schemas, writing Stored Procedures, functions, Triggers, DDL, DML SQL queries. Experience in writing SQL and PL/SQL programming.\nInvolved in building and deploying Apache ANT/ MAVEN scripts, debugging through logging frameworks like log4j, automated build tool with Jenkins.\nExpert in Various Agile methodologies like SCRUM, Test Driven Development, Incremental & Iteration methodology and Pair Programming as well as implementing Waterfall model. To track the progress of Agile process used JIRA.\nExperience in web services technologies like REST, SOAP, WSDL, JMS and Service Oriented Architecture (SOA).\nExperience in developing web application using test driven methodologies (TDD) and Junit as a testing framework..\nExperience in writing test cases using Mockito, PowerMock. Used MockMVC to write integration test cases.\nExperience in working with AWS (Amazon Web Services), EC2, RDS, Dynamo DB, S3, Cloud Formation Templates.\nExperience in dealing with CI/CD tools like Jenkins, Git Stash, Ansible, Chef, Dockers.\nExperienced in working with different operating systems Windows, UNIX, and LINUX.\nExpertise in various version control tools such as SVN, CVS, Git and Clear Case.\nExperienced in performance dealing and server scaling using tools like Wily Interscope, JProfiler, JMeter, VisualVM.\n\nTECHNICAL SKILLS\n\nEDUCATION\nBachelor of Technology in Computer Science, JNTU, India.\n\n\nPROFESSIONAL EXPERIENCE\n\nWFS, FL\t\t\t \t    \t\t\t\t\t\t\t          Aug 2015 – Present\nSenior Java Fullstack Developer\nWorld Fuel Service is a leading global fuel logistics company, principally engaged in the marketing, sale and distribution of Aviation, Marine and Land fuel products and related services on a worldwide basis. Customers value its competitive fuel prices, trade credit availability, fuel price risk management, logistical support, fuel quality control and fuel management.\nResponsibilities:\nInvolved in all the phases of SDLC including Requirements Collection, Design & Analysis of the Customer Specifications from Business Analyst.\nFollowed the Agile methodology to implement the application.\nDesigned and developed Application based on Spring framework using MVC design patterns.\nUsed Spring IOC, AOP, Spring Boot to implement middle tier.\nResponsible for writing/reviewing server side code using Spring JDBC and DAO module of spring for executing stored procedures and SQL queries.\nWorked with Core Java for business logic.\nInvolved in developing persistent layer using Hibernate framework and Spring JPA repositories.\nUsed Java Executor services to provide asynchronous implementation flow. Used Cached Thread pools to scale thread usage.\nDesigned integration of various modules using Apache CAMEL EIP (Enterprise integration pattern).\nCreated Content based switches and Message channels to provide routing and error handling in CAMEL.\nDeveloped single page applications, components using Angular JS (Angular modules, controllers, Route providers)\nPublished and consumed Web Services using REST and deployed it on WebSphere Application Server.\nImplemented microservices using Springboot, spring based microservices, and enabled discovery using Netflix eureka server\nUsed swagger to provide documents for REST apis\nUsed Jenkins, Git Stash, Ansible like CI/CD tools to make daily builds and deploys.\nUsed JSON for validation, documentation data required by a given application.\nUsed AWS Infrastructure and features of AWS like S3, EC2, RDS, ELB to host the portal.\nCreated Quality and Production instances using AWS Console and CLI tool of AWS. Used Putty and WinSCP to login.\nUsed Log4j to capture the log that includes runtime exceptions.\nCreated Web application using NodeJS, and Restful Services, and MongoDB.\nTested server side with Mocha for NodeJS.\nBuilt scripts using MAVEN that compiles the code, pre-compiles the JSP’s, built an EAR file and deployed the application on the WebSphere application server.\nUsed Git repository hosted on cloud platform.\nDeveloped the application using EclipseSTS.\nDeveloped JUnit test cases using Junit and Mockito for unit test of all developed modules.\nWrote SQL queries for Oracle Database. \nParticipated in and contributed to design reviews and code reviews.\nEnvironment: Java 1.7, J2EE, Servlet/filters, JSP, JSTL, Spring IOC, Spring AOP, Spring MVC, Springboot, Microservices, Spring REST, Spring Security, Hibernate 3.0, NodeJS, Ajax, HTML5, JQuery Angular JS, XSD, XML, Apache Camel, AWS, EC2, Elastic Load Balancing, S3, IBM WebSphere, WebSphere liberty, Tomcat, Netflix Eureka, IBM MQ, Eclipse STS, Oracle 11g, MAVEN, JUnit, Log4J, Jenkins, JProfiler, JMeter, Git, Ansible, Chef, JIRA, JUnit, Mockito, XML Spy, Fiddler.\n\n\nMedecision, Wayne, PA                 \t\t\t\t\t\t\t\t       Apr 2014 – Jul 2015\nSenior Java Developer\nMedecision is leader in Health Management, having server side web application for their different health care providers. Customer will choose different health care benefits out of the plan options available. The services will enable them to manage health insurance products, features, benefits and benefit values and attributes. Client interacts through web interface with web services written at back end to fetch data from database and select their plan benefits.\nResponsibilities:\nDeveloped the application using Agile Methodology.\nImplemented customized authentication in Spring Security to verify user-role and secure the user pages, such as login, admin/user operations, trading, portfolio etc.\nInvolved in developing the applications using Spring Framework for Dependency Injection.\nDeveloped back-end logic with Core Java using technologies including Collection Framework, Multi-Threading.\nDeveloped UI using HTML, CSS, JSP, JSON and JQuery to make Ajax calls.\nDeveloped single page applications, components using Angular JS directives.\nWrote backend scripts that performed maintenance tasks on the contract data using JDBC.\nUsed Spring IOC for dynamic bean injection.\nSpring AOP to modularize cross-cutting concerns in aspects.\nDeveloped Stored Procedures and Triggers on Oracle Database.\nConfigured Spring based Microservices and Springboot.\nImplemented and Consumed REST and SOAP Web Services.\nUsed Apache tomcat as a web server and WebLogic as an application server to deploy various components of application.\nDeveloping the application using Spring MVC Architecture with Hibernate as ORM framework.\nUsed Hibernate Cache for query to improve the application performance. \nImplemented search functionality, filtering, pagination using Hibernate Criteria Query interfaces.\nDeployed AJAX call for asynchronous data retrieval from back-end.\nUsed Maven to build and deploy the application in the server.\nUsed SVN software configuration management and version control.\nUsed Log4j for logging purposes.\nDeveloped test classes in JUnit for implementing unit testing.\nDesigned use cases, sequence and class diagrams, activities, states, objects and components. Used UML (MS Visio) for software design.\nEnvironment: Java 1.7, Java Swing, Servlets, JSP, JSTL, Spring 3.0, Spring ORM, Springboot, Microservices, REST/SOAP Web Services, Hibernate 3.0, Apache Tomcat Server, WebLogic, Eclipse, Log4J, Ajax, Oracle10g, PL/SQL, JQuery, AngularJS, NodeJS, JSON, SVN, XML, XSTL, XSD, SOAP, Amazon Web Services, Maven, Junit, PowerMock.\n\n\nFarmers Insurance, Sacramento, CA\t\t\t\t\t\t\t\t      Feb 2013 – Apr 2014\nJava/J2EE Developer\nMulticar Insurance is a web based project designed and developed for insurance agents. The agents will issue policy through this application for their customers.  Eligibility of the customers is decided based on the past records which are automatically populated by the program.  If the customer is an existing customer, then the existing rules apply.  If the customer is a new customer, then future business rules will apply.  Agents can check the status of their customers and their current policy rules. Once policy number is auto generated, then the policy details are issued to the customer.  \nResponsibilities:\nParticipated in requirement gathering and framework implementation sessions through Agile TDD methodology.\nDesigned and developed Application based on Spring framework using MVC.\nUI Layer implemented with Struts, Struts validation, JSF, JQuery, JavaScript, AJAX, CSS and HTML.\nExtensively used Core Java such as Exceptions and Collections.\nUsed AngularJS as the development framework to build a single-page application.\nAdded security features to the application using HTTPS and also password security features.\nCreated DAO classes for invoking stored procedures/queries to retrieve from Oracle database.\nUsed Maven framework to develop automated build scripts.\nEmployed Hibernate as a persistence mechanism to implement object relational mapping.\nUsed SOAP based messaging format to transfer requests and responses and validated the request and responses against XML Schema Definition.\nDeveloped PL/SQL scripts for data conversion.\nWorked on Eclipse for development and deployment of application in Web Logic Application Server.\nUsed Log4j for application logging and debugging.\nUsed Jira to access and track the bugs or defects.\nUsed GIT as source control tool.\nUsed JUnit to implement test cases to test modules.\nEnvironment: Java 1.5, Spring 3.0, JSF 2.0, JIRA, Log4j, AngularJS, XSD, Maven, Hibernate 3.0, Servlets, SOAP UI, SOAP Web service, Web Logic Application Server, Oracle 11g, PL/SQL, Rational Rose, Git, WSDL, JAXB, HTML, CSS, JUnit, JIRA\n\n\nJefferson Bank, San Antonio, TX\t\t\t \t\t\t\t\t       Oct 2011 – Jan 2013\nJava/J2EE Developer\nJefferson Bank provides funds or loans to people with small business requirements. Applicants get their loans sanctioned based on their credit history. The applicant information is maintained in a database along with the details of the loan for repayment. This data is filtered into different categories based on parameters like type of account, loan amount, due date. The filtered data is used for statistics for generating reports.\nResponsibilities:\nUsed Spring MVC framework to develop the application and its architecture.\nUsed spring dependency injection to inject all the required dependency in application.\nBeing in project I have developed screens, Controller classes, business services and DAO layer respective to the module assigned to me.\nDeveloped Graphical User Interfaces using HTML, CSS, bootstrap and JSP’s for user interaction.\nDeveloped webpages using UI frameworks bootstrap, Angular JS.\nCreated set of classes using DAO pattern to decouple the business logic and data.\nImplemented Hibernate in the data access object layer to access and update information in the Oracle Database.\nUsed various Core Java concepts such as Multi-Threading, Exception Handling, Collection APIs to implement various features and enhancements.\nWrote test cases in JUnit for unit testing of classes.\nInterfaced with the Oracle back-end database using Hibernate Framework and XML config files.\nCreated DHTML pages, used JavaScript for client-side validations and AJAX, AngularJS to create interactive front-end GUI.\nConsumed Web Services for transferring data between different applications.\nUsed Soap Web services to retrieve credit history of the applicants.\nInvolved in coding, maintaining, and administering Servlets and JSP components to be deployed on a WebLogic Application server and Apache Tomcat application server.\nWrote PL/SQL queries, stored procedures, and triggers to perform back-end database operations.\nBuilt scripts using Ant to build the J2EE application.\nUsed Eclipse IDE for developing code modules in the development environment.\nPerformed connectivity with Oracle database using JDBC.\nImplemented the logging mechanism using Log4j framework.\nUsed SVN version control to track and maintain the different version of the application.\nMentored few people in team and have reviewed design, code and test cases written by them.\nEnvironment: Java/J2EE 1.5, JSP, Servlets, Spring 2.0, Hibernate, WebLogic Application Server, XML Web service, Oracle 10g, HTML, DHTML, Bootstrap, XML, XSLT, Eclipse3.0, AJAX, JavaScript, Windows XP, JUnit3.8, Log4j, CSS, SVN.\n\n\nSynopsys, Bangalore, India\t\t\t\t\t\t\t\t\t       Feb 2010 – Aug 2011\nJava Developer\nThe objective of APM (Advanced Patient Management) is to develop a web based system to monitor the patient condition by the physician by using Latitude devices and to eliminate many office visits by a patient. In-home remote follow-up can increase patient satisfaction and improving physician workflow. The combination of device data with meaningful external sensors can provide an effective means to help manage patient health.\nResponsibilities:\nInvolved in the development of various front-end modules.\nWorked in deadline driven environment.\nDeveloping Java script modules for client side validations.\nDeveloped core Java backend tools.\nDeveloped custom tag libraries for formatting contents in JSPs.\nDeveloped and deployed EJBs on the server.\nInvolved in the production support for the application.\nDeveloped various server side components using various J2EE technologies.\nInvolved in the development of different user interface screens using JavaScript, CSS, and HTML.\nDeveloped presentation modules using Struts framework.\nDeveloped various controller components using Struts framework.\nExtensively used JDBC to access the database objects.\nExtensively involved in coding of various design patterns.\nEnvironment: Java 1.4, J2EE, Servlets, JSP, Struts, MVC, EJB, Java Beans, SQL, PL/SQL, Design Patterns, JDBC, JBOSS, Log4J, Apache ANT, JavaScript, CSS, HTML, XML, DB2, Stored Procedures, Windows.\n\n\nIndus Software, India\t\t\t\t\t\t\t\t\t\t       July 2008 – Jan 2010\nJ2EE Developer\nOnline Banking System with Advanced Security is a web-based application that allows secure online banking transactions for \nClients banking operations. The application was developed over J2EE Platform with Oracle as the back end database. This Application helps customers to check account balance, transfer funds, view transaction history, view transaction status.\nResponsibilities:\nInvolved in analysis, design and development of application and developed specifications which include Use Cases, Class Diagrams, Sequence Diagrams and Activity Diagrams.\nDeveloped server side applications using Servlets, JSP, EJBs and JDBC.\nUsed JMS for communicating various clients and its components.\nUsed Web Services-WSDL and SOAP.\nDeployed applications on WebLogic Server.\nExtensively configured the build files to different Environments\nDeveloped Session Beans which encapsulates the workflow logic\nUsed Entity Beans to persist the data into database and also used Message Driven Beans MDB to notify the bean state.\nDeveloped EJB components for middle tier component implementation and business logic implementation.\nUsed Struts the MVC framework for building web applications.\nDeveloped web pages by using HTML, CSS, JavaScript.\nDeveloped PL/SQL database scripts and written Stored Procedures and Triggers.\nCreated User guide and application support document.\nUsed CVS for the concurrent development in the team and for code repository.\nInvolved in regression testing, evaluating the response times, and resolving the connection pooling issues.\nEnvironment: Struts 1.x, Unix Shell Scripting, Java 1.4, JDBC, Servlets, JSP, EJBs, Oracle 8i, WebLogic Server 10.3, MDB, HTML, Rational Rose, CVS, PL/SQL, WSDL, SOAP, Eclipse.\n",
    "extracted_skills": [
        "agile",
        "angular",
        "ansible",
        "aws",
        "ci/cd",
        "css",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "mongodb",
        "oracle",
        "rds",
        "s3",
        "scrum",
        "sql"
    ]
}