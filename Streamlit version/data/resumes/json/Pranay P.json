{
    "id": "resume_342d2657-f9f1-4202-9484-d02cce387f4a",
    "metadata": {
        "filename": "Pranay P.docx",
        "processed_date": "2025-09-24T08:45:47.286616+00:00"
    },
    "raw_text": "Pranay \n    Email: pranaypjava@aol.com\t \t\t\tPhone: (551) 242-0224\n   Summary:\n8 plus years of IT experience in various web-based, Enterprise, Client/Server and Distributed applications using Java/ J2EE.\t\t                                                                                        \nHave extensive knowledge and working experience on Software Development Life Cycle (SDLC), Service-Oriented architecture (SOA), Object Oriented Analysis and Design (OOAD), UML and J2EE Architecture.\nExperienced in design and development of web applications using the technologies like HTML, CSS, JavaScript, Bootstrap, AngularJS and Backbone JS\nImplemented various Ajax Frameworks such as jQuery, DOJO, JSON.\nExperience in developing Web Applications with various frameworks, Jakarta Struts 2.0, Spring, Spring MVC, JSF, Servlet, JSP, JSTL and Filters.\nWorked with various modules of spring framework like Spring IOC, Spring AOP, Spring Batch, Spring DAO, Spring boot and spring web services.\nExtensively worked on Core Java concepts and expertise in collection framework\nExtensive experience in developing, implementing and maintaining an AJAX based rich client for improved user experience.\nExceptional understanding in JavaScript framework like JQuery\nExpertise in object-oriented JavaScript and framework such as AngularJS, NodeJS Familiar with Express JS and Meteor JS web application framework.\nGood Understanding of Document Object Model (DOM) and DOM Functions\nImplemented SOAP based web services by using various API’s like AXIS2, Apache CXF, strong knowledge in using WSDL and UDDI.\nWorked with JERSEY, CXF API to implement RESTFul web services, strong knowledge on JAX-RS annotations. \nExpertise in implementing the persistence logic using JDBC, JPA, Spring JDBC, Hibernate and i-batis framework.\nExperience in database programming using Oracle, SQL Server, DB2, MySQL and proficiency in developing SQL in JDBC as well as client server environments.\nExpertise in noSQL database like \t\n Good knowledge on cloud AWS, EC2, S3, RDS, Load Balancer, Auto Scaling, SQS and Amazon Simple DB.\nWorked on different Applications and Web Servers like IBM Web Sphere, BEA Web Logic, Apache Tomcat and JBoss.\nWell versed with J2EE Design Patterns like DAO, Service Locator, Value Object, Business Delegate Pattern, Front Controller Pattern, Singleton, MVC, Session facade etc\nPerformed Integration and deployment of applications using ANT, Maven, Hudson, Quick Build and Jenkins and worked on repositories like CVS, Clear Case, SVN, GIT\nWorked on Selenium to perform Automation testing and Performance testing is done by using Jmeter and Load Runner.\nDesigned and developed various integration components using JMS, MQ Series and Apache Kafka.\nStrong knowledge on working with Jasmin-Karma, Protractor for client side unit testing  \nExperience on working build tools like Grunt, Gulp.\nWorked with the package managers such as NPM and Bower.\nExpertise in writing JUnit test cases using Junit Frameworks like Mockito, JMock\n\nTechnical Skills:\n\n\nProfessional Experience:    \n\nClient: Cummins, Columbia-IN                                                                                                  Nov 2015 to till date\t\t\t\t\t\t\nRole: Full stack Java developer\nDescription:\nCummins corporation that designs, manufactures, and distributes engines, filtration, and power generation products. In collaboration with third party client at Cummins IT infrastructure team we came up with an enterprise application using ConceptWave Order Care at enterprise level and create catalog management tool for 3rd party client. \n\nResponsibilities:\n\nDeveloped Single page applications (SPA) using Angular.JS 2.0, HTML5, CSS3 using Saas for websites requiring data-rich and instant feedback on interaction.\nDeveloped Client side script using AngularJS 2.0 to consume data from Web services.\nCreated Angular JS controllers and services.\nUsed angular js 2.0 filters for filter functionality in search box and Iterator functionalities.\nBuilt great user interfaces with Modern Javascript Frameworks like React JS\nInstalled node.js and utilized the npm with Grunt for the build\nUsed Node.js Bower for UI Dependency management. Worked on bower.json and bower.rc files.\nDeveloped Server side scripting using Node JS.\nImplemented Cassandra as the NoSQL Database for JavaScript part of the application\nImplemented CRUD operations from Node JS to Cassandra by connecting them using Cassandra driver.\nUsed the Rest Templates in the spring services to call the Rest web services.\nUsed Web Services (SOAP & WSDL) to exchange data between portal and other modules \nUsed Spring framework and J2EE components, Utilized IoC, AOP and DAO modules. Developed controller classes, backend processes, complex services and database interaction Added security for service layer methods using Spring Security.\nConfigured faces-config.xml and applicationcontext.xml for Spring AOP Integration.\nDeveloped microservices as part of application architecture using Spring Boot.\nDeveloped Rest Controllers and Request Mapping methods using Spring Boot.\nDeveloped loosely coupled architecture and standalone components using Spring Boot.\nImplemented RESTFUL Web Service using JAX-RS and Jersey framework.\nIn order to support messaging system Apache Kafka is used instead of JMS services.\nWorked on Creating Kafka Adaptors for decoupling the application dependency.\nInvolved in creating the Hibernate POJO Objects and mapped from Java to MYSQL Database using Hibernate ORM.\nUsed Elasticsearch for analytics and reporting of the data.\nImplemented Elasticsearch for transport API.\nPerformed unit testing of the Angular JS part with the help of Karma, Jasmine testing framework.\nUsed Maven tool for dependency management and used Jenkins for continues integration\nWorked on creating and publishing Docker images to Docker registries and from Docker registries to azure containers\nMaintained the user accounts, RDS, VPC, RDB, Dynamo DB, SES, SQS and SNS services in AWS cloud. \nInvolved in deploying systems on Amazon Web Services Infrastructure services EC2, S3, SQS, Cloud Formation. \nDeveloped queues using AWS SQS with JMS for services to subscribe and listen events. Implemented logic to listen and to subscribe events.\nEnvironment:  Selenium, Angular js, Node js, Backbone js, React js, IOP, Spring Batch, Spring boot, Elasticsearch, Eclipse, Oracle, JBoss, karma, Jasmine, Jax-rs, Jersey, SOAP UI, AWS, EC2, S3, SQS , JSP, Servlets, JDBC, Hibernate, XML, XSLT, CSS, Saas, DOM, Grunt, GWT, Junit , GIT, Oracle1, TOAD, UNIX, Maven, Jenkins, Agile Scrum, JIRA\n\n\nClient: Abbvie Labs, Chicago-IL \t\t\t\t\t\tApr 2014 – Nov 2015\nRole: Sr. Java/UI Developer\nDescription: \nAbbvie is a pharmaceutical company that discovers, develops and markets both biopharmaceuticals and small molecule drugs. It originated in 2013 as a spin-off Abbott Laboratories. Health care application that can discover and advance innovative therapies and meet the health needs of people and societies around the globe. Involved in developing both front end and back end modules.\nResponsibilities:\nInvolved in the requirements review, Design, Development, Unit testing and Bug fixing of the system and used Agile Development methodology.\nInvolved in developing the pages using HTML 5, CSS3, Bootstrap and worked on CSS3 effects to enhance user experience as per the client requirements.\nUsed Flux application architecture to build client -side web application.\nDesigned modular and reusable React components using Flux Architecture\nImplemented client side interface using React JS.\nDeveloped various screens for the front end using React JS and used various predefined components from NPM (Node Package Manager) and Redux library.\nDeveloped complex SPA using React Router.\nUsed Backbone JS to optimize in-browser use and to load the module and to improve the Speed\nExtensively used JQUERY, JSON, AJAX and DOM scripting to create interactive web applications like message posting and auto complete form validations\nBuilt backend REST API with Node.js, Express.js.\nImplemented modules into Node JS to integrate with designs and requirements.\nManaged software packages of Node JS with NPM and the project through Github.\nUsed Async Module to control the execution flow of call backs.\nDeveloped server side application by using Node JS and Express JS for interacting with No SQL Database Mongo DB.\nImplemented Mongo DB to store and handle unstructured data.\nUsed Mongoose connector as the Driver to establish Express JS to Mongo DB connection.\nUsed Webpack module bundler for splitting the code base into multiple bundles with reactJs.\nWorked on Webpack to create the graph of application dependencies.\nUsed Babel to create the pipeline which is built out of plugins also converted JSX syntax using Bable.\nResponsible for implementing the business requirements using Spring Framework\nInvolved in user interface design using Spring Boot Framework and web based user controls\nWorked on Spring Controllers and configured using annotations to handle the presentation requests\nDeployed and consumed web services based on REST protocols using Jaxb and Jersey api.\nUsed JSTL for developing the JSP.\nUsed JAXB, JAXP for parsing auditing information in xml format\nUsed Hibernate for connecting to the database and mapping the entities by using hibernate annotations.\nWritten automation scripts using Java and Selenium and implementing automation scripts using Sauce Labs. Used jmeter for performance testing\nPerformed unit testing using JUNIT framework and Clover tools\nConfigured Log4j for adding the debugging information in the code base.\nExtensively used Mocha and Chai JavaScript unit Testing tools for testing JavaScript pages.\nInvolved in designing and developing of Object Oriented methodologies using UML and Use Case, Class.\nUsed Putty for UNIX login to check the server logs. \nProficient in using SVN version control and wrote build and deployment scripting using ANT\nSupported the application in production and used Splunk to review the production logs.\nUsed Jenkins for Continuous Integration and deployment into WebLogic application Server.\nDeployed and Monitored Micro Services Using Spring Cloud Foundry Also Managed Domains and Routes with the Cloud Foundry.\n\n\nEnvironment: Java, J2EE, jmeter, Servlets, JSP, JDBC, Spring MVC, Angular js, Node js, Backbone js, Bable , webpack, , Hibernate, Rest, Web Services, Mongo DB, Apache Ant, CVS, Design Patterns, HTML, Java Script, AJAX, XML, SQL, PL/SQL, Oracle, SQL Developer, Mocha ,chai, JUnit, JIRA, cloud foundry, UNIX\n\n\n\nClient: Taghleef Industries – Wilmington, DE\t\t\t\t                    Mar 2013 – Mar 2014\nRole: Sr. Java Developer\n\nDescription: \nFinancial Accounting software is an Intranet application, which enables to maintain the accounts and access them from various branch offices. The entire package is broadly divided into five modules, which include financial module, Orders module, Inventory module, invoicing module and Networking module. The data entered in one module updates all the other related modules.\n\nResponsibilities:\nDeveloped web interface for Users Modules using JSP, HTML, XML, CSS, Java Script and AJAX with spring frame work\nImplemented User Friendly UI design with HTML, CSS and JavaScript for client side validation and form submission functions.\nCreated Single Page Application with loading multiple views using route services and adding more user experience to make it more dynamic by using AngularJS framework.\nUsed AngularJs and jQuery to make the pages dynamic and two way data binding.\nDesigned user friendly navigation for displaying various sections of data using JQuery.\nCreated Logging aspects for auditing and logging purposes using Spring AOP and implemented security for the application using Spring Security.\nUsed Spring MVC framework for transfer the data from GUI to DB with Ajax frame work.\nImplemented Spring IOC & AOP.\nUsed Spring MVC, Spring Batch Template for object-to-relational mapping from the database and creating POJOs.\nIntegrated and implemented Hibernate with spring frame work to perform ORM for database connectivity to DB2.\nImplemented Restful services by Jax R s, CXF API’s\nUsed JMS for programs to create, send and receive messages by using different modules like publisher, subscriber messaging and point to point messaging using IBM-MQ-Series\nImplemented DAO (Data Access Object) design pattern to access data from DB2\nDesigned OAUTH framework for authorization flow for web services.\nWorked with Web Services using SOAP (WSDL), tested using SOAP UI tool and REST (WADL).\nDeveloped using J2EE design patterns like Command Pattern, Session Facade, Business Delegate, Service Locator, Data Access Object and Value Object Patterns.\nUsed WebSphere Application Server to deploy the build.\nUsed log4j for debugging the application.\nInvolved in Configuration of data source and deployment of application in development, Test and Production.\nUsed Drools for implementing business rules and validations.\nDeveloped Applications using Rule Engines, Drools. Explored Drools modules such as Drools Expert, DroolsFusion, and Drools Flow.\nGIT for version Controlling.\nExperience in writing unit test cases using Jasmine and Karma framework\nUsed J-Unit test cases to test the application and performed random checks to analysis the portability, reliability and flexibility of the project.\nDevelopment process the Scrum, Iterative Agile methodologies for web Application\nInvolved in configuration setting for Development, Test, and Production Environment.\n\nEnvironment: Eclipse, Java API, Hibernate, JDK, JDBC, JMS, Message Queues, Web services, iBatis, UML, XML,DB2,Web Sphere, Toad, Rest Services, Git, CXF, HTML, XHTML,CSS, JavaScript, Jenkins, log4j, SVN, JUnit, J2ME  and Windows  \n\nClient: PNC Bank- Pittsburgh, PA\t                                                            \tJan 2012 – Feb 2013\nRole: Java/UI Developer\nDescription: \nThis project is developed mainly to serve the huge domain of customers. The application also allows bank employees to open a new account for customers or access, modify the customer account information based upon their role. The application offers various functionalities, some of the them include Transfer Funds, Make a Payment, Set up Automatic Payments, Keep the Change, Receive the bills electronically, Request E-mail Notifications, Balance Enquiry. Etc.\n\nResponsibilities:\n\nStrongly involved in the design and development phases of the web applications and operated as an effective team member.\nDeveloped the responsive UI web pages using XHTML, jQuery, HTML, CSS, Java Script, JSF, Prime Faces, and AJAX.\nCreated web pages with CSS Box model, animations & transitions, web fonts and content & counters.\nInvolved in Design UI for Member module using JSF Framework.\nCreated Web Service using SOAP, to allow application and services to connect to them over the Internet.\nUsed Spring Core for dependency injection/Inversion of control (IOC) and implemented using Spring Annotations\nDeveloped a batch processing system with REST based APIs, using Spring Batch, integrated with Quartz scheduling.\nWorking on implementing JSF-Prime faces tree for the data model viewer alternative to visio tool. \nUsed JAX WS Security to secure the web services.\nResponsible to solve the problems using JavaScript and can hand-code it effortlessly.\nCleaned up and rewrote front end using HTML, JavaScript and CSS to meet validation requirements.\nImplemented source controls using JavaScript and JQuery and designed the functionalities based on the templates which are intuitive to the users.\nProficiently used JQuery UI widgets which reduced the amount of hand-coded program and easily maintained its modularity. \nUsed JQuery in developing the Rich Internet Applications (RIA) with AJAX mechanism and JSON as a data exchange tool.\nUsed AJAX effectively for fetching data from the Rest APIs.\nTaken care of Java multithreading in common java classes / library. Used multithreading in programming to improve overall performance.\nDeveloped and deployed Web Services in Apache CXF framework using JAX-WS.\nImplemented Web Services to integrate between different applications using SOAP services using JAX-WS.\nImplemented Oracle DB as the underlying Database of the application.\nUsed Hibernate for the Persistence layer of the application for the database connectivity.\nImplemented DAO design pattern for providing persistence as a service to the business layer.\nManaging messaging Topics using IBM MQ messaging broker.\nConfigured Weblogic Application server and deployed the web components.\nMaven was used for the entire build process and Hudson for Continuous Integration\nUsed Rational Clear Case for version control and PowerMock for unit testing. \nGenerated Use case diagrams, Class diagrams, and Sequence diagrams using Rational Rose.\nSubstantially experienced in the development methodology involved with the scrum method and the sprint cycles.\nWrote business rules using Drools and business logic processing customs declarations.\n\nEnvironment: HTML 4.01, CSS2, JavaScript, JQuery, Debugging, Eclipse Java SDK , MVC, Entity Bean, Web logic, JSP, Servlets, JSTL, Clear case, PowerMock, JavaScript, and Oracle, Hudson, TOAD, Maven\n\nClient: ICICI Bank- Hyderabad, India\t\t\t\t\t       Feb 2010 - Nov 2011\nRole: Java Developer\n\nDescription:\n\nICICI Bank is a leading financial service company. It provides online banking for customers to set up online bill payment from their Debit Card/Current Account to various merchants. Customer has various facilities like Merchant registration, Recurring Payment, Schedule a payment, Fund Transfer, Bill Info, etc. Bank is enhancing its web interface with more features and functionality to its customers.\n\nResponsibilities:\n\nActively involved in the Requirement gathering for the enhancements to the existing project. \nInvolved in Struts framework code implementation \nExtensively worked with Servlets and Struts based multitier applications in developing J2EE components. \nImplemented Action Servlet in the Struts framework to perform request mapping.\nUsed JavaScript, HTML, and jQuery for forms validations.\nDesign and Development of GUI using JSPs, JSP custom tags, Struts tags, HTML, DHTML, CSS, Applets and JavaScript. \nUsed JSTL tag library in JSP's.\nComplete Involvement in development and validation of screens using HTML and JavaScript. \nWorked on web pages with JSP, Ajax, JavaScript, CSS, DHTMLand XHTML. \nUsed core java technologies like Multi-Threading and synchronization in the application.\nInvolved in development of SOAP Web services using Apache Axis to extract client related data from databases \nCreated stubs from the WSDL for using the methods available in the Web Service. \nUsed JPA ORM frameworks for database connectivity.\nDeveloped Session, Entity beans (EJB) for crucial business Logic.\nUsed Java Messaging Services (JMS) for reliable and asynchronous exchange of important information such as payment status report on IBM WebSphere MQ messaging system.\nDeployed web, presentation and business components on Apache Tomcat Application Servers. \nUsed various design patterns like Session Facade, Singleton and Factory patterns in the application.\nUsed log4j to log messages depending on the messages type and level. \nAnalyzed client requirements, developed complex SQL query using relational database over MYSQL.\nCreated and managed data and tables using PL/SQL.\nInvolved in the analysis, design, and development and testing phases of Software Development Lifecycle (SDLC) using Agile and Waterfall methodology. \nDeployed the Web application using ANT build script. \nResponsible for Unit Testing with Junit, integration testing of software. \nUsed Rational Clear Case for version controlling and used diff merging, check-ins, check-outs, and adding new work files to source control and labeling. \nInvolved in development and deployment of application on UNIX environment. \nWorked with Unix shell scripting in the process of deployment.\n\nEnvironment: Struts, Hibernate, Servlets, JSP, HTML, Ajax, XML, JavaScript, CSS, DHTML, XHTML, ANT, Junit, JDBC, JBoss, Oracle, Clear case, Apache, log4j, JSTL, PL/SQL, SOAP, WSDL, Unix.\n\n\nClient: CMC Limited- Hyderabad, India\t\t\t\t\t                     Jan 2009 - Dec 2010\nRole: Java Developer\n\nDescription: \n\nThis Project automates the Maintenance, Auditing of Employees academic, Financial and payroll Information and having all the details of the employee’s benefits; In addition to that this application gives the Information of the Organization structure and total maintainer details of the organization\n\nResponsibilities\n\nDesign Implementation of GUI using HTML, JSP, Tiles, Validator and Java Script for front-end validations.\nDeveloped Java Sever Pages, Tiles, Validator, Action classes and EJBs for various user transactions.\nDesigning of Java Servlets and Objects using J2EE standards.\nDesigned the project by using MVC framework.\nUsed JSP for presentation layer, entity beans as the model to represent the persistent data and interacted with Oracle database as per MVC Architecture.\nCreating custom tags for JSP for maximum re-usability of user interface components.\nUsed JDBC calls in the Enterprise Java Beans (EJB) to access Oracle Database.\nDeveloped the XML Schema for the data maintenance and structures.\nWorked on building the persistence using JPA\nUsed the XML Parsers like SAX parser to parse the data.\nImplemented EJB session beans, messaging technologies like Message Driven Bean, JMS.\nInvolved to develop Multithreading for improving CPU time.\nUsed multithreading process to convert data\nUsed JUnit framework for unit testing of application and Log4j to capture the log that includes runtime exceptions\nCoded ANT build scripts to build and deploy the application on WebSphere \n\nEnvironment: Core Java, J2EE, Servlets, Multithreading, JSP, Struts, EJB, JMS, UML, Rational Rose, MQ Series, CVS, Oracle, Eclipse, Web Logic, HTML, JavaScript, JUnit, ANT, XML SAX, DOM, XSL.\n\nEducation: Bachelor’s in Computer Science & Engineering\n\n\n\n\n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "azure",
        "cassandra",
        "collaboration",
        "css",
        "docker",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "mysql",
        "node.js",
        "oracle",
        "r",
        "rds",
        "react",
        "redux",
        "rest api",
        "s3",
        "scrum",
        "sql",
        "webpack"
    ]
}