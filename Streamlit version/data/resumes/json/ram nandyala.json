{
    "id": "resume_697b5fc7-f689-411d-82df-483a4efb38f5",
    "metadata": {
        "filename": "ram nandyala.docx",
        "processed_date": "2025-09-24T08:45:48.560328+00:00"
    },
    "raw_text": "                                                                              RESUME\n\n                                                             RAMA KARTHIK NANDYALA\n                                                                MOBILE NO: (414)-858-6880\n                                          EMAIL-ID: NANDYALARAMAKARTHIK1@GMAIL.COM\n\n\n\nPROFESSIONAL SUMMARY\n\nOverall 8+ years of experience in Software design and development activities including requirement analysis, design, implementations and testing of various client server based applications using Java and J2EE technologies. \nExtensive experience in Core Java, Servlets, JSP, JavaScript, JDBC, JSTL, Struts, JSF, EJB, AJAX and Custom Tag Libraries. \nExtensive experience in working with different MVC Frameworks like Spring, Struts and ORM (Object Relational mapping tools) like Hibernate. \nExperienced working with databases like DB2, MY SQL, Oracle, MS SQL Server and Application Servers like BEA WebLogic, IBM WebSphere, Apache Tomcat.\nExpertise in developing critical & responsive GUI / front-end components using HTML, XHTML, DHTML, JavaScript, CSS2/CSS3, JSON, JSP, Servlets, Ajax, JQuery, EXT.JS, JSTL and JavaScript using frameworks like Bootstrap, AngularJS, Ext JS. \nExperience in application of MVC and MVVM client-side JavaScript frameworks such as Angular 2.0, Angular.JS, Back Bone.JS, Ember.JS, Handlebar.JS.\nExperienced on Server-side JavaScript structures like NodeJS, Hapi.JS, Express.JS.\nExperience in performing unit testing using Junit and ridiculing systems like JMock and Mockito integration and development of applications done using Ant and Maven tools. \nWorked on NoSQL databases like MongoDB and Apache Cassandra.\nSwagger usage and testing structures like Mock MVC, Mock Rest MVC.\nExperience in Integration of Amazon Web Services AWS application like Amazon EC2, Amazon S3, Amazon Simple DB, Amazon Elastic Load Balancing, Amazon SQS, Amazon EBS and Amazon Cloud Front. \nExperience in conveying and arranging application servers, for example, IBM WebSphere, Oracle WebLogic, Jboss and Apache Tomcat.\nExpertise in Database Drivers Like JDBC, Spring JSBC to summon DB stores strategies. \nExperience in ORM systems like Hibernate, Spring information, IBatis and JPA. \nExtensive experience with Frameworks in ORM (Hibernate) and Spring (Spring MVC, Spring Context, Spring DAO, Spring AOP, Spring Batch Spring Security).\nExperience in using test tools like Selenium for Unit and Integration Testing and used Cucumber for Acceptance Testing.\nSound learning on bundle directors, for example, NPM, Bower, Web pack.\nExtensive working background with different J2EE Frameworks like Spring MVC, Struts, JSF and master level aptitudes in spring system modules like Spring Batch, Spring Security, Spring Boot, Spring Cloud, Spring JTA, Spring AOP. \nProfound learning on Maven, Gradle, ANT as fabricate content for application assemble and arrangement. \nWorked under a business rule management system (BRMS) like Drools.\nWorked on utilizing Rabbit MQ, IBM MQ, Apache Kafka as a Message Oriented Middleware for coordinating applications.\nStrong learning in SOAP, WSDL, and RESTful for trading organized data in the usage of web administrations. \nDeveloped small scale administrations like RESTful web benefit JaxRS with Jersey, Apache CXF.\nExtensive experience using Spring Framework in business layer for Dependency Injection, AOP, Spring MVC, transaction management and using Hibernate as a persistence layer. \nExperienced in utilizing source code variant administration apparatuses like SVN, GIT and undertaking sprinters like Grunt, Gulp and Web pack.  \nDesigned and developed Spring SOAP and RESTful web services and Spring JMS modules to interact with enterprise and legacy applications.\nWorked in developing web applications on MVC based frameworks like Spring, Spring IOC, Spring Security, Spring Boot, Spring Cloud, and Spring MVC. \nImplemented Spring Cloud- Netflix ZUL to building microservices to communicate with each other.\nImplemented Spring Circuit Breaker pattern, integrated Hystrix Dashboard to monitor Spring micro services.\nWorked on Microservices using Docker container using Amazon EC2 container service and using AWS admin console.\nExcellent working knowledge on popular frameworks like Struts, Spring, Hibernate.\nSound learning on consistent mix and persistent improvement devices like Jenkins, Hudson, Puppet and Bamboo. Strong involvement in UNIX and Shell Scripting.\nExtensive experience in SQL, Stored Procedures, Functions and Triggers with databases such as Oracle, IBM DB2 and MS SQL Server.\nWorked under the latest standardized version of JavaScript like ECMAScript 6.\nExperienced in using WSDL, SOAP, and Apache AXIS for Web Services. \nExcellent communication, interpersonal and analytical skills and a highly motivated team player with the ability to work independently.\n\nTECHNICAL SKILLS\n   \n \nEDUCATION\nBachelor of Technology in Computer Science from Bonam Venkata Chalamayya Engineering  college.\n\n                                                                  \n\n                                                        PROFESSIONAL EXPERIENCE\n\nClient6                                                                                                                  Sep 2016 – Till Date\nFidelity National Information Services Inc.(FIS)\nMilwaukee, Wisconsin\nFull Stack Java Developer\nProject Description: FIS company delivers an innovation Consumer eBanking product that provides on-line banking solutions for over 2 million customers of over 200 financial institutions nationwide. This Project involved in developing a Web-based application. I worked with technical services team to build applications which are easily interact with users and full fill their needs.\nResponsibilities: \nDeveloped the login portal using framework AngularJS 2.0 along with HTML5, CSS3 and Type Script. \nWorked with Angular CLI and Typescript in Angular 2.0 to create Controllers and Angular components for the Web Pages.\n Implemented form validation on HTML forms using the built-in validation properties and methods in Angular 2.0.\nImplemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream server-side events.\nWorked on Microservices using Docker container using Amazon EC2 container service and using AWS admin console.\nWorked under the latest standardized version of JavaScript like ECMAScript 6.\nWorked in developing web applications on MVC based frameworks like Spring, Spring IOC, Spring Security, Spring Boot, Spring Cloud, and Spring MVC. \nImplemented Spring Cloud- Netflix ZUL to building microservices to communicate with each other.\nImplemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring micro services.\nWorked under a business rule management system (BRMS) like Drools.\nInvolved in working with web-based apps use Site Minder for security and authentication purposes. \nCreated is a new cluster and container management tool using Kubernetes \nCreated a display framework that reads the Open API specification document and generates an interactive documentation website using Swagger UI.\nWorked under Scripting languages like Type Scripting. \nAuthenticating Users and to provide the security to RestFull web services using OAUTH 2.0.\nWriting server-side request handling and automated functional test cases to validate UI functionality using Node.js.\nUsed Angular JS -1.x to create views to hook up models to the DOM and synchronize data with server as a Single Page Applications.\nDesigned and built a Web socket server in Node.js to process JSON requests and synchronize events within distributed groups.\nInvolved in various single page applications(SPA) using REACT JS and used various components in the REDUX library.\nWorked with Web pack for bundling application source code in convenient chunks and for loading that code from a server into a browser.\nDeveloping stand-alone, and production-grade Spring based Applications using Spring Boot.\nUsing Spring Boot to provide 'starter' POMs to simplify the Maven configuration\nImplemented Virtual Dom for Client-Side view rendering services using REACT JS.\nREACT JS Virtual DOM used for client-side view rendering services, React-Redux for state management and React-Router for programmatic navigation. \nEnvironment: AWS, Swagger, Node-JS, Angular2, Type script, Web pack, ECMA6, Karma and jasmine, Spring Boot, Spring cloud like Ribbon, Hystix, Netflix ZUL, Angular2 Injection annotations, Angular2 Shadow Dom, Micro services architecture, Docker, Cassandra DB, OAUTH, Site Minder, Java8 \nClient5                                                                                                                             Aug 2015-Sep 2016\nViva Health care, Birmingham, Alabama \nFull Stack Java Developer\nProject Description: VIVA Health, Inc. is an Alabama based HMO insurance company that is a part of the UAB Health System. As part of an innovative network of services we develop Web-based Java application which provides premiums based on customer information. I worked in Creating Responsive User Interface website for Online Payment of Payroll and Health Care benefit.\nResponsibilities:\nWorked in Developing stand-alone, and production-grade Spring based Applications using Spring Boot.\nExtensively used NoSQL technologies provided by SPRING BOOT like Cassandra which is used as an Database for this project.\nWorked under implementing JSX in React JS with react tools to compile JSX code to JavaScript\nDeveloped various single page applications(SPA) using REACT JS and used various components in the REDUX library.\nWriting server-side request handling and automated functional test cases to validate UI functionality using Node.js.\nExperience in Docker Engine and Docker Machine environment, to deploy the micro services-oriented environments for scalable application.\nImplemented Virtual Dom for Client-Side view rendering services using REACT JS.\nExtensively worked in writing minimal code in building re-usable forms with their validations using REACT with Redux Architecture.\nAlso, Extensively ES6 To Create Components in REACT using BABEL because it is not supported in all Bowsers.  \nWorked with Jenkins Continuous Integration and Continuous Deployment(CI/CD).\nImplemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring micro services.\nCreated is a new cluster and container management tool using Kubernetes \nUsed Maven and Jenkins to automate the construct and convey process and SVN was utilized for project administration and version management. \nExperience in Docker Engine and Docker Machine environment, to deploy the micro services-oriented environments for scalable application.\nInstalled Microservices using Docker container using Amazon EC2 container service and using AWS admin console.\nExperience in using NoSQL (MongoDB) data models document, key-value & wide column, or graph model.\nWorked with mongoose connector for database persistence using Node.js to interact with MongoDB\nUsed Express JS which is fast, assertive, essential and moderate web framework of Node.js that helps manage a sever and routes.\nImplemented various Business rules in the drools file using Drools rule engine.\nImplemented where Mocha are used to test React Js components and Chai for Node.js for testing endpoints.\nDeployed our Application on Pivotal Cloud Foundry which is used to reduce the development overhead by providing a ready to use platform.\nEnvironment: Java/J2EE 1.6, JSP, Spring boot, AngularJS, Node-JS, CSS3 and JavaScript, XML, Eclipse IDE, Maven, Jenkins, React js, Redux, Spring boot, Node Js, Express js, NPM, Web pack, Docker, Kubernetes, Cloud foundry, Jenkins, ECMS 6, JSX-react, AXIOS, React life cycle, MONGO DB, Mongoose connection, NODE JS service, OPEN ID CONNECTION, OAUTH, HTML, CSS3.\nClient4                                                                                                                         Nov 2014 - Aug 2015\nFifth Third Bank, Atlanta, Geogria.                                                                                         \nFull Stack Java Developer\nProject Description: Business Foundation System (BFS) is an insurance policy underwriting system under the Commercial Small Insurance vertical. This application provides quotes for customers and enables agents to issue and renew insurance. The underwriters can update with the new rates and edits. Property and liability, auto insurance, worker's compensation are the three lines of busiesses supported by this application. It also interacts with some third party applications and has the facility of accepting quote requests from other vendors. I worked under Cash Management and Financial Admin under this project.\nResponsibilities:\nImplemented a metrics collection mechanism for the server by utilizing Apache Kafka to stream server-side events.\nDesigned, configured and deployed Amazon Web Services (AWS) for a multitude of applications utilizing the AWS stack (Including EC2, S3), focusing on high-availability, fault tolerance, and auto-scaling.\nWorked in various Business rules in the drools file using Drools rule engine.\nConfigured AWS EC2 instances, domain mapping via Route53.\nExtensively used CSS and Bootstrap for styling the HTML elements. \n Developing Rest Services using Rest Template with SpringBoot and gradle. \n Containerized the SpringBoot microservice using Docker. \n Participated in front end development using JSF 2.0, JavaScript, HTML 5, CSS 3.0. \nDesigned Frontend with in object oriented JavaScript Framework with Angular.js.\nDeveloped API for using AWS Lambda to manage the servers and run the code in the AWS.\nDeveloped dynamic web pages using HTML5, CSS3, jQuery, Bootstrap, Less, CSS3(SASS) and AJAX.\nTested JavaScript using Jasmine frameworks. \nConfiguring and managed public/private cloud infrastructure utilizing Amazon Web Services like Amazon Ec2, Amazon S3.\nImplemented ODBC which is used for connecting to the database Oracle.\nIntegrated testing methods implemented by using Karma and Jasmine\nDeveloped application on Spring framework by utilizing its features like Spring Boot, Spring Dependency injection, Spring Beans, Spring Security, Spring JPA, Spring Web flow using MVC.\nApache CXF helps you build and develop services using frontend programming APIs, like JAX-WS and JAX-RS.\nDeveloped RESTful Services and Web Service Clients (JAX-RS or JAX-WS) with data representation in different formats such as XML and JSON.\nEnvironment: JAVA, J2EE, Core Java, Spring Boot, Spring Frame work, JSF, EJB, JMS, AJAX, JavaScript, Spring MVC, Spring Batch, spring security, Spring IOC, Apache CXF, Rest Service, Jax RS, BROOLS, Angular JS, Angular controllers, Angular customs directions, digestive cycle, Karma and jasmine, Multi Threading, AWS, Jquery, HTML5, CSS3, Ajax, ORACLE, Rabbit MQ.\n\nClient3                                                                                                                        Dec 2013 – Nov 2014\nConnexions Loyalty Group, Richmond, Virginia.                                                                        \nFull Stack Java Developer\nProject Description: The objective of Company is to have a framework in place for the organization, which allows the business users to add new customer configurations, customer product catalog, excluded product details list etc without depending on the development team. \n\nResponsibilities: \nUsed Backbone JS to utilize its rendering functions and create controllers to handle events triggered by clients and send request to server.\nDeveloped application on Spring framework by utilizing its features like Spring Boot, Spring Dependency injection, Spring Beans, Spring Security, Spring JPA, Spring Web flow using MVC\nThese applications need to maintain privacy and restrict illegal users. To achieve the functionality, we used Spring Security.\nWe kept up bean life cycle by utilizing Spring IOC which keep up session information of beans.\n Implemented Spring AOP for cross cutting concerns.\nHibernate ORM framework used to interact with database through Hibernate query language(HQL).\nUsed ANT to deploy application in IBM WebSphere in UNIX environment IBM AIX. Tested the application after making the necessary configuration.\nProvided daily support for production, stage and testing environments for WebSphere MQ operations and problem determination.\nInvolved in multi-tiered J2EE design utilizing Spring Inversion of Control (IOC) architecture and Spring JPA.\nWorked with Ember JS to code some new functionality and developed application front end using HTML, CSS, Ajax.\nWorked on Hibernate persistence tier. This involves developing mapping files and Hibernate (POJOs/ DAOs). \nUsed SOA, UDDI lookups and Web Services Description Language(WSDL) using SOAP protocol.\nUsed JaxWS framework to create SOAP web services.\nUsed Web services for sending and getting data from different applications using SOAP messages\nInvolved in development of SOAP Webservices using Apache Axis to extract client related data from databases.\nInvolved in Design UI Screen, created several mock up Using HTML, CSS and JavaScript.\nImplemented SOAP Services (JAX-WS) to interact with external systems. Involved in writing client code for invoking SOAP based web services.\nDeveloped HTML prototypes and ready XHTML documents with CSS style sheets.\nEnvironment: Java/J2ee, SQL, PL/SQL, XML, Maven, JUnit, Spring MVC, Spring IOC, spring Security, JSP, Spring Batch, Java script, JQUERY, Backbone JS, Handle bar JS, Core Java, Hibernates, Unix script, Shell Scripts, Jax WS, Soap Services, Jax WS security, wsdl-2,HTML,CSS,AJAX, IBM MQ, IBM Websphere. \n\nClient2                                                                                                                             July2011 – Aug 2013\nVirtusa Consulting Services, Hyderabad, India                                                                     \nJava/J2EE Developer\nProject Description:  \nThe system provides online access to Members, Employers and Brokers regarding Patient Administration, Billing and Pharmacy Management functions for the hospital. The major functions are Member registration and Medical Record information, Pharmacy Information, Appointments, Handling Hospital Admissions, and Assigning Insurance Details for Billing, Recording Transfers within the hospital and Creation of Discharge Summary and Details. The system is developed using J2EE Technologies with Spring Frame Work and Hibernate Technologies.\nResponsibilities:\nUsed Spring AOP module to handle transaction management, logging and profiling.\nImplemented various Business rules in the drl (drools file) using Drools rule engine.\nInvolved in Design UI Screen, created several mock up Using HTML, CSS and JavaScript.\nCreated Stored Procedure, Trigger for database access and events.\nWe kept up bean life cycle by utilizing Spring IOC which keep up session information of beans.\nDeveloped HTML prototypes and ready XHTML documents with CSS style sheets.\nImplemented Multithreading feature for processing the multiple requests to achieve high performance. \nUsed SQL which is JavaScript database which is a lightweight client-side in-memory SQL database designed to work in browser.\nUsed JaxWS framework to create SOAP web services.\nUsed Web services for sending and getting data from different applications using SOAP messages. \nInvolved in development of SOAP Webservices using Apache Axis to extract client related data from databases.\nImplemented SOAP Services (JAX-WS) to interact with external systems. Involved in writing client code for invoking SOAP based web services.\nEnvironment:  J2EE, JSF, XHTML, Bootstrap, JSON, JavaScript, Oracle, Spring framework, Spring IOC, java multithreading, Prime faces, Spring Batch, jax WS, soap services, stored procedures in sql server, Drools, Spring AOP, IBATIS, Hibernate, MySQL , PL/SQL, XML, WSDL, SOAP, SOAP UI, IBM WebSphere JUnit, Web sphere Application Server, Tomcat. \nClient1                                                                                                                            July 2009 - Aug 2011\n\nGlobal Tele Systems, Hyderabad, India\n\nJava Developer\nProject Description: Global Insurance System is software designed for a group of insurance agents, which supports the maintenance activities of Insurance Policies and their associated company details, their procedures in maintaining various types of policies, with the corresponding details of Policy holders, associated agents involved in the policy maintenance and etc. \nResponsibilities: \nImplemented Multithreading feature for processing the multiple requests to achieve high performance.\nUsed various Core Java concepts such as Exception Handling, Collections.\nDeveloped the modules using Servlets, Java2EE and JDBC for connecting with MySQL.\nDeveloped stored procedures, triggers in MySQL for lowering traffic between servers & clients.\nPerformance tuning of JVM heap size, Garbage collections, java stack and Native thread & production performance.\nDeveloped and implemented the MVC Architectural pattern using STRUTS framework including JSP, Servlets, and EJB.\nDeployed Application using Oracle Web logic Server.\n Expert in Core Java with strong understanding of Garbage Collector, SWING, Collections, Multithreading, Event handling, Exception handling and Generics.\nDeveloped and implemented the MVC Architectural pattern using STRUTS framework including JSP, Servlets, and EJB.\nUsed Structs Framework in the application, which is based on MVC design pattern.\nEnvironment: JAVA, J2EE, JSP, JSTL, Swing, JSP, HTML, CSS, servlets, Struts, EJB, Web Logic, XML, JavaScript, java core like multithreading, collections, Interface and abstract classes, strings.\n\n\n\n",
    "extracted_skills": [
        "angular",
        "aws",
        "cassandra",
        "ci/cd",
        "communication",
        "css",
        "docker",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "kubernetes",
        "lambda",
        "mongodb",
        "mysql",
        "node.js",
        "oracle",
        "react",
        "redux",
        "s3",
        "sql",
        "typescript"
    ]
}