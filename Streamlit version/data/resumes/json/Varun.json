{
    "id": "resume_8f8dd992-526d-49b4-9673-da8974ad2ef3",
    "metadata": {
        "filename": "Varun.docx",
        "processed_date": "2025-09-24T08:45:58.207680+00:00"
    },
    "raw_text": "Varun\nOBJECTIVE:  \t\nSeeking a position at your Company where I can maximize my 8+years experience. I believe in hard work that uplifts my spirit and dedication enabling me as a catalyst for any company’s growth I work for.\n\nPROFILE SYNOPSIS:\nExperienced in all the phases of software development life cycle with Analysis, Design, Development, Integration, Implementation and Testing of various client/server, N-tier and Web Applications.\nStrong programming skills in Java and J2EE with extensive ability to develop scalable applications.\nProficient inJava and J2EE technologies including JSP, JDBC, JPA and JMS.\nExperienced inHTML, XHTML, DHTML, XML, CSS, Angular, JavaScript, jQuery, JSP and Servlets.\nExperienced in developing web applications using Java, Servlets, JSP, JDBC, JNDI and AJAX.\nWorked in MVC architecture with Magento, Angular JS and SPRING and Spring AOP.\nExpertise to make SPA’s betterusing AngularJS directives and filtersand integratedwithSpring forms.\nExperienced with Front-End frameworks like AJAX, JavaScript, ReactJS, BackboneJS and Angular JS.\nExperienced in web Application servers like Web Logic,JBoss, WebSphere andTomcat.\nExperienced with web services (SOAP/RESTful) and used to scale the applications for better BOA.\nWorked on Service OrientedArchitecture (SOA) such as Apache Axis web services which useSOAP, REST, and WSDL and exposure to JAXB, JAX-RPC, and JAX-RS & JAX-WS.\nExpertise in design and development of enterprise level spring based web applications using Spring REST,Hibernate, EJB, Struts, Servlets, JSP and JSF for User Interface Applications.\nProficient inSpring AOP, Security, Event Handling, Spring MVC, Spring IOC Container.\nDeveloped and implemented stand-alone applications with Spring Micro services and their patterns.\nWorked on Spring Ribbon for load balancing and used fail safe methodology using Circuit Breaker pattern with Hystrix/Dashboard on designing and implementing Micro service applications.\nUsed Apache Kafka for integration and Data Processing with Spring and for Multi-Threaded Message Consumption and worked on Zookeeperto maintain services.\nBuild hypermedia-driven and implemented connectors between Hateoas and Spring REST services.\nExperienced with distributed transaction management with isolation/propagation levels with Spring JTA.\nProficiency in developing/maintaining using Oracle, MySQL and SQL Server.\nExperienced in AWSDynamoDB to capture the any modification on DB. \nAdding permissions to AWSSQS to interact with the Queue and involved in writing custom policies.\nProficient in SQL, PL/SQL, Stored Procedures and Triggers while dealing with automation on DB.\nExperienced with NoSQL databases like MongoDB, Couch DB and Cassandra on large data platforms.\nExperience with Docker images, Containers, push/pull with Spring Boot, used Jenkins for CICD and AI.\nGood knowledge on hosting Python applications using WWGI module.\nExperience in using Jenkins for Continuous Integration and Sonar jobs for java code quality.\nExperienced in using Eureka Servers while deploying in EC2. \nHands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon.\nExtensive working with Amazon web Services like using Elastic Beanstalk, EC2 and AMI with Linux.\nStrongly associated with usage of Selenium, Jenkins, Junit and Curl for Unit and System Testing.\nProficient on Automation tools like SeleniumWebDriver and SeleniumGRID using Java for developing automation scripts in Eclipse IDE with TestNG, Maven and Jenkins for testing Web Based Applications.\nExperience with the Integrated Development Environments like Eclipse, NetBeansand IntelliJ.\nExperienced with CICD - ANT/MAVEN/GRADLE/JENKINS/HUDSON/CVS/GIT/GITHUB.\n\nTECHNICAL SKILLS: \n\n\nPROJECTS:\n\n\nResponsibilities: \n\nWorked in a highly dynamic AGILE environment and participated in scrum and sprint meetings.\nDeveloped an attractive GUI using Angular JS that users can interact dynamically at runtime.\nDeveloped custom directives, Factories and Services in AngularJS and implemented code according to coding standards and created AngularJS Controller to isolate the scopes to perform operations and extensively used Core Java such as Exceptions, and Collections. \nDeveloped an application were involved in design changes using HTML5, CSS3 and fraction of JavaScript.\nWorked extensively to achieve DOM Show, hide elements and Event Handlingusing Angular JS.\nExtensively worked in front end JavaScript frameworks like AngularJS, BackboneJS and ReactJS etc.\nWorked on server-side validations, handle actions,events and Encapsulationbyimplementing React JS.\nInvolved in the design, development and implementation of a Client front end using JavaSwing.\nDeveloped Swing Suite for look and feel as well as binding data to the GUI. \nDesigned multiple screens using various Swing Components and layouts.\nWorked on Thread handling to maintain continuity of execution and extensively implemented Multithreading concept to handle Transaction Management with isolation and propagation levels. \nWorked on business logic and calculations, performs analysis, handles data transfers, and generates XSL for presentation layer and SQL commands for database layer. \nExperienced on spring framework applications like Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security and Spring Boot anddid integration to Micro services into existing system architecture.\nCreating REST based Web Services by establishing links using Hateoas from spring based Applications.\nExperienced in implementing Micro services, Service Oriented Architecture (SOA) with XML based Web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach. \nInvolved in writing application level code to interact with APIs, Web Services using JSON.\nExperience in creating RESTful web services using Jersey, spring framework and JAX-RS.\nJava Beans are used as container of business logic and supporting the services or applications.\nWorkedwith Docker to deployMicro-services in modern containers to increase Isolation.\nWorked on integrated Hystrix dashboard to monitor springmicro-services using CircuitBreaker.\nWorked with Spring Ribbon and Kafka broker service to handle heavy traffic.\nInvolved in developing API’s and REST\t API proxy using APIGEE edge and for sending mobile notifications.\nExperienced with cloud services like Cloud Foundry and AWS.\nDesigned and implemented intranet applications using RubyonRails and PostgreSQL on AWS Cloud managed code versioning with GitHub and deployment to staging and production servers. \nWorked with DROOLS engineforspring integration and validate business rule before executing in runtime.\nDeveloped the Web Services Client using REST, RSDLfor verifying the new customer history to a connection. \nWorked on XML parsers (JAXB) for data retrieval and JAXB parser for marshalling and unmarshalling. \nTo establish a connection to server,SQL statements that were passed through hibernate.\nWriting Queries to get the information from MongoDB for adjusting the data in DB. \nWorked withCURL to move data from a server using http and https protocols.\nExperienced with event-driven and scheduled AWSLambda functions to trigger various AWS resources.\nWorked with AWScloud service in creating EC2 instances and providing them roles and sometimes participated in writing custom policies and deployed applications on Elastic Bean Stalk and EC2.\nPerformed Query operations on AWS Dynamo DB and captured the modification data on Dynamo DB.\nInvolved in AWSSQS to interact with queue and giving roles to it and involved in writing Custompolicies.\nCreated instances on AWSEC2 and configure using CMSAnsible and Automation installation using CMS.\nParticipated in troubleshooting issues on AWS, Netflix Eurekaand Cloud environments.\nInvolved in writing Java API for Amazon Lambda to manage some of the AWS services.\nMentoring Development on integrating Xstore POS \\ Xoffice products with Retailers.\nWorked on POC for multiple international Xstore POS implementations, including designing the test lab and test strategy for new implementations, maintenance releases.\nWorked system logging using Elastic search, KibanaLog stashtocreate dashboards in Splunk and Kibana. \nDeveloped Pythonscripts and shell scripts for datamaintenance and unittesting and created UNIXSHELL scripting and Python scripting for automate process.\nConstructed web pages for application using MVC&JavaScript, jQuery, NodeJS.\nUsed Node.js to develop the relevant back end RESTful API.\nDeveloped crypto rest services using Nodejs and integrated services with HSM(Hardware Security Module).\nImplemented modules into NodeJS to integrate with designs and requirements and used NodeJS Express Framework. \nInvolved in the development of distributed server-side components and deployed the various Session and Entity Bean Components in the IBMWebSphere Application Server.\nPerformed different types of testing on various test scripts on Selenium WebDriver and TestNG.\nUsed MAVEN as a Build Process and used generating Documentation, Reporting, and adding Dependencies.\nUsed SeleniumGrid to execute Selenium automation suites on different platform; performed browser combinations in parallel and for cloud execution used SAUCELABS. Used GIT as a version Control.\nWorked with Appium for mobile testing for Android and IOS. \nUsing JUnit test in Eclipse, developed Unit test cases and test suite. Curl was also implemented to test.\nUsed Jenkins as the integration tool and improved scalability of applications on cross-platforms.\nInvolved in System Testing, Integration Testing, and Production Testing on WebLogic Server.\nEnvironment: Java/JDK,J2EE, Swing, Log4j, AngularJS,Web Services, Hystrix Dashboard, Spring Kafka, AWS, Netflix Eureka,Netflix Ribbon, Hibernate, REST, JSON, RESTful, Eclipse, MAVEN build tool, JUnit, Ruby on Rails, Kibana, Splunk,Apigee, Hateoas, Drools, Jenkins Continuous integration tool, WebLogic Application Server,MongoDB,Linux OS, Agile Methodology, Curl, GIT, PL/SQL, Docker.\n\n\n Responsibilities: \n\nResponsible for all stages of design, development, and deployment of applications. Active role in Test Driven Development termed as TDD apart from Agile Software Development.\nDefined and constructed layers, server-side objects and client-side interfaces based on J2EE design patterns.\nDeveloped and implemented Swing, spring and J2EE based MVC framework for the application. \nUsed multithreading in programming to improve overall performance.\nDesigned, analyzed and developed the front-end and back-end Servlets, Bootstrap for designing, HTML5, CSS3, Angular JS and AJAX, for developing presentation layer.\nInvolved in payment status report for asynchronous exchange of information using JMS. \nParticipated in creation of Spring Configurations using Java8 features, Lambda expressions, Streams, filters.\nUsed JavaScript, jQuery for user interactions in pages. Creating a responsive web application integrating TwitterBootstrap with Angular JS and media queries.\nCreated the AngularJS app using Yeoman, Grunt and Bower and used Angular UI for component model.\nActively involved in using MVC, HTML5 to enable client-side date to meet specific criteria by applying various validation variables and used the CSS classes to provide visual feedback on validation. \nUsed JSP to dynamically generate web pages based on HTML and XML Document types. Use JSF (Java Server Faces) to implement component based User Interface Applications.\nJSON used as the main data-interchange format in place of XML.\nUsed Sonar to analyze and measure source code quality.\nCRUD was used as part of servlets where DML operations were required on RDBMS like SQL DB’s.\nInvolved in developing UI pages using AngularJS and calling the Rest API's from backend. \nCreated RFP microservice to provide RESTful API utilizing Spring Boot with Microservices.\nDeveloped SOAP based JAX-WSWeb Service interfaces for integrating multiple systems, code re-usability.\nUsed Dependency Injection feature for wiring and defined dependencies using constructor arguments.\nImplementation of data access layer has been cumbersome for a while and this was greatly resolved using Spring JPA through implementation of data access layers there by reducing boiler-plate-code.\nUsed Micro-services to ensure the scalability of application on cloud infrastructure.\nDeveloped Restful Web services for other systems to interact with our system and secured the service with Spring-Security Oauth-2.0. Added WS-Security using XWSS to secure the Web services.\nConfigured hibernate with Spring ORM as part of spring and Hibernate Integration for best results.\nUsed Tomcat Serveras the chief enterprise level server while dealing the database activities with hibernates.\nUsed Spring MVC components to implement business layer and Spring Boot for Micro-services. \nUtilized spring core, AOP and security to build robust business operations with transactional support. \nDefined several UML diagrams; Activity diagrams, Sequence and Object diagrams.\nDeveloped unit and integration tests for existing microservices using JUnit, Mockito and Docker environments.\nDeveloped the data access classes using JDBC and SQLquerylog4j for logging and SVN for version control.\nWorked on Rest Web services for backend services used Oracle for database services and RESTful web services using Jersey for JAX-RS implementation. \nCreated Hibernate persistent and configuration files for ORM implementation.\nUsed Git as Version Control System for the application. Used JMeter to test performance of SOAP protocol.\nUsed spring framework including spring core/IoC, Spring Web, Spring Security. \nWorked with and implemented on developing and maintaining robust and effective PageObjectModel Design Pattern and Created Keyword-Driven and Data-Driven Framework using SeleniumWebDriver configured under TestNG environment and used MAVEN for adding dependencies.\nParticipated in Defect tracking team using ALM Quality Center for Defect tracking, Defect priority and status.\nGUI design and development using Java Swing, JFC Used for open source web testing.\nDeveloped AWS LambdaFunctions in a stateless style and ensure there is no affinity between and compute infrastructure to manage the servers and run the code in the AWS.\n\nEnvironment: Java, J2EE, JDK, RCP, AWS SDK, Git, Swing, JFC, Spring, Hibernate, Core Java, SOAP/Rest, Web Services, JavaScript, UML, Bower, HTML, CSS, SASS, Sonar, WAS 8 WSDL, JIRA, JAX-WS, JAX-RS, OWASP, JMS, Oracle, Angular JS, NodeJS, Tomcat, Spring,Spring Boot, Spring Batch, AJAX, Apache JMeter, jQuery, JUnit, Maven.\n\n\n \nResponsibilities:\nInvolved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements.\nInvolved in Java Multithreading to cascade multiple changes on multiple records in only one transaction\nResponsible for JAVA, J2EE, JSF, JBPM, EL and Java FX coding / development.\nUsing Struts Framework developed and implemented the web-based application following the MVC.\nUsed Spring MVC as Web module, involved in design, development of new Action classes to interact with business logic and Used Hibernate as ORM to map Java classes to data base tables.\nImplemented J2EE patterns, Data Access Object (DAO), Session facade, Business Delegate and Value Object.\nImplemented the service layer using Spring with transaction and logging interceptors.\nFixing the bugs and developing new enhancements using JAVA/J2EE, spring, Hibernate,IBM Web Sphere.\nUsed spring framework for middle tier and Spring-hibernate for data access.\nUsed Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes.\nImplemented SOA to develop REST Based Web services using Apache Axis. \nUsed multithreading to improve performance in generating the reports in Java.\nExtensively developed User defined Custom JSP tags to separate presentation from application logic.\nDesigned and developed Web Services (SOAP, WSDL). Created and compiled XML Schema to generate JavaBean classes using Apache Axis.\nInstallation, Configuration & administration of WebLogic application Server.\nUsed AngularJS to create views to hook up models to the DOM and synchronize data with server as SPA.\nDeveloped HTML and JavaScript. Developed Scripts for UNIX platform deployment.\nUsed ANT for compilation and building JAR, WAR and EAR files.\nUsed Log4J, Splunk for logging and tracing the messages.\nImplemented Test Scripts based on the User Requirements as specified by the Business side and Requirement document and analysingBusiness Requirements and handling it as per Requirements.\nProject coordination with other Development teams, System managers and web master and developed good working environment.\n\nEnvironment: Java, JSP, Servlets, JSF, Spring AOP/IOC, Spring MVC, Hibernate, XML, JBPM, HTML, JDBC, Web services, Web Services (SOAP/WSDL and REST), Multithreading, Web Logic Application Server, Junit, Maven, Log4J, SVN, Oracle, UNIX.\n\n\nResponsibilities:\nInvolved in the analysis, design, and development and testing phases of Software Development Life Cycle.\nDeveloped N-tier client-server business application software using Model View Controller (MVC) Architecture. \nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionalityInvolved in writing different Design Patterns like Filter, Action, Business Delegate, Service Locater, Data Transfer Objects (DTOs) and Data Access Objects (DAOs).\nUsed Hibernate in persistence layer and developed POJO's,Data Access Object to handle database operations.\nWorked on System security with the use of SSL (Secure socket layer), encryption and used role-based security.\nJSON being light in nature was used as the chief source of communication between the server and application.\nExpertise in developing reusable and interoperable Web service modules based on microservices, SOA architecture using SOAP and RESTfulandPreparation of Java and JSP coding standard checklist. \nInvolved in the development of Servlet, Struts Action classes, Business Objects, Web Services.\nInvolved in writing JUnit Test Cases and Ant Build Script. \nInvolved in writing JSP using Bean, Logic, HTML, and Iterate Tags. \nWSDL has been used to expose the Web Services. \nSOAP has been used as a protocol to Communicate in the form of XML messages.\nDeveloped client request validations and processing using JavaScript and HTML.\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts.\nImplementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC.\nDeveloped Struts Action Forms, Action classes and performed action mapping using Struts. \nHands-on Experience onSelenium Web Driver to write user stories. \nUsed MAVEN as a build tool in adding dependences with PAGE OBJECT MODEL design pattern.\n\n\nEnvironment: Java, JSP, HTML, CSS, Servlets, XML, SOAP, WSDL, Oracle, Eclipse, JAX-R, JAX-WS, PL/SQL, WebSphere Server, Struts, DAO, AOP Spring, MVC Spring, Hibernate, Junit, Maven.\n\n\nResponsibilities:\n\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP.\nDeveloped web application using Struts, JSP, Servlet, Java beans that uses MVC design pattern.\nWrote JavaScript for client-side validation.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nConfigured Bean mappings within the framework and Hibernate persistence.\nMonitored the logs using Log4j and fixed the problem.\nThe application was deployed on the Tomcat.\nUsed CVS as version control system. \nKnowledge on bug fixing and ProductionSupport.\n\nEnvironment:J2EE, JDBC, Struts, Hibernate, JavaScript, HTML, CSS, JSP, Servlet, Tomcat, Oracle, EclipseIDE, CVS,Log4j.\n\n\n\n\nResponsibilities:\n\nDesign and Development of the Object-Oriented applications using OOA and OOD techniques in all Business\nAreas using CVS.\nDesigned and developed web pages using HTML, CSS and JSP.\nWrote Client-side validation scripts using JavaScript.\nStored data in Oracle database and accessed using Oracle JDBC drivers.\nImported Client data into the database from XML file by using the XML Parser.\nWorked on bug fixing and ProductionSupport.\n\nEnvironment: JDK, Servlets, JSP, JDBC, SQL, HTML, JavaScript, Eclipse, XML and CVS.\n\n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "cassandra",
        "communication",
        "css",
        "docker",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "lambda",
        "mentoring",
        "mongodb",
        "mysql",
        "node.js",
        "oracle",
        "postgresql",
        "python",
        "r",
        "react",
        "rest api",
        "ruby",
        "ruby on rails",
        "scrum",
        "sql"
    ]
}