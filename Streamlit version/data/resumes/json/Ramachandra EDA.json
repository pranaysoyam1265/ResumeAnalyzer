{
    "id": "resume_8efe8536-1bac-47de-98ff-d6ec01fc26cf",
    "metadata": {
        "filename": "Ramachandra EDA.docx",
        "processed_date": "2025-09-24T08:45:48.716403+00:00"
    },
    "raw_text": "Ram.\nRam1421980@gmail.com\nCell :  510-556-3630\n                                              \nProfessional Summary:\n\n\n10 years of total IT experience in all phases of Software Development Life Cycle including Analysis, Design, Implementation, integration, Testing, and Maintenance.\n8 years of experience in developing web, enterprise and SOA applications using Core Java, OOAD, Multi-Threading, JavaBeans, JSP, Servlets, JNDI, JDBC, Hibernate, JPA, Spring, WebServices(SOAP, Restful and Micro-Service), XSD, XML, XSLT, JSON, JAX-B, Apache Commons, EJB, JMS, MQ-Series, HTML, Ajax, Oracle and Linux/UNIX.\n2 years of experience in Big Data and Cloud based technologies like HDFS, SPARK, Kafka, Flume, Sqoop and AWS.\nExtensive experience on developing web applications using Spring Boot, Spring Core, Spring MVC, Spring ORM, Spring JPA,Spring Rest and Spring Cloud(PCF).\nExpertise in implementing persistence layer using JPA and Hibernate.\nExpertise working with SOAP, Rest and Microservices using CXF, Jersey and CloudFoundary.\nImplemented Microservices using Spring Core, Spring Boot, Spring Data, Spring Rest and Spring Cloud(PCF).\nExperience in Collections, Multi threading, Concurrency and memory management. \nExtensive experience in working with servers like WebLogic, WebSphere, JBOSS and Tomcat.\nExpertise in using XML Parsers SAX and DOM.\nGood experience in data structures and algorithms.\nGood experience in Junit and Mockito.\nImplemented  AWS(EC2, RDS, SNS, SQS, S3) to move customer care application in to Cloud environment.\nGood Experience in using Maven and ANT for building projects and Log4j for logging and debugging purposes.\nEffectiveness in coordinating with business team to fix defects and resolve issues.\nExperience in writing SQL queries, Stored Procedures for accessing and managing databases such as Oracle, DB2, MySQL.\nExperience with Tools: RAD, Eclipse, My Eclipse, Jenkins, Ant, Maven, Mercurial, Sonar, GIT, SVN, CVS, Perforce, Toad, SQLDeveloper, Code-Collaborator, SOAP-UI, RestClient-UI and Postman(chrome).\nExperience in Agile and waterfall modals.\nPracticing Agile  development frameworks Jira, Rally, VersionOne and standards, Test Driven Design & Development.\nPossess excellent communication, interpersonal, analytical and problem solving skills.\n\n\n\n\n\n\n\n\n\n\n\n\nTechnical Skills:\nJ2EE Technologies\t            : JDBC, JavaBeans, JSP, Servlets, EJB, JNDI, JMS. \nLanguages\t\t            : JAVA, Groovy, Python.\nWeb Technologies \t            : HTML, DHTML, JavaScript, JSON, AJAX.\nXML Technologies\t            : XML, DTD, XSLT, XSD, Xpath, JAXB SAX, DOM.\nDatabases\t\t            : Oracle 10g, 9i, MySQL, DB2 and Cassandra.\nOperating Systems\t            : UNIX, Linux, Windows 98/2000/NT/XP.\nApplication Servers\t     \t: WebSphere, Weblogic and JBoss.\nMiddleware\t\t     \t: Apache CAMEL, Oracle ESB, JMS and MQ-Series.\nIDE’s\t\t\t     \t: Eclipse, RAD and JDeveloper, TOAD, SQL Developer.\nFrameworks\t\t     \t: Apache CAMEL, Spring and Hadoop/ Big Data.\nORM Technologies \t     \t: Hibernate and JPA.\nWebservice Specifications\t: JAX-WS , JAX-RS and AXWAY APIGateway.\nUI Technologies\t        \t: JSP, JavaScript, JQuery, AJAX, CSS and HTML.\nVersion Control \t       \t: GIT, SVN, CVS and Perforce\nCloud Technologies \t\t: Cloud Foundry and AWS.                                                 \nTools\t                                \t: Ready API, Version One, JIRA, Parasoft, \n                                                  RestClient-UI and Postman(Chrome) and SOAP UI.\nFraud Prevention Platform\t: 41st parameter(device  identification) and\n                                                  Fircosoft(to filter transactions and customers).\n\nEducation:                               Master of Computer Applications(MCA),  INDIA.  \n\nProfessional Experience:\n\nVerizon, TX.\nDec’16 – Tilldate.\nRole : Java Developer.\n\nDescription :  Verizon DVS Migration(CPF, Reconciliation, Cassandra Loader) consist of 800+ APIs currently running on the IBM Main Frame system. Intented of this program is to rewrite all the API in Java 1.8, Cassandra 3.0. Currently Verizon pays IBM based on the no., of MIPS the API gets max in the day. Re-write API in Java with will reduce the cost spent for the IBM and the API scalability will be greatly increased with Cassandra. \n\nResponsibility: \n\nImplemented Microservice’s(Read API’s, Write API’s) using cloudfoundary.\nUsed Netflix OSS stack to provide infrastructure for micro-services(config server, eureka server, zuul proxy, ribbon and hystrix).\nCreated shell scripts on Linux for enabling seed data loading into Cassandra tables.\nCreated application for data modelling to allow various DB2 to Cassandra table migration use cases.   \nEnabled code generation DDL files, Control Files, Spark Configuration files, Spring Boot Artifacts.\nDeveloped spark scripts by using Scala shell as per requirements. \nWorked with spark core, Spark Streaming and spark SQL modules of Spark \nDeveloped multiple POCs using Spark and deployed on the Yarn cluster, compared the performance of Spark, with Hive and SQL/Teradata. \nDeveloped Kafka producer and consumers, Cassandra clients and Spark along with components on HDFS, Hive. \nInvolved in converting Hive/SQL queries into Spark transformations using Spark RDDs, Python and Scala.\nCreated application to create control files for performing seed data migration from DB2 to Cassandra called init load. Data files are created by Mainframe system. Various formats of data files are Fixed Width and delimited.\nCreated CPFTestSuite Automation tool for measuring CPF functionality, essential for detecting any configuration issues in preload tables.\nCreated ReconLogAnalyzer tool that will perform log analysis for missing and mismatch log statements and produce the output in an excel file.\nCreated application to create control files for performing seed data migration from DB2 to Cassandra called init load. Data files are created by Mainframe system. Various formats of data files are Fixed Width and delimited.\nCreated Jenkins builds for few custom applications.\nImplemented Test cases using Junit and Tested web services with REST Client.\nProactively monitor database systems ensuring availability and performance.\n\nEnvironment: Java/J2EE, Spring Core, Spring Boot, Spring JPA, Spring Rest, Spring Security, Spring Cloud, JPA, Microservices(PCF), Spark, HDFS(Hadoop), Kafka, Jenkins, AWS, GIT, Maven, MQ-Series, Mainframe, RAD, Junit  DB2, Cassandra and Oracle.\n\nGoogle Inc, Mountain View.\nMarch’16 – Dec’16.\nRole : Java Developer.\n\nDescription: Cyber-insurance is a predictive risk analytics tool implemented to analyse businesses and individual users Internet-based risks(Security Breach, Data Breach, Malware, Phishing, Spam, hacking and cloud service down) including the company’s industry, geography, scale, services and security posture.\n\nResponsibility: \nInvolved in the requirement gathering, design and development of Catastrophe modeling.\nUsed Netflix OSS stack to provide infrastructure for micro-services(config server, eureka server, zuul proxy, ribbon and hystrix).\nExtensively used different Spring modules like Spring Boot, Spring Core, Spring JPA  Spring Rest and Spring Cloud.  \nImplemented cost calculator engines for AAL(Average Annual Loss), SD(Standard Deviation) and CV(Coefficient of Variation).\nUsed Spring Rest to implement controller layer.\nUsed JPA to implement Service and Repository layers.\nImplemented Micro-service’s using Pivotal Cloud Foundry(Spring Cloud).  \nUsed Groovy script for test automation. \nUsed Swagger to Document API’s. \nInvolved in converting Hive/SQL queries into Spark transformations using Spark RDDs, Python and Scala. \nDeveloped the code for Importing and exporting data into HDFS and Hive using Sqoop. \nResponsible for writing Hive Queries for analyzing data in Hive warehouse using HQL. \nWrote complex Hive queries and UDFs in Java and Python \nInvolved in defining job flows using Oozie for scheduling jobs to manage apache Hadoop jobs by directed.\nDeveloping Hive User Defined Functions in java, compiling them into jars and adding them to the HDFS and executing them with Hive Queries.\nDesigned and deployed isolated Search DCs for Datastax Solr Clusters. \nDeveloped Solr indexes and queries to span over multiple DCs. \nInvolved in writing API Testing,Junit testing, enhancements, bug fixing.\n\nEnvironment: Core Java(java 8), J2EE, JPA, Spring Core,Spring MVC, Spring JPA, Spring Rest, Spring Security, Spring Cloud, HDFS, HIVE, SPARK, Apache SOLR, Kafka, Zookeeper, XML, Groovy, JSON, JavaScript, AngularJS, Swagger, Jenkins,  Junit, Tomcat, Postman(Chrome), Git, MYSQL and UNIX/Linux.\n\n\nWells Fargo,  San Leandro, CA.                                                          \nMay’15  – March’2016.\nRole: Java Developer.\nDescription:  New Device Fingerprinting is one of the core application in Gen 3 FP&A (Fraud Prevention & Authentication ) for building a more intelligent and efficient fraud mitigation, authentication and alerting strategies  for online  and cross channel authentication use cases.\n\nResponsibility: \nInvolved in the requirement gathering and architecture design and development of New Device Fingerprint project.\nReengineering existing platform to a Microservices based architecture.\nReengineered platform to support 100% virtualization.\ninvolved in  development using 41st Parameter, Core Java - J2ee, Multi-threading, Groovy,  Spring, Hibernate, Apache CAMEL, Web services(SOAP and Rest), Maven, Oracle and Weblogic.\ninstalled an updated version of 41st Parameter (external vendor) code to do Device fingerprinting.\nImplemented different features related to Device fingerprinting in  AuthC Service .\nUsed Apache Camel for creating routes using Web service.\nUsed spring boot to bootstrap the basic configuration of the project. \nDeveloped Data access layer using ORM framework hibernate for mapping database scheme to Object model.\nExtensively used different Spring modules like Spring Boot, Spring Core, Spring MVC, Spring DAO and Spring JMS. \nUsed Ready API Tool to Implement functional and integation tests.\nPerformed Unit testing using JUNIT and Mockito.\nUsed Splunk tool in order to analyze the logs in the applications.\nExtensively used Groovy for functional tests.\nUsed Cassandra CQL with Java API's to retrieve data from Cassandra tables.\nInvolved in writing different DDL and DML scripts for functional tests.\nManaged code for different releases by branching and merging using SVN.\nUsed CI tools like Jenkins.\nUsed JIRA as a change request , defect tracking and project status tracking system in the project.\n\nEnvironment: 41st Parameter, Core Java, Groovy, J2EE, Hibernate, Spring,Spring Boot, EJB, Apache CAMEL, WebServices(SOAP, Restful and Amazon), XML, JSON,  Ready API, Log4j, Weblogic, ActiveMQ, SQL Developer,MQ-Series, Jenkins, Splunk, Junit, Mockito, Docker, Oracle DB, Cassandra, Putty and UNIX/Linux.\n\n\nBank of America, Agoura Hills,CA.                                                                         \nMar 14  – Apr 15 .\nRole: Java Developer.\nDescription:  This project will be used by the RMD Department of BOFA. RMD will issue loans to the borrowers based on collateral Status before issuing the loan RMD checks that whether that collateral is insured or not and collateral’s Social Security Number through third party agencies and finally RMD checks whether borrowers is paying tax properly for that collateral or not with the help of third party agency.\n\n\nResponsibility: \nUsed Agile methodology for design and development of project.\nImplemented User Interface using JSP, HTML, CSS, Ajax, JavaScript and AngularJS.\nImplemented Tax  and  Loan ID modules using Spring Framework.\nImplemented Persistence layer using Hibernate JPA.\nCreated and maintained the configuration of the Spring Application Framework (IOC) and implemented business logic using EJB.\nImplemented SOAP Services(JAX-WS) to interact with external systems like Fidelity.\nConverted  Business to customer services into Restful Services.\nHave good experience on continuous integration tool Jenkins.\nImplemented some fuzzy logic’s using Hadoop MapReduce Programming.\nImplemented  AWS Redshift (a petabyte-scale data warehouse service in the cloud).\nConverted EJB MDB’s in to Spring MDP’s using Spring JMS Module and moved into Amazon cloud(AWS).\nHandled all the service nodes and components on Amazon cloud, including handling Amazon service outages.\nImplemented NO-SQL DB(Cassandra) to store poisoned messages.\nCQL is used to query Cassandra data from dev center.\nPerformed importing data from various sources to the Cassandra cluster using Java/Python APIs or Sqoop. \nResponsible for bug fixes and documentation.\nUsed Linux OS for Development and Production Environment.\nAbility to learn and adapt quickly to the emerging new technologies.\n\nEnvironment: Core Java, J2EE, JSP, Servlets, Hadoop/Big Data, Splunk Spring Core, Spring MVC, Spring Data, Hibernate-JPA, EJB, WebServices(SOAP, Restful and Amazon WebService), Kafka, Apache CAMEL, AngularJS, Ajax, XML,  JavaScript, JSON, CSS, HTML, Log4j, SONOR,Weblogic, Putty, UNIX/Linux, SQL, SQL Developer, Jenkins, Sqoop, Cassandra DB, MySQL and Oracle DB.\n\n\nBank of America, Jersey City, NJ.                   \t   \t\t                                 \nMay’13 – March’14.\nTitle:  Enterprise Transaction Scanning in AML (Anti Money Laundering).\nRole:  Java Developer.\nDescription: Anti Money Laundering(AML) is the policy in Bank of America where Bank of America does not want to be  used  in the  process to conceal the true source of funds that were originally derived from criminal activity or in the process of funding criminal activity, including terrorism.\nAML Policy Statement is intended to guard against Bank of America’s unintentional involvement in criminal activity, and to reinforce Bank of America’s policy of cooperation with law enforcement and regulatory agencies.\nUnder the Project AML, Bank of America will,\nTake reasonable steps to determine the true identity of all customers and beneficial ownership of Bank of America products and services .\nReport all identified instances of suspicious activity to the extent that it can do so under all applicable foreign and domestic laws .\nAvoid providing support or assistance to customers seeking to deceive law enforcement agencies through the provision of false, altered, incomplete or missing information or by informing customers that their activities are, may be, or have been investigated or reported as suspicious.\nAML uses the tool called Fircosoft for scanning the Enterprise transactions and report the suspicious activities through the system called ‘ETS (Enterprise Transaction Scanning)’. ETS will scan all the wired transactions against the watch list (central repository of suspicious individuals, countries and cities) stored in ETS database. \n\nResponsibilites:\nInteraction with Business users on daily basis for gathering the Requirements.\nInvolving in the preparing low level design.\nInvolved in the development of Report Generation module. Which includes volume statistics report, Sanctions Monitoring Metrics report, TPS report.\nImplemented Spring MVC, dependency Injection (DI) features along with Hibernate \nImplemented  Online List Management (OLM)  and  FMM module  using Spring and Hibernate.\nCreated Configuration files for the application using Spring framework.\nImplemented a RESTful interface for the search and Address services\nImplemented SOAP Services(JAX-WS) to interact with external systems.\nWrote various SQL, PL/SQL queries and stored procedures for data retrieval.\nPerformed Unit testing using JUNIT and Mockito.\nUsed Linux OS for Development and Production Environment, Wrote UNIX Shell scripts and used UNIX environment to deploy the EAR and read the logs.\n\nEnvironment: Core Java, multithreading, Fircosoft, J2EE, JSP, Servlets, Spring Core, Spring MVC, Spring ORM, Spring Batch, Hibernate, JPA, WebServices(SOAP and Restful), AnjularJS, Ajax, XML,  JavaScript, JSON, CSS , HTML, SVN, Jenkins, Log4j, Weblogic, Putty, UNIX/Linux, SQL, SQL Developer, Mockito, Cassandra, Junit, Mockito and Oracle DB.\n\n\n\nFidelity Investments, Atlanta, GA.      \t\t                              \nFeb’12 – April’13.\nTitle: TradeClearing System.\nRole: Java Developer\n\nTradeClear had following functionalities:\nCentralized clearing: Listed Derivatives are traded on numerous exchanges and booked into a large number of front office booking systems within the firm. TradeClear consolidates information flow from substantially all relevant booking systems and most major clearing houses where Client has membership rights. \nReal-time Processing: Listed derivative transactions must be balanced and cleared on the same day they are traded. This gives a little as 90 minutes to identify mismatches in bookings and correctly clear the day’s business. \n \nResponsibility:\nResponsible for gathering business requirements, review the requirements and converting them to detailed design documents and clarification documents.\nDeveloped UI and backend applications using Struts, Spring, Hibernate, Java, EJB 3.0, JSP, HTML, DHTML, JavaScript and AJAX.\nImplemented JSP, Struts Tag Libraries, Java Script and CSS for developing User for creating/generating Hibernate classes and configuration XML’s and to also manage CRUD operations (insert, update, and delete).\nImplemented a RESTful interface for the Front-end response.\nUsed Web Services to get price from external Business Entities.\nDeveloped reusable services using BPEL to transfer data between heterogeneous systems\nUsing different Adapters.\nImplemented messaging using TIBCO EMS.\nImplemented integration between the BPEL worklist and Oracle eBusiness Suite .\nImplemented security for BPEL services using OWSM. \nResponsible for integration of different modules. \nCreated JUnit test cases, and Development of JUnit classes.\nConfigured log4j to enable/disable logging in application.\nInvolved in Code Reviews of other modules, documents, test cases.\nWrote UNIX Shell scripts and used UNIX environment to deploy the application.\nResponsible in coordination with offshore team, attending daily and weekly scrum meetings to update the work status, issues clarifications etc.\n\nEnvironment: Core Java,J2EE, JDeveloper, Spring, Hibernate, SOA 10g(BPEL), Weblogic Server, Webservices(SOAP and Restful), JMS, PL/SQL, Sql Developer, XML HTML, JavaScript, SVN, Maven, Log4j, JUnit, Sybase , JBoss, Oracle, DB2, SAP, Mainframe(COBOL), MQ-Series,MySQL, Windows XP, RAD and Unix. \n\n\nPrudential,   Newark, NJ.      \t          \t           \t                                 \nMay’10 – Dec’11\nRole: Java Developer.    \nProject: 4Front is an application provides a single point of access for teleconsultants for legacy \nsystems (E.g.: CAPSIL, SALAS, OPAL and OB).  It allows users in Customer Services and other areas of the business to Verify the identification of a caller, Maintain a history of a caller’s contact, Make with enquiries, Perform alterations to a customer’s policy, Investigate the New Business, Review the Direct Debit instructions, Produce outputs (fax, letter, etc.), Provide valuations, Pass the call to another 4Front user and Automate the call hand-off.\n\nResponsibility:      \nDay to day support activities. \nMeeting the Client SLA on the production tickets.\nDesign and development of new change requests using  Java, struts, JSP and EJB.\nImplemented integration between the BPEL worklist and Oracle eBusiness Suite.\nResponsible for all the SDLC phases of a change request including testing and live support.\n\nEnvironment: Core Java , J2ee, Oracle Fusion(BPEL), JSP, Eclipse, Servlet, XML, Struts, Tiles, AJAX, EJB, JUnit, JBoss, websphere Application Server , Ant, JavaScript, CSS, Log4J, Junit,HTML, PL/SQL, CVS, MQ-Series, Mainframe(COBOL), RAD and  DB2. \n\nHilmar Cheese, India.\t\t                                                     \nSep’ 08 – Feb’ 2010\nTitle:  Custom Business Application.\nRole: Java Developer.\nDescription: This project has been designed and developed to process online order request. This project consist of different module such as online User Registration, Update User Information, Submit order online, payment, process order and delivery of order.\n\nResponsibility:\nInvolved in gathering requirements, Analysis, Design, Development and testing of the entire Application.\nInvolved in all phases of SDLC (Software Development Life Cycle).\nCreated UML diagrams like class diagrams and activity diagrams using the Rational Rose.\nParticipated in the design and development of application using JSP, HTML, CSS and JavaScript.\nUsed Eclipse as IDE tool to develop the application and JIRA for bug and issue tracking.\nDesigned and Developed the presentation layer using AJAX for RUI(Rich User Interface).\nJSON is used in conjunction with JavaScript for making HTTP requests.\nJQuery is used for validation.\nDeveloped the presentation tier of the application using Struts framework and MVC design pattern.\nConfigured the Hibernate ORM framework as persistence layer for the backend by using hibernate.confg.xml \nDesigned and developed DAO’s for accessing the POJO’s and updating the DB tables using the POJO’s, Java Collections, and Synchronization etc.\nUsed Hibernate object relation mappings (ORM) for the database operations on MySQL.\nDeveloped and modified the stored procedures, the DAO (Data Access Objects) and VO (value Object) classes for separating the Data Access logic and business logic.\nExtensively participated in application integration. Spring is used to integrate Struts and Hibernate. Implemented interceptors for Spring and Hibernate.\nTransactions were implemented using declarative transactions in Spring with transaction managers capable of supporting Hibernate.\nConfiguration issues in the various frameworks used were identified and resolved to extract an acceptable level of performance in terms of efficiency, response and robustness.\nConsumed Web Services as a gateway for the payment through the third-party.\nDeveloped Web Services using SOA, SOAP, WSDL, UDDI and JAX-WS,JAX-RPC programming models.\nUsed Ant as build tool for building and deploying it into Weblogic Server. Ant scripts are used for automating build process.\nDeveloped and execute unit tests and test suites for product components using JUnit Testing Used.\n\nEnvironment: Core Java, J2EE1.6.x, JDK, JSP, Struts 2.x, Tiles, JMS, Spring 3.x, Hibernate 3.0, MySQL, Eclipse, WebSphere Application Server, JBOSS, JSON, AJAX, JQuery, Web Services(SOAP,WSDL),Ant, JavaScript, CSS, Log4J, Junit,HTML, PL/SQL, CVS, MySQL and DB2.\n\n\nR-Systems International Ltd, India.\t\t    \t                       \nOct’07 - July’08\nTitle: RMS (Repayment Management System).\nRole: Software Programmer.\nDescription: RMS is Repayment Management System. Case appears in RMS only after the final disbursement of loan amount. In case of partial disbursement; only after the last disbursement the case will appear in RMS. RMS deals with how does the customer repays the Loan i.e. through his salary deduction or online transfer from checking a/c, etc.\n\nResponsibility: \nInvolved in Development of RMS Enhancements like RMS Transaction, RMS Monthly History, Scheme Change maker/checker, Customer service query, Non Provisioning Assets screens like specific provision manual marking, writeoff manual marking, sale of asset, property value updating, collateral value updating and ground rent prospect entry.\nDeveloped sub-modules of non provisioning Assets like sale of asset, writeoff manual marking and ground rent prospect entry.\nInvolved in requirements planning, analysis and design discussions with the technical team.\nDocumentation & review of requirements with design team.\nInvolved in preparing program specifications and testing scripts and updating the same.\nDeveloped stored procedures, Functions, views and also wrote PL/SQL scripts.\nUsed JSF layout for view of MVC.\nResponsible in troubleshooting application and understanding the same.\nUsed web services to fetch data synchronously from the other interfaces\nIntegrated Spring DAO for data access using with Hibernate.\nCoordinated with team in troubleshooting and fixing production application issues.\nInvolved in setting up processes, procedures, knowledge transfer to offshore teams.\n\nEnvironment: Core Java, J2EE, XSL, XML, JSP, Struts, Tiles, Spring 2.x, Hibernate, JavaScript, HTML, CSS, Oracle, Websphere Application Server, DB2, Web Services (WSDL, SOAP), SQL/PL SQL and windows. \n\n",
    "extracted_skills": [
        "agile",
        "aws",
        "cassandra",
        "communication",
        "css",
        "docker",
        "ec2",
        "git",
        "hadoop",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "mysql",
        "oracle",
        "problem solving",
        "python",
        "r",
        "rds",
        "s3",
        "scala",
        "scrum",
        "spark",
        "sql"
    ]
}