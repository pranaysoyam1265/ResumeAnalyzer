{
    "id": "resume_975d9c99-8caf-4b8a-98dc-7806aa7d56dc",
    "metadata": {
        "filename": "Amulya Komatineni.docx",
        "processed_date": "2025-09-24T08:45:38.764050+00:00"
    },
    "raw_text": "AMULYA KOMATINENI\n(515)309-1612\namulya.javadeveloper@gmail.com\n\n8+ years of experience in IT industry worked in all phases of software development life cycle from requirements gathering to the production and successfully implemented several projects.\n\n\nPROFESSIONAL SUMMARY:\nExpert working knowledge in using methodologies Agile Methodology & Software Development Life Cycle.\nHaving work experience in different domains like Healthcare, Banking, Finance, Telecom, and Retail.\nDeveloped applications using Java8 features like lambda expressions and functional interfaces.\nProficient in developing front-end systems with JavaScript, ReactJs, JQuery, Ajax, Bootstrap, HTML5, CSS3, Tag Libraries, Custom Tags and JavaScript frameworks such as AngularJS, NodeJS.\nExperienced in Client-side validations using Ajax in NodeJS, AngularJS, dash boards reports using BackboneJS.\nExpert in Java/J2EE technologies such as Struts, Spring Framework, JSP, EJB, Hibernate and Webservice. \nDeveloped applications with Spring using technologies Spring Core,  MVC, DAO, ORM, Boot, Heroku, Security, Integration, Spring Zuul, Spring Eureka, Spring Hystrix, Spring Ribbon.\nUsed Spring Boot Acurator to monitor and manage your application and to interact with different HTTP endpoints such as health, bean details, version details, configurations.\nBuild, Test and developed application from Docker containers and deployed into PCF environment.\nUsed Hibernate for Object Relational Mapping , MyBatis SQL Maps, Slick, and Java Ultra-Lite Persistence. \nExpertise in back-end/server side Java technologies such as webservice, JPA, JMS, JDBC.\nExpert in using SOA and Webservice Technologies and Tools like Webservice, SOAP, REST, UDDI, SOAP UI. \nExperience in XML related technologies like XML, DTD, XSL, XSLT, XPATH, JAXB, JAXP, SAX and DOM Parsers.\nAdapt in server side development skills using Apache and good knowledge of database connectivity (Data Source) for SQL databases like Oracle, MySQL and NoSQL like MongoDB,  Cassandra.\nMongoDB is used to develop dynamic queries on documents using a document based query language.\nExpertise in using Cassandra for achieving denormalization through features like collections.\nHands on experience on Amazon Webservice  provisioning and good knowledge of AWS services like EC2, S3, Elastic Beanstalk, ELB (Load Balancers), RDS, VPC, Route53, Cloud Watch, Cloud Formation, IAM, SNS.\nUsed Microservice with Spring Boot through a combination of REST and Apache Kafka message brokers.\nExpertise in Microservice using Spring, Spring Boot, Spring Cloud to develop loosely coupled processes.\nExpertise in deploy J2EE applications on IBM WebSphere/Web Logic Application Servers, Tomcat and JBOSS. \nUsed Scala for anonymous functions to increase productivity, applications scalability, and reliability.\nFamiliar with Design Patterns like Singleton, Factory Design, MVC, Data Access Objects, , Adapter, Service Locator, Session Facade, Observer, DAO, service proxy and circuit breaker.  \nUsed Apigee for enterprise business use APIs to securely share data and services across various devices.\nExpertise in Docker containers, leveraging Linux Containers and AMI's to create DockerImages/containers.\nUsed Swagger for designing and describing APIs and for keeping the API design and documentation in sync.\nExpertise in working on building tools like ANT, Maven, Gradle, Groovy, Log4j .\nWorked with Version Control Systems like GIT, WinCVS, CVS, SVN, VSS and Rational Clear Case. \nExperience in Webservice Technologies like SOAP, WSDL, UDDI and Restful. \nExperience in various Agile methodologies like Test Driven Development, SCRUM, and Pair Programming. \nDeveloping Unit  & Integration testing with JUnit, Karma, Jenkins, Camel, Selenium, Jasmine and Mockito.\nUsed Selenium as an automated testing for web applications across different browser and platforms.\n\n\n Technical Skills:\n\nPROFESSIONAL EXPERIENCE:\nClient: Liberty Mutual, Dover, NH                                                                                        September 2017 – Till Date\nRole: JAVA Full Stack Developer\nDescription: Liberty Mutual is an insurance company which offers auto & vehicle insurance, property insurance, life insurance and other insurances where user can manage their policies and file claims online. Company have few external partners where they upload and download necessary data. Our project is to process the transfer of file. Customer and Admin portals are used to trace and configure the transfer. Web Based File Transfer(WBFT) is developed to interact with liberty mutual teams by external trading partners using user interface.\n\n       Responsibilities:\nUpgraded existing UI with HTML5, CSS3, jQuery, Ajax, and Bootstrap with ReactJS interaction. \nUsed various JQuery and Bootstrap plug-in like date picker, Bootstrap selectors, and Gulp as a task runner.\nUsed Node Package Manager(NPM) online repository to install and update the dependencies.\nBuilt REST by building NodeJS in the back-end to handle requests sent from the jQuery Ajax calls.\nUsed Java 8 Lambda expressions to facilitate functional programming and for simplifying the development.\nDeveloped classes using core java concepts like Multithreading, Concurrency, Memory Management.\nUsed Multithreading to develop various helper classes in programming to improve overall performance. \nUsed Spring Boot Actuator to externalize application's configuration properties for various environments.\nConfigured Swagger-UI registered Microservice with Eureka to monitor services from Spring Boot console.\nUsed NGINX as a reverse proxy with the Spring Netflix components like Eureka, Ribbon, and Spring Cloud.\nDeveloped microservices with Spring Eureka to retrieve API routes and Implemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring microservice.\nDefined Hibernate Named Queries for Batch operations while defined Criteria Queries for Microservice.\nMicroservice have been built using Spring Boot, Spring security and deployed to AWS cloud. \nUsed Spring Cloud AWS Core, Spring Cloud AWS Context, and Spring Cloud AWS Messaging.\nUtilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger Lambda Functions Including EC2.\nDeveloped Spring Bach for AWS S3 rules like User Creation, Folder Permission, and deletion of file \nUsed PL/SQL and Oracle databases to store the information about the file transaction, sender, and receiver.\nDeveloped several REST webservice which produces both XML and JSON to perform tasks, leveraged by both web and mobile applications. RESTful webservice using Jersey for JAX-RS implementation. \nExposed and consumed SOAP based Webservice to communicate between systems.\nDeveloped several SOAPS based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability and JMeter to test performance of SOAP protocol. \nUsed Apache Kafka for building real time data pipelines and for storing data in a distributed cluster.\nExperience in working with messaging systems like Kafka, Event Sourcing, and Active MQ.\nUsed SOAP UI for Functional Testing, Performance Testing, Regression Testing and to test REST & SOAP.\nUsed Datahub dashboard to search and filter the transactions and used elastic search as a search engine.\nCreated and configured new JIRA projects and worked with departments to maintain existing JIRA projects.\nDeveloped Unit test cases using Junit, Mockito and Bamboo for continuous integration.\nUsed Docker to collaborate code, run and deliver more securely for both Linux, Windows Server.\nUsed log4j for logging and GIT, SVN for project management and version management. \nFunctional testing of the front-end applications is done using Selenium (IDE and Web Driver).\nCreated Clusters and instances in WebSphere 7.0 Network Deployment to support high availability, fail over and implemented horizontal clustering.\n\n      Environment: J2EE, ReactJs, jQuery, CSS3, HTML5, Ajax, NodeJS, Gulp, Core Java, Spring IOC, Spring MVC, \n      Spring Batch, Security, Spring Boot, Hibernate, Microservice, Eureka Server, NGINX, Swagger-UI, \n      Apache Kafka, AWS Cloud, AWS Lambda, S3, EC2, Scala, Datahub, REST Webservice, JAX-WS, SOAP UI, \n      JDBC, PL/SQL, ActiveMQ, JIRA, Bamboo, SVN, GIT, log4j, Junit, Selenium, JMS Queues, WebSphere.\n\nClient: Express Scripts, St. Louis, MO                                                                                         April 2016 – August 2017\nRole: JAVA Full Stack Developer\nDescription: Express Scripts provides integrated pharmacy benefit management services including network-pharmacy, claims processing, home delivery pharmacy services, specialty pharmacy benefit management through its subsidiary Accredit, benefit-design consultation, drug-utilization review, formulary management, medical and drug data analysis services to manage drug plans for health plans, self-insured employers and government agencies (both as administrator of employee benefits and public assistance programs).\n\n       Responsibilities:\nDesigned Prototype and project layout skeletons using AngularJS, JQuery, CSS3 and HTML5. \nInvolved in designing and developed presentation layer using Ajax, jQuery, and third-party libraries. \nUsed various JQuery and Bootstrap plug-in like date picker, Bootstrap selectors. \nUsed Apache Cordova to build native mobile applications using HTML5, CSS3 and Javascript.\nXQuery provides the means to extract and manipulate data from XML documents or any data source that can be viewed as XML.\nUsed Adobe Experience manager(AEM) to manage and deliver digital experiences across websites.\nUsed Groovy for various markup languages such as XML, HTML, and support for regular expressions.\nUsed Java 8 Lambda expressions to facilitate functional programming and for simplifying the development.\nUsed Java8 Stream API for Parallel execution in the Collections framework module of core java.\nDeveloped classes using core java concepts like Multithreading, Concurrency, Memory Management.\nUsed Multithreading to develop various helper classes in programming to improve overall performance. \nUsed Spring DI, annotations, and MVC to implement business layer and navigation part of application. \nUsed Spring Boot Actuator to externalize application's configuration properties for various environments.\nConfigured Swagger-UI registered Microservice with Eureka to monitor services from Spring Boot console.\nDefined Hibernate Named Queries for Batch operations while defined Criteria Queries for Microservice.\nMicroservice have been built using Spring Boot, Spring security and deployed to AWS cloud. \nUsed Spring Cloud AWS Core, Spring Cloud AWS Context, and Spring Cloud AWS Messaging.\nUtilized AWS Lambda platform to upload data into AWS S3 buckets and to trigger other Lambda Functions Including EC2, MongoDB focusing on high-availability, fault tolerance, and auto-scaling.\nDatabase required for creation of new tables, PL/SQL stored procedures, functions, views, indexes, constraints, triggers and required SQL tuning to reduce the response time in the application.\nUsed Cassandra to handle huge amount of data across many servers with out single point of failure.\nImplemented service layer on the top of Cassandra using Core Java, Data Sax API and Restful API.\nUsed PostgreSQL for multi version concurrency control and transaction.\nDeveloped several REST webservice which produces both XML and JSON to perform tasks, leveraged by both web and mobile applications. RESTful webservice using Jersey for JAX-RS implementation. \nExposed and consumed SOAP based Webservice to communicate between systems.\nDeveloped several SOAPS based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability and JMeter to test performance of SOAP protocol. \nUsed Redis as in memory database, for storing and fetching data in memory to increase the performance.\nUsed Apache Kafka for building real time data pipelines and for storing data in a distributed cluster.\nWorked on Drools Rule Engines with corresponding to validate the business User Roles.\nUsed SOAP UI for Functional Testing, Performance Testing, Regression Testing and to test REST & SOAP.\nUsed Apigee for web-scale, enterprise flexibility on premise and hybrid deployment on single code base.\nCreated and configured new JIRA projects and worked with departments to maintain existing JIRA projects.\nDeveloped Unit test cases using Junit, Mockito and Jenkins for continuous integration.\nUsed Apache Camel for integrating different applications with the enterprise design pattern. \nUsed Kubernetes for automating deployment, scaling and management of containerized applications.\nUsed Docker to collaborate code, run and deliver more securely for both Linux, Windows Server.\nDeveloped Maven scripts and builds using Maven and continuous integration servers like Jenkins.\nUsed log4j for logging and GIT, SVN for project management and version management. \nFunctional testing of the front-end applications is done using Selenium (IDE and Web Driver).\nDeveloped, Tested and Debugged the Java, JSP using Eclipse RCP. \nCreated Clusters and instances in WebSphere 7.0 Network Deployment to support high availability, fail over and implemented horizontal clustering.\n\n      Environment: J2EE, AngularJS, jQuery, CSS3, HTML5, Ajax, Core Java, Spring IOC, Spring MVC, Spring \n      Security, Spring Boot, Hibernate, Microservice, Eureka Server, Swagger-UI, Apache Kafka, AWS Cloud, \n      AWS Lambda, S3, EC2, Scala, MongoDB, REST Webservice, JAX-WS, SOAP UI, JDBC, PL/SQL, PostgreSQL,JIRA, \n      GIT, SVN, log4j, Maven, Apache Camel, Junit, Mockito, Jenkins, JMS Queues.\n     \n      Client: Commerce Bank, Kansas City, MO                                                                    Jan 2015 – Mar 2016\n      Role: Sr. JAVA/J2EE Developer & Full Stack Developer\n      Description: The project was to enhance the existing online application with A/C Information, Funds  \n      Transfer, Payment Service, Credit Card Services, Investment Services, Rates Online Application Forms,\n      and Customer Service. Development was based on Spring MVC architecture.\n  \n       Responsibilities:\nFollowed Agile software development paired programming, Test Driven Development, and Scrum meetings.\nDeveloped using new features of Java 1.8 annotations, Generics, enhanced for loop and Enums.\nUpgraded existing UI with HTML5, CSS3, jQuery and Bootstrap with AngularJS interaction.\nDeveloped Single page application and structured the JavaScript code using AngularJS framework including MVC architectures, different modules, specific controllers, templates, custom directives, and custom filters.\nWorked with java Swing GUI controls for developing a module in the front-end part.\nUsed Java-J2EE patterns like Model View Controller, Singleton, Data Access Objects, factory patterns.\nUsed Core Java concept like Multithreading, Concurrency for performance and memory tuning.\nUsed Spring Framework AOP Module to implement logging in the application for application status.\nSpring MVC Framework IOC design pattern is used to have relationships between application components.  \nDeveloped microservices with Spring Eureka to retrieve API routes and Implemented Spring Circuit breaker pattern, integrated Hystrix dashboard to monitor Spring microservice.\nDeveloped Spring Quartz jobs to run the backend jobs and generated reports.\nUsed Hibernate for back end development and Spring dependency injection for middle layer development.\nDeveloped SOAP based JAX-WS Webservice interfaces for integrating multiple systems, code re-usability\t\nDeveloped Microservice and worked on Spring Boot, deployed applications on Pivotal Cloud Foundry. \nUsed DAO pattern to fetch data from database using Hibernate to carry out various database.\nUsed PL/SQL to extract data from the database, delete data and reload data on Oracle DB. \nDeveloped Applications using Rule Engines- JBoss Drools 4.x to validate the business User Roles.\nWorked with Apache Camel as a standalone application by deploying in JBOSS application server. \nUsed Docker to deploy applications using containers to allow package up application with all configuations. \nUsed Spring Boot to interact through a combination of REST and Apache Kafka message brokers\nWorked on development and operations to facilitate deployment of components over AWS using Jenkins.\nUsed SVN, GIT for the version management and for version controlling software and JIRA for issue tracking.\n\nEnvironment:  Java 1.8, HTML5, CSS3, iQuery, Bootstrap, AngularJs, Swing, Threading, AWS cloud, Spring MVC, \nSpring Boot, Spring Quartz, Hibernate Framework, Hibernate Transaction Management, Hibernate Batch Transactions, JAX-WS, Microservices, PL/SQL, Oracle DB, Cassandra, JBoss Drools 4.x, Docker, JMS, Maven, Jenkins, Apache Camel, SVN, JIRA.\n \nClient: E-Trade Financial Corporation, Exchange Place                                               July 2012 – Dec 2014\nRole: Sr. JAVA/J2EE Developer\n       Description: E-Trade Financial Corporation is a U.S based financial services company headquartered in   \n       New York. It is a holding company, the major business of which is an online discount stock brokerage\n       service for self-directed investors.\n\n Responsibilities:\nPrepared Analysis document and followed AGILE software development with Scrum methodology.\nDeveloped the application on NodeJS platform using JavaScript programming.\nUsed JavaScript and JQuery for validating the input given to the user interface. \nApplied data transformation rules to transform code from one format to another format using NodeJS.\nCreated the Nodejs express server to build MVC framework from front-end side AngularJS to back-end.\nDeveloped front-end code with Ajax call in AngularJS and jQuery to retrieve data as JSON Object.\nExtensive experience using framework APIs like Struts, SPRING, iBatis and Hibernate.\nWorked on the SPRING framework like SPRING IOC, SPRING DAO, SPRING ORM and Spring Integration. \nInvolved in the development of backend Logics or data access logic using Oracle DB & JDBC. \nDeveloped API using Hibernate to interact with the Oracle database. \nExpertise in Multithreading, Remote Method Invocation (RMI), EJB, Serialization, and Java Beans.\nWorked extensively on SPRING MVC framework to develop new internal web application.\nUsed Spring AOP components for the Logging, Exception handling and Transactional Models.\nEnforce compliance with dynamic processing and security policies by using Mule ESB. \nDeveloped Spring boot application with microservice and deployed it into AWS using EC2 instances. \nUses the DAO pattern for data access layer and JMS API for the messaging requirement.\nDesign PL/SQL batches using Core JAVA with connectivity to Oracle for data maintenance and handling.\nTest API responses for WCS changes deployed on continuous basis, validate Green Box and MongoDB data.\nDeveloped test cases and performed unit test using JUnit Framework and used JIRA for tracking bugs.\nDeveloped and executed SQL queries for testing database integrity and for data analysis using Selenium. \nDeveloped automated regression test cases in Selenium WebDriver using Java programming language. \nUsed Maven to build and generate code analysis reports and JENKINS for continuous integration.\nUsed WebLogic for design, development, and deployment of applications.\n\nEnvironment: Java, J2EE, SPRING, Hibernate, Struts, WebLogic, Restful, JQuery, AJAX, Ext JS, JavaScript, AngularJs, JSP, JSTL, Servlet, Microservice, Oracle, CRUD, PL/SQL, JIRA, Angular, GWT, JDBC, AWS, MongoDB, NodeJS, Adobe (CQ5), Bootstrap, Core Java, jBPM, NoSQL, UML, Eclipse, Junit, Maven, Agile, SOA, JIRA, JENKINS, Selenium.\n  \nClient: US Cellular - Chicago, IL                                                                                                     April 2011 – June 2012\nRole: Java Developer\nDescription: US Cellular is the fifth-largest full-service wireless carrier in the United States, providing     national network coverage and industry-leading innovations designed to elevate the customer experience. The Chicago-based carrier has a strong line-up of cutting-edge devices that are all backed by a high-quality network in big and small cities and rural communities, and currently.        \n                                                                                                                                                                                                                                                                       \nResponsibilities:\nSprint planning sessions and participated in the daily Agile SCRUM meetings.\nDesigned and implemented web module using SPRING MVC.\nDesigned & Developed persistence service using Hibernate framework.\nDevelop high-level class diagrams, sequence diagrams, and implement the same in Java, SPRING, and SOAP.\nDeveloped web screens in JSP, JSTL, CSS3 and client side validation using JavaScript and JQuery.\nUsed Struts validation and tiles framework in the presentation layer and tags to simplify complexities. \nDeveloped JSP  custom tags in the web tier to dynamically generate web pages. Worked with Struts (MVC Paradigm) components such as Action Mapping, Action class, Dispatch action class, Action Form bean. \nUsed SPRING ORM module for integration with Hibernate for persistence layer.\nUsed SPRING AOP in exception handling, which reduces the development time to handle the exceptions.\nDeveloped SOAP based Webservice using JAX-WS and tested the webservice with SOAPUI.s\nUsed JIRA for defect tracking and project management.\nUsed STS (SPRING Tool Suite) as software development platform for developing the whole application.\nUsed SVN for the version management and for version controlling software.\nConfigured Selenium WebDriver, TestNG, Maven and created selenium automation scripts using Test NG. \nPerformed functional testing to identify critical points  and automated it by using Selenium web driver. \nUnit and integration test cases are designed  using Junit and Log4j for log error, info and debug messages.\nTested Service and data access tier using JUnit in TDD methodology.\nFollowed Agile SCRUM methodology and used Test Driven Development (TDD). \nProject builds with Maven and Eclipse as IDE for application development and integration of  frameworks.\nUsed Apache Tomcat as application server to deploy the application.\n\nEnvironment: Java/J2EE, JSP, Spring, Servlet, JDBC, Hibernate, Soap, SPRING, Struts, XML/XSL, DB2, JUnit, JSTL, Jira, Eclipse, SOAP Webservice, Selenium, TDD, SOAP UI, AJAX-WS RAD, Log4j, SQL, Maven, Tomcat, Log4j, WebLogic.\n\n Client: Footlocker -  New York, NY                                                                                                           Oct 2009 – Mar 2011\n Role: JAVA/J2EE Developer\n Description: This is an internet based online shopping website in which products will be sold                         electronically involving buyers and sellers. The application also has googled map to represent the address. The products that this application sell, or buy are related to electronic products, consumer products and household products.\n\nResponsibilities:\nInvolved in the complete Software Development Life Cycle including Requirement Analysis, Design, Implementation, Testing and Maintenance.\nDeveloped JSP, HTML5, XHTML5, CSS3 pages for modified views worked on responsive web design.\nWrote Code to interact with back-end JAVA, AJAX, JSON.\nUsed AJAX with JQuery to parse JSON object to dynamically overlay contents on web pages.\nUsed JSF components and custom styles to convert model output to a tabular schedule view for trainees.\nResponsible for system analysis, design and development, which is built on top of J2EE and SPRING MVC.\nInvolved in various phases of Software Development Life Cycle using Agile Methodology.\nDeveloped code for obtaining bean references in SPRING framework using Dependency Injection.\nDeveloped DAO layer using Hibernate and SPRING and implemented the web tier using SPRING MVC.\nUsed Java/J2EE Design Patterns such as DAO pattern, MVC pattern, singleton in the project extensively, which facilitates clean distribution of roles and responsibilities across various layers of processing.\nInvolved in consuming and developing RESTful Webservice using SPRING MVC and Hibernate.\nImplemented Maven Script to create JAR, WAR, EAR and deploy the entire project onto the WebSphere.\nUsed Oracle SQL developer for the writing queries or procedures in SQL.\nMonitored the error logs using Log4J and fixed the problems and GIT, SVN for version control.\nUsed WebSphere as the Application Server to deploy the application.\nUsed JUnit for the unit testing of various modules.\n\nEnvironment: Java/J2EE, Eclipse, JSP, SOAP, RESTful, JMS,AJAX, JSON, SPRING, Hibernate, XML, XSLT, HTML5, XHTML5, CSS3, JavaScript, JSF, WebSphere, Oracle SQL Developer, Maven, Agile scrum, Integration tool, Log4J, GIT, JUnit.\n\nClient: YANA Software Pvt., LTD - Hyderabad, INDIA.                                                                    Sep 2008- Sep 2009  \nRole: JAVA/J2EE Developer\nDescription:  The product was online banking system which provides personal savings details to the clients. It offers a wide range of financial clients and as per users account status offers him to take up the new schemes. Upon the user request it generates the corresponding requests and sends to the user.\n\nResponsibilities: \nDeveloped presentation screens by using JSP, HTML and JavaScript.\nImplemented Model View Controller (MVC-2) architecture and developed Form classes, Action   Classes for the entire application using Struts Framework and used for server side validation..\nPerformed client side validations using JavaScript.\nUsed Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer.\nUsed HQL statements and procedures to fetch the data from the database.\nTransformed, Navigated and Formatted XML documents using XSL, XSLT.\nUsed JMS for asynchronous exchange of message by applications on different platforms.\nDeveloped the view components using JSP, HTML, Struts Logic tags and Struts tag libraries.\nInvolved in developing SQL queries, stored procedures, and functions.\nCreation of database objects like tables, views using oracle tools like Toad, and SQL* plus.\nInvolved in writing Stored Procedure in using PL/SQL.\nUsed JUnit Testing Framework for performing Unit testing.\nDeployed application in Tomcat and developed using Rational Application Developer RAD.\n Environment: Struts 2.0, Hibernate 3.0, Servlets 2.5, JSP, JMS, CVS, JavaScript, XSL, XSLT, PL/SQL, Junit, Tomcat, Oracle 10g.                                                                                 \n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "cassandra",
        "data analysis",
        "docker",
        "ec2",
        "git",
        "heroku",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "kubernetes",
        "lambda",
        "mongodb",
        "mysql",
        "oracle",
        "postgresql",
        "project management",
        "rds",
        "redis",
        "s3",
        "scala",
        "scrum",
        "sql"
    ]
}