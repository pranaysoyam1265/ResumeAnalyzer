{
    "id": "resume_0c766b29-ffa6-4c41-bbb7-6e13e2a785d9",
    "metadata": {
        "filename": "Sravani Singirikonda.docx",
        "processed_date": "2025-09-24T08:45:55.207820+00:00"
    },
    "raw_text": "Sravani                                                                                                                                     Ph:  (515) 309-2734\nSr. UI/J2EE Full Stack Developer                                                                           Email:   saiteja@theegiants.com  \n\n8+ Years of experience in analysis, design, implementation and testing of Object Oriented Applications in Client/Server environments using Java/J2EE and UI technology stacks.\nExperience working with various methodologies based on Agile, Scrum, Waterfall Model, TDD, Iterations.\nProficiency working with frontend frameworks such as jQuery, AJAX, JavaScript, Node.js, ExpressJS, ReactJS, BackBoneJS, AngularJS, Angular2. Also used Grunt js, Gulp Server, Yeoman Generator for AngularJS.\nExpertise in design and development of various web and enterprise-level applications using Java/J2EE technologies.\nExperience in developing entire frontend and backend modules using Python on Django Web Framework on MySQL.\nExperience with Java EE design patterns such as MVC, Singleton, Session Facade, DAO, DTO.\nStrong experience in JSF, Struts and Spring Framework modules such as Spring MVC, IOC, AOP and Spring JDBC, Spring JTA, Spring IO, Spring Boot with Thymeleaf and Spring Security Framework for User Access Management.\nStrong understanding of Microservice patterns – Hystrix, Aggregator, Proxy chaining.\nDeveloped applications using latest technologies like EJB3.0, Spring Boot, Hibernate3.2/4.x, and REST based Web services (axis2.0, JAX WS 2.0), Rule Engines (Drools4.1, ILOG), XML API and tools.\nExperienced in Middleware persistence framework like Hibernate/JPA for mapping Java classes with database and using HQL, Named Queries, Transactions, Cache, Criteria, Projections.\nExperience in working with Service Oriented Architecture, that includes (UDDI) lookups & (WSDL) using SOAP.\nAnalyzed, developed and implemented various Design patterns (Session Façade, Value Object, DAO, DTO, Command, Singleton, Factory, Adapter, MVC, Service Locator etc.) using J2EE technologies.\nExperience in configuring and deploying the applications on Tomcat, WebSphere, WebLogic and JBoss Servers.\nExperienced in writing complex SQL queries, procedures, Triggers and Stored Procedures in various databases such as Oracle, DB2 MySQL and Sybase. Also, extensively worked on NoSQL Databases like MongoDB and Cassandra. \nExperienced in integration, deployment and building using tools like ANT, Maven, Jenkins, Kubernetes & Docker.\nExperience in debugging and logging using the log framework - log4j and analysis and reporting with Splunk.\nExperience in JUnit frame work with Mockito and Power Mock, SpringJunitRunner.\nExperienced in development using IDE's such as Eclipse, Rational Application Developer (RAD), NetBeans, IntelliJ. \nProficient in using AWS. Extensive experience focusing on services like EC2, Elastic Beanstalk, Cloud Watch, Cloud Front, Cloud Formation, IAM, S3, RDS, ElastiCache, SNS, SQS, Dynamo DB, Lambda.\nGood Knowledge in Apache Active MQ Series with Apache Camel, JMS, Kafka messaging queues. \nExperience in using different version controlling/tracking systems Subversion, CVS, GIT, and Rational Clear Case.\n\n\n\t\t\t \n\n \tClient: Express Scripts, Franklin Lakes, New                                                                                              Dec 2016 – Till date\tRole: Sr. Java/J2EE Developer\nProject Description: \nThe project deals with the capability to refill prescriptions on-line check an order status, and research drug and health information and enables express to have multiple billers in place. Focuses especially on the cost effective and appropriate delivery of prescription medications to the market and assists its customers to moderate the cost and enhanced the quality of prescription drug benefits to the members nation-wide.\n\nResponsibilities:\nFollowed Agile (SCRUM) methodologies and developed Technical design documents. \nExtensively worked on modern MEAN Stack- MongoDB, Express.JS, AngularJS, and Node.JS.\nAdded dynamic functionality to the application by implementing jQuery, Node.js. Modularized front-end CSS and JavaScript code with SASS. Built a real-time mouse/click user analytics web service with Node.js \nDeveloped various screens for the front end using Angular2 and used various predefined components from NPM (Node Package Manager). Used Node Cron package to schedule periodically executable jobs.\nUsed various features in Angular2 like data binding, routing, custom filters, custom directives to meet various customized requirements. Used the http services in Angular2 to make REST API calls and exchange data in JSON.\nUsed Java version 8 Lambda expressions, Streams, Predicates, parallel operations etc. on collections.\nUsed Python scripts to update content in the database and manipulate files. Developed Python OO Design code for manufacturing quality, monitoring, logging, and debugging code optimization.\nWorked with Microservices related frameworks Spring Ribbon, Eureka for client-side load balancer and network discovery. Also, Integrated with Spring Cloud Netflix's components like Eureka (Service Discovery), Hystrix (Circuit Breaker), Ribbon (Client Side Load Balancing) and Zuul Proxy.\nSpring Boot Microservices were developed with microservice architecture using REST and Apache Kafka.\nCreated REST based web services by establishing links using HATEOAS from Spring based application.\nImplemented Hibernate Template to use of HQL, Named Parameters, Named Queries, validations & interfaces like Expression, Query & Criteria. Implemented Hibernate/JPA for data persistence.\nUsed ELK for reporting, monitoring logging, debugging and error tracing. Worked on purging logs on Elastic Search DB and Kibana UI. Also involved in trouble-shooting logs using Logstash and Kibana.\nProvided dev support for IBM’s API Connect and DataPower appliances in a multi-tiered environment.\nWorked on Rest Web services as well as Node Rest framework for backend services, used Mongo DB\n(NoSQL) for database services. Created/managed Mongo DB/NoSQL collections.\nResponsible for Configuring Kafka Consumer and Producer metrics to visualize the Kafka System performance and monitoring. Responsible for migrating existing modules in IBM MQ to Kafka.\nBuilt Docker Images and have run them on Docker container. Deployed Docker contained Spring boot micro services in to AWS EC2 container service using AWS admin console and used lambda to run applications in AWS.\nUsed Maven to configure, build and deploy the Modules. Also, integrated these scripts with Jenkins.\nInvolved in evolution of test automation framework based on Selenium, TestNG and Cucumber.\nUsed Selenium WebDriver for automating functional testing & to identify various critical points applications.\nExecuted Selenium test scripts on different browsers and checked for compatibility.\nWorked on GIT as Version Control System to track various code conflicts of the project. \n\nEnvironment: Java 8.0, Spring 4, Hibernate 4.2, Spring batch/security/JTA/Boot, JPA, JavaScript, NodeJS, Angular2, HTML5, CSS, WAS 8.5, MicroServices, RAD 8.0, Oracle 11g, Maven, log4j, Junit, XML, Web Services, Kafka, Splunk, GIT.\n\n  \n  Client: John Deere, Des Moines, IA             \t\t\t\t\t\t         Oct 2014 – Nov 2016\n  Role: Sr. Java/J2EE & Web Developer\n  Project Description:\n Deal manager is an interface for all the Agricultural products offers for its enterprise clients. This application is used to sell products and to keep every record of it, Deal Manager is responsible for establishing a platform for enrolment of clients, selling products, billing and supporting. It will also serve as a repository of previous sales, clients, products and requests.\n\n\n    Responsibilities: \n\nWorked on Agile Scrum methodology and involved in stand-up meetings to monitor the progress.\nDeveloped Web application using JavaScript, MVC and OOP client-side validation using JavaScript.\nUsed ReactJS to build the UI components, developed filters to display different dimension of data and font size modifiers. Integrated Redux data store allowing React components to have access to data Implemented the Model View Controller (MVC) framework and spring.\nDevelop various screens for the front end using React JS and used various predefined components from NPM (Node Package Manager) and React Redux library.\nResponsible for the technical direction and implementation of the Spring Batch framework according to   contemporary design with spring security. Implemented various features of spring framework such as   Dependency Injection, IOC Containers, and Spring integration with Hibernate.\nImplemented application architecture of the System based on Spring MVC and J2EE specifications.\nImplemented application security including User Management, LDAP authentication,  authorization.\nCreated request for Proposal microservice to provide RESTful API with Spring MVC. \nImplemented contemporary design based on Spring Batch system to process over heavy transactions.\nWorked on spring boot, Spring Restful template to develop Application level MicroServices.\nUsed Eclipse-Spring Tool Suite (STS) for Microservices with Spring Boot & deployed into AWS lambda.\nHibernate DAO classes were developed to retrieve & save data using Spring framework manager classes.\nDesigned, built and deployed a multitude application utilizing all the AWS stack (Including EC2, R53, S3, RDS, DynamoDB, SQS, IAM, CloudFormation and lambda functions) focusing on high-availability.\nManaging multiple AWS instances, assigning the security groups, Elastic Load Balancer and AMIs. \nDeveloped Applications using Rule Engines, Drools and ILOG to validate the business User Roles.\nImplemented service layer on the top of Cassandra using Core Java, Data Stax API and Restful API.\nDeveloped DAO layer using Cassandra and expertise in CQL (Cassandra Query Language), for retrieving the data present in Cassandra cluster by running queries in CQL.\nDeveloped internal Log Delivery System, utilizing various Apache products, Kafka, Storm, and Tomcat.\nWorked with Apache Tomcat 8 and NodeJs servers to deploy/configure Java API’s and frontend modules.\nUsed PL/SQL stored procedures for apps that needed to execute as part of a scheduling mechanisms.\nCreation of database objects like tables, stored procedures using Oracle tools like TOAD. Expertise in developing and enhancing Oracle forms and Oracle reports.\nApache Mesos and Kubernetes were used as the best ecosystem to deploy and manage Micro-services.\nDeveloped CI/CD system with Jenkins on Kubernetes container environment utilizing Kubernetes.\nUsed Maven, Nexus and Jenkins to automate the build and deploy process. Tested Service and data access tier using JUnit. Used GIT as version management, JIRA for defect management system.\n\nEnvironment: Java 7.0, Spring 4, Hibernate 4.2, Spring batch/security/JTA/Boot, JPA, JavaScript, NodeJS, ReactJS, HTML5, CSS, Eclipse, Cassandra, Oracle 11g, SOAP, Maven, log4j, Junit, XML, ILog JRules 5.0, GIT.\n\n\n\nClient: Liberty Mutual Insurance, Warrenville, IL \t\t\t\t              \t    July 2013-    Sept 2014\n  Role: Sr. Java/J2EE & Web Developer\nProject Description: \nLiberty Mutual Insurance is an American diversified global insurer, and the second-largest property and casualty insurer in the United States. Ecommerce application provides services such as Auto Insurance and home insurance. The application is used for accessibility into the appropriate Agent Centre applications and generating quotes and policies, payments and reports. The project includes integration with different third-party components like Trans union for insurance score MVR for getting the driver license details app from component to print the Application forms and ID Cards online.\n\nResponsibilities:  \nInvolved in full project management life cycle from development to integration, testing and release. \nDefined strategic initiatives on CI/CD model with Extreme programming (XP), and build automation, in an AGILE development environment to help, respond quickly to business needs and deliver Quality products.\nDeveloped Interactive web pages using AngularJS, HTML, CSS and JavaScript. Developed UI components using AngularJS features like dependency Injection, Models, data binding and controllers.\nImplemented AngularJS client-side form validation, format view results using various controls and filters.\nCreated multiple views using layout template and AngularJS ngRoute and developed test cases for AngularJS using Karma and Grunt.\nAll the functionality is implemented using Spring IO , Thymeleaf and Hibernate ORM.\nImplemented Java EE components using Spring MVC, Spring IOC, Spring transactions & Spring security modules. Developed strategy for integrating internal security model into new projects with Spring Security.\nImplemented the Microservices to base on RESTful API utilizing Spring Boot and Spring MVC by developing RESTFUL web services using Spring RESTFUL template.\nWorked with JAXB, SAXP and XML Schema for exporting data into XML format and importing data from XML format to DB and JAXB in the web service's request response data marshalling & unmarshalling.\nExtensively used Java server Faces (JSF) Navigation rules and JSF tags for enhanced user Interface. \nUsed log4j for logging errors in the application and used JUnit for unit testing of the application.\nInvolved in the development of project back-end layer using by most of core java features such as Interfaces and Exceptions. Used java Collections API extensively such as Lists, Sets and Maps. \nMultithreading was used to process data in chunks to improve performance. \nImplemented ExecutorService in the application, which can execute tasks in the background like a thread pool.\nIncreased database performance by utilizing MySQL config changes and multiple instances.\nMySQL processes and queries optimization. Exported & Imported database 10g objects from dev to production.\nInvolved in creating test cases using JUnit strictly following Test Driven Development(TDD) methodology. \nUsed JUnit, Mockito and Power Mocks framework for unit testing of application and implemented Test Driven Development (TDD) methodology.\nUsed Java Messaging Services (JMS) for reliable and asynchronous exchange of important payment status report information and other critical information. \nWorked on Selenium Data Driven framework and integrating it with Maven [Build Management Tool], TestNG [Unit Testing tool] and Jenkins [Continuous Integration Tool].\nImplemented Continuous Integration of automation framework using tools like Jenkins, Hudson.\nExtensive use of SVN for version controlling and source code management.\n\nEnvironment: Java 7.0, Spring 4, Hibernate 4.2, Spring batch, Spring quartz, Spring security, Spring JTA, Spring Boot, JPA, Java Scripts, AngularJS, HTML 4.0, CSS, JMS, JAXP (SAX & DOM), WebSphere Application Server 8.5, Eclipse, MySQL, SOAP, RUP, Maven, log4j, Junit, XML, Web Services, ILog JRules 5.0, Splunk, GIT.\n\n\n\n\nClient: Flagstar Bank, Troy, MI  \t\t\t\t\t                              \t              \t  Sept 2012 – June 2013\t\nRole: Sr. Java/J2EE Consultant \nProject Description: Participated in the development of a paperless web-based document tracking and management system for department specializing in home mortgage loans. Responsible for both front end and back end development. HTML5, JavaScript/jQuery, and Java Server Pages were used on the front end. Implemented backend rules and logic using Java/J2EE and Spring Tools. SCRUM (Agile Development) was the methodology used for the development of this product. Eclipse IDE was used for development.\n\nResponsibilities:  \nInvolved in various SDLC phases like Requirement gathering, Design, Analysis and Code development and the project was developed using Agile based SCRUM Methodology. \nExtensively used Java Scripts to enforce client-side validations and used jQuery for Ajax processing. \nImplemented Struts Framework and Hibernate in the latest version of the Application. Involved in coding for the presentation layer using Struts and JavaScript. Implemented AJAX base applications using jQuery.\nUsed jQuery, JavaScript libraries for developing the JavaScript validations and widgets. \nUsed EJB Stateless/Stateful session beans to implement business logic, session handling, and transaction and deployed Enterprise Java Beans both Session and Entity on WebSphere Application Server. \nInvolved in development of various webservices using IBM Websphere to interact among Applications. \nWrote various select/update/insert SQL queries and stored procedures for Sql Server. \nInvolved in unit testing, troubleshooting and debugging. Modifying existing programs with enhancements. \nInvolved in fixing bugs the bugs or defects in the application. \nDeveloped Entity Beans as Bean Managed Persistence Entity Beans and used JDBC to connect to backend database DB2. Developed the UNIX shell scripts to automate jobs.\nWorked on Linux environment for deploying the application, running scripts for jobs.\n\n  Environment: Jakarta Struts Framework 2.0, Core Java, Hibernate 3.0, EJB, Web Services, CSS, eclipse Helios, CVS, WebSphere Application Server 7.0, JUnit, UNIX, JavaScript, Servlets, JSP, JDBC, jQuery, DB2.\n\nClient: Best Buy, Richfield, MN \t    \t\t\t\t\t\t\t\tNov 2009 – Aug 2012\nRole: Java/J2EE Developer \nProject Description: \nExpress lane is an E-Commerce application designed for the agents that provides complete set of order services and information. Agents can perform sale of items, return of items, and price override of items, apply promotions of items, perform catalog item look up.\n\nResponsibilities: \nDesigned Use Case and Sequence Diagrams according to UML standard using Rational Rose. \nImplemented Model View Controller (MVC-2) architecture and developed Form classes, Action Classes for the entire application using Struts Framework. Performed client-side validations using JavaScript and server-side validations using in built Struts Validation Framework. \nUsed different UI technologies JSP, HTML, CSS, JavaScript for developing the GUI of the application. \nImplemented the data persistence functionality of the application by using Hibernate to persist java objects to the relational database. Used Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer. Used HQL statements and procedures to fetch the data from DB. \nTransformed, Navigated and Formatted XML documents using XSL, XSLT. \nUsed JMS for asynchronous exchange of message by applications on different platforms. \nDeveloped the view components using JSP, HTML, Struts Logic tags and Struts tag libraries. \nInvolved in designing and implementation of Session Facade, Business Delegate, Service Locator patterns to delegate request to appropriate resources. \nInvolved in developing SQL queries, stored procedures, and functions. \nCreation of database objects like tables, views using oracle tools like Toad, and SQL* plus.\nInvolved in writing Stored Procedure in using PL/SQL. \nWorked on Linux environment for jobs scheduling for inbound data on monthly basis.\nUsed JUnit Testing Framework for performing Unit testing. \n \n Environment: Struts 2.0 Hibernate 3.0, JSP, RAD, JMS, CVS, JavaScript, XSL, XSLT, Servlets 2.5, and Web Sphere Application Server6.1, Oracle 10g.\n\n  Client:  HSBC, Bangalore, India\t\t\t\t\t\t                            \t\tOct 2008 – Oct 2009                                   \n  Role: Java Programmer \n  Project Description:\n  This project involves developing a J2EE based framework to support dynamic report creation from various distributed databases. The framework supports dynamic PDF report generation using iText, an open source PDF generation library. The framework facilitates new report formats and databases by using xml configuration files. ​\n\t                 \n  Responsibilities: \n\nDeveloped presentation screens by using JSP, HTML and JavaScript. \nDeveloped Session beans for functionality as per the requirement. \nPrepared Unit test cases for existing functionality as per the requirement and execute the same. \nInvolved in the Integration testing support and involved in bug fixing. \nResponsible for writing detail design documents and class diagrams and sequence diagrams. \nUsed various Design patterns like MVC, DAO pattern, and singleton to achieve clean separation of layers. \nCreated Servlets which route submittals to appropriate Enterprise Java Bean (EJB) components and render retrieved information. Developed Session Beans to process requests from the Developed Custom tag libraries to separate presentation and processing logic. \nUsed Hibernate API to perform database operations\nWorked on Hibernate persistence tier. This involves developing mapping files and Hibernate (POJOs/ DAOs) \nInvolved in developing SQL queries, stored procedures, and functions. \nInvolved in tracking and resolving Production issues. \nUsed Lo4j debugging tool to monitor the Error Logs. \n\nEnvironment: Java, Servlets 2.5, JSP 2.1, spring, JDBC, JavaScript, HTML, Oracle, PL/SQL, SVN, Hibernate 3.0 and Weblogic 7.0.\n",
    "extracted_skills": [
        "agile",
        "aws",
        "cassandra",
        "ci/cd",
        "css",
        "django",
        "docker",
        "dynamodb",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "kubernetes",
        "lambda",
        "mongodb",
        "mysql",
        "node.js",
        "oracle",
        "project management",
        "python",
        "rds",
        "react",
        "redux",
        "rest api",
        "s3",
        "scrum",
        "sql"
    ]
}