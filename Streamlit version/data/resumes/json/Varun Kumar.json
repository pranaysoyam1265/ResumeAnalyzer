{
    "id": "resume_5d154bde-1287-427c-b001-73b9be5304b3",
    "metadata": {
        "filename": "Varun Kumar.docx",
        "processed_date": "2025-09-24T08:45:58.059848+00:00"
    },
    "raw_text": "VARUN KUMAR\t\t\t\t    Varunkumar.work@gmail.com\t\t\t\t601 651 0507\n\n\nOBJECTIVE:  \t\nSeeking a position at your Company where I can maximize my 8+ years’ experience and with business 2 business and business 2 client application using Two-tier, Three-tier and N-tier architecture in domains like Telecom, Finance, E-Commerce etc. A self-starter, quick learner and capable of working independently to achieve deadlines.\n\nPROFESSIONAL SUMMARY:\nKnowledge on Java 8 features like Stream API and Lambda expressions, Method References, creating resource classes, Fetching documents from DB.\nProficient in Java and J2EE technologies including JSP, JDBC, JPA and JMS.\nExperienced in HTML, XHTML, DHTML, XML, CSS, Angular, JavaScript, jQuery, JSP and Servlets.\nExperienced in developing web applications using Java, Servlets, JSP, JDBC, JNDI and AJAX.\nWorked in MVC architecture with Angular JS and SPRING and Spring AOP.\nExpertise to make SPA’s better using AngularJS directives and filters and integrated with Spring forms.\nExperienced with Front-End frameworks like AJAX, JavaScript, NodeJS and Angular JS.\nWorked on Service Oriented Architecture (SOA) such as Apache Axis web services which use SOAP, REST, and WSDL and exposure to JAXB, JAX-RPC, and JAX-RS & JAX-WS.\nExpertise in design and development of enterprise level spring based web applications using Spring REST, Hibernate, EJB, Struts, Servlets, JSP and JSF for User Interface Applications.\nProficient in Spring AOP, Security, Event Handling, Spring MVC, Spring IOC Container.\nUsed Apache Kafka for integration and Data Processing with Spring and for Multi-Threaded Message Consumption.\nDeveloped and implemented Stand-Alone applications with Spring Micro services and their patterns.\nWorked on Spring Ribbon for load balancing and used fail safe methodology using Circuit Breaker pattern with Hystrix/Dashboard on designing and implementing Micro service applications.\nHands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon.\nExperienced in AWS Dynamo DB to capture the any modification on DB. \nAdding permissions to AWS SQS to interact with the Queue and involved in writing custom policies.\nExtensive working with Amazon web Services like using Elastic Beanstalk, EC2 and AMI with Linux.\nProficient in SQL, PL/SQL, Stored Procedures and Triggers while dealing with automation on DB.\nExperienced with NoSQL databases like MongoDB and Cassandra on large data platforms.\nProficiency in developing/maintaining using Oracle, MySQL and SQL Server.\nExperienced in web Application servers like Web Logic, JBoss, WebSphere and Tomcat.\nExperience with Docker images, Containers, push/pull with Spring Boot, used Jenkins for CICD.\nExperience in using Jenkins for Continuous Integration and Sonar jobs for java code quality.\nStrongly associated with usage of Selenium and Junit for Unit and System Testing.\nExperience with the Integrated Development Environments like Eclipse, NetBeans, STS and IntelliJ.\n\nTECHNICAL SKILLS: \n\n\nPROFESSIONAL EXPERIENCE: \n\n\nResponsibilities:\nInvolved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modelling, analysis, design, development, and testing.\nMaintained Interface compatibility and concurrency in the project using Java 8 new features like default, static methods and Concurrency API.\nDeveloped the view-controller components using JSPs, HTML5, CSS3, AJAX, JavaScript (jQuery).\nImplemented routing logic and navigation from screen to screen and implemented login functionality on the client side in AngularJS.\nHands-on experience in developing integration with Elastic search in any of the programming languages like JAVA and Having knowledge of advance reporting using Elastic search and Node JS.\nImplemented core features of AngularJS framework such as dependency Injection, Data-binding, Filters, Directives, Templates, Services and Deep Linking Designing. \nWorked on server-side validations, handle actions, events and Encapsulation by implementing React JS.\nInvolved in developing code to convert a REST response in to a JSON and display that using Swagger UI.\nUsed Spring MVC framework for implementing Model-View- Controller (MVC) architecture at the Web tier level to isolate each layer of the application so that complexity of integration will be reduced, and maintenance will be very easy.\nUsed Spring AOP for solving crosscutting concerns like keeping logged data and transactions details etc.\nUsed Spring Batch for processing large amount of data like transaction management, job processing, resource management and logging.\nSecured the API's by implementing Oauth2 token based authentication/authorization scheme using spring security.\nDesigned and developed third-party Payment services to Offer Users Convenient Payment Methods based on OAuth Protocol.\nUsed Hibernate ORM framework as persistence engine and wrote Hibernate Queries to automate the mapping between Oracle database and Objects in Java.\nDeveloped the monolithic application and involved in migrating existing monolithic application in to Micro Service Architecture based RESTful Service and deployments were done on AWS.\nDesigned and developed Micro Services business components using Spring Boot.\nHands on Coding to build REST Micro Services using Spring Cloud, Oracle, XSD, JSON, Spring Config, Cloud Foundry and Jenkins.\nMicro Services were being used as a strategy to gradually replace a core monolithic application while still adding business features.\nImplemented API based gateway for online transactions through which we did provide an integration API Kit to make a call to the gateway, to capture credit card details.\nResponsible for creating an instance on Amazon EC2 (AWS) and deployed the application on it.\nStrong knowledge on Virtualization, Cloud Computing and Web services. Performed configuration, deployment and support of cloud services including Amazon Web Services (AWS). \nKnowledge of using Amazon Cloud Watch to monitor the application performance and used the logs to identify any threshold limits.\nWorked on AWS services to deploy static websites and dynamic Web Apps on EC2 using Elastic Beanstalk and Elastic Container Service-Docker.\nWorked on developing Restful endpoints to cache application specific data in in-memory data clusters and exposed them with Restful endpoints. \nImplemented REST based microservices using Spring framework, Eureka (Service discovery mechanism) and Jersey API. Used REST Client and POSTMAN to test the services.\nInvolved in creating EC2 instances and installed required configurations and applications on it and created S3 buckets for storing object level data into it.\nDeveloped APIs to read and publish data from Elasticsearch cluster using native Java Transport client as well as REST client. Worked on Spring Integration with the Elasticsearch.\nWorked on Docker container snapshots, attaching to a running container, removing images, managing director structures and managing container.\nWrote SQL in Data Access Object (DAO) to handle the transactions and data persistency in the back-end.\nInvolved in writing SQL and Stored Procedures for handling complex queries with help of TOAD and access them through Java Programs from Oracle Database and MySQL.\nConfigured Apache Tomcat Server and deployed the web components on the STS IDE. \nWorked on setting up Maven scripts to build, package, and deploy application code to the target Tomcat Application Servers and worked on continuous integration servers like Jenkins.\nFocused on Test Driven Development there by creating detailed JUnit tests for every single piece of functionality before writing the functionality.\nWorked on Log4J to validate functionalities and JUnit for unit testing.\nPerformed automation testing and authored test scripts using Selenium Web Driver, Selenium Grid and Junit.\nActively involved in architecture of DevOps platform and cloud solutions.\nWorked in Agile TDD environment using SDLC tools like GIT, Jira, Jenkins, Maven for build packaging and deployments of the application components.\nEnvironment: Agile, Java/J2EE, AngularJS, NodeJS, HTML5, CSS3, JSP, AJAX, JavaScript, JSON, Swagger, Spring MVC, Spring Security, Spring Boot, Spring Batch, Microservices, AWS, EC2, Elasticsearch, Eureka, Oracle, MySQL, Tomcat, Maven, Jenkins, DevOps, Docker, Jira, Git, STS and Log4J.\n\nResponsibilities: \n\nWorked in a highly dynamic AGILE environment and participated in Scrum and Sprint meetings.\nUsed Java 8 Lambda expressions along with Streams for creating internal iteration and performing chain operations such as Filter, Map, Collect on a Collection Objects.\nDeveloped an attractive GUI using AngularJS that users can interact dynamically at runtime.\nDeveloped custom directives, Factories and Services in AngularJS and implemented code according to coding standards and created AngularJS Controller to isolate the scopes to perform operations and extensively used Core Java such as Exceptions, and Collections. \nDeveloped an application were involved in design changes using HTML5, CSS3 and fraction of JavaScript.\nWorked extensively to achieve DOM Show, hide elements and Event Handling using Angular JS.\nExperienced on Spring framework applications like Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security and Spring Boot and did integration to Micro services into existing system architecture.\nCreating REST based Web Services by establishing links using Hateoas from spring based Applications.\nExperienced in implementing Micro services, Service Oriented Architecture (SOA) with XML based Web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach. \nInvolved in writing application level code to interact with APIs, Web Services using JSON.\nJSON being light in nature was used as the chief source of communication between the server and application.\nExperience in creating RESTful web services using Jersey, Spring framework and JAX-RS.\nWorked with Docker to deploy Micro-services in modern containers to increase Isolation.\nInvolved in developing APIs and REST\t API proxy using APIGEE edge and for sending mobile notifications.\nExperienced with cloud services like Cloud Foundry and AWS.\nDeveloped the Web Services Client using REST, RSDL for verifying the new customer history to a connection. \nUsed Apache Kafka for integration and Data Processing with spring and for Multi-Threaded Message Consumption and worked on Zookeeper to maintain services.\nWorked with Spring Ribbon and Kafka broker service to handle heavy traffic.\nWorked on integrated Hystrix dashboard to monitor spring micro-services using Circuit Breaker.\nUsed Apache Camel routes to build customized routes and Spring XML and Camel blueprint to integrate with other Enterprise applications. \nUsed Apache Camel to integrate the different applications using protocols like ActiveMQ and JMS.\nWorked with AWS cloud service in creating EC2 instances and providing them roles and sometimes participated in writing custom policies and deployed applications on Elastic Bean Stalk and EC2.\nPerformed Query operations on AWS Dynamo DB and captured the modification data on Dynamo DB.\nInvolved in AWS SQS to interact with queue and giving roles to it and involved in writing Custom policies.\nWriting Queries to get the information from MongoDB for adjusting the data in DB.\nWorked on business logic and calculations, performs analysis, handles data transfers, and generates XSL for presentation layer and SQL commands for database layer. \nInvolved in the development of distributed Server-side components and deployed the various Session and Entity Bean Components in the IBM WebSphere Application Server.\nUsed MAVEN as a Build Process and used generating Documentation, Reporting, and adding Dependencies.\nUsed Selenium Grid to execute Selenium automation suites on different platforms.\nUsing JUnit test in Eclipse, developed Unit test cases and test suite. Curl was also implemented to test.\nWorked in various DevOps tools like Jenkins, Puppet, SVN, GIT, and Ansible Well knowledge in CI (Continuous Integration) and CD (Continuous Deployment) methodologies with Jenkins.\nUsed Jenkins as the integration tool and improved Scalability of applications on Cross-Platforms.\nProvided the Production Support for different application and took part in the enhancements of the application and suggested the required changes as per the requirements.\nConfigured and customized logs using Log4J.\nInvolved in System Testing, Integration Testing, and Production Testing on WebSphere Server.\n\n\nEnvironment: Agile, Java, J2EE, JSON, AngularJS, Web Services, Spring Batch, Spring Boot, Spring MVC, AWS, RESTful, Eclipse, MAVEN, JUnit, APIGEE, DevOps, Jenkins, IBM WebSphere Server, MongoDB, JMS, Zookeeper, Apache Camel, Kafka, Hystrix, CICD, GIT, PL/SQL, Docker and Log4J.\n\n\n\n Responsibilities: \n\nResponsible for all stages of design, development, and deployment of applications. Active role in Test Driven Development termed as TDD apart from Agile Software Development.\nDefined and constructed layers, server-side objects and client-side interfaces based on J2EE design patterns.\nDeveloped and implemented Swing, spring and J2EE based MVC framework for the application. \nUsed multithreading in programming to improve overall performance.\nDesigned, analyzed and developed the front-end and back-end Servlets, Bootstrap for designing, HTML5, CSS3, Angular JS and AJAX, for developing presentation layer.\nInvolved in payment status report for asynchronous exchange of information using JMS. \nUsed JavaScript, jQuery for user interactions in pages. Creating a responsive web application integrating Twitter Bootstrap with Angular JS and media queries and Used JSF (Java Server Faces) to implement component based User Interface Applications.\nUsed spring framework including spring core/IoC, Spring Web, Spring Security. \nUsed Spring AOP for reporting and used a Test-Driven approach to development leveraging.\nDeveloped SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability.\nUsed Dependency Injection feature for wiring and defined dependencies using constructor arguments.\nImplementation of data access layer has been cumbersome for a while and this was greatly resolved using Spring JPA through implementation of data access layers there by reducing boiler-plate-code.\nConfigured hibernate with Spring ORM as part of spring and Hibernate Integration for best results.\nUsed Spring MVC components to implement business layer and Spring Boot for Micro-services. \nUtilized spring core, AOP and security to build robust business operations with transactional support. \nWorked on Rest Web services for backend services used Oracle for database services and RESTful web services using Jersey for JAX-RS implementation. \nCRUD was used as part of servlets where DML operations were required on RDBMS like SQL DB’s.\nCreated Hibernate persistent and configuration files for ORM implementation.\nUsed Tomcat Server as the chief enterprise level server while dealing the database activities with hibernates.\nUsed Git as Version Control System for the application. Used JMeter to test performance of SOAP protocol.\nDeveloped unit and integration tests for existing microservices using Junit and Mockito environments.\nDeveloped the data access classes using JDBC and log4j for logging and SVN for version control.\nWorked with and implemented on developing and maintaining robust and effective Page Object Model Design Pattern and Created Keyword-Driven and Data-Driven Framework using Selenium WebDriver configured under TestNG environment and used MAVEN for adding dependencies.\nParticipated in Defect tracking team using ALM Quality Center for Defect tracking, Defect priority and status.\nGUI design and development using Java Swing, JFC Used for open source web testing.\nMaintaining production critical servers running UNIX/Linux supporting database and Web services.\n\nEnvironment: TDD, Java, J2EE, jQuery, AJAX, JavaScript, HTML, CSS, Spring, Hibernate, SOAP/Rest, Web Services, Sonar, JAX-WS, JAX-RS, JMS, Oracle, Tomcat, JUnit, UNIX/Linux, Maven, Git and Log4J.\n\n \nResponsibilities:\nInvolved in System Analysis and Design methodology as well as Object Oriented Design and development using OOAD methodology to capture and model business requirements.\nInvolved in Java Multithreading to cascade multiple changes on multiple records in only one transaction\nResponsible for JAVA, J2EE, JSF, JBPM, EL and Java FX coding / development.\nDeveloped HTML and JavaScript. Developed Scripts for UNIX platform deployment.\nUsing Struts Framework developed and implemented the web-based application following the MVC.\nUsed Multithreading to improve performance in generating the reports in Java.\nUsed Spring MVC as Web module, involved in design, development of new Action classes to interact with business logic and Used Hibernate as ORM to map Java classes to data base tables.\nImplemented J2EE patterns, Data Access Object (DAO), Session facade, Business Delegate and Value Object.\nImplemented the service layer using Spring with transaction and logging interceptors.\nFixing the bugs and developing new enhancements using JAVA/J2EE, spring, Hibernate, WebLogic.\nUsed Spring framework for middle tier and Spring-hibernate for data access.\nUsed Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes.\nImplemented SOA to develop REST Based Web services using Apache Axis. \nExtensively developed User defined Custom JSP tags to separate presentation from application logic.\nDesigned and developed Web Services (SOAP, WSDL). Created and compiled XML Schema to generate Java Bean classes using Apache Axis.\nDeveloped stored procedures, triggers in MySQL for lowering traffic between servers & clients.\nInstallation, Configuration & administration of WebLogic application Server.\nUsed Log4J for logging and tracing the messages.\nImplemented Test Scripts based on the User Requirements as specified by the Business side and Requirement document and analysing Business Requirements and handling it as per Requirements. \nProject coordination with other Development teams, System managers and web master and developed good working environment and Production Support as well.\n\nEnvironment: Java, JSP, Servlets, JSF, Spring AOP/IOC, Spring MVC, Hibernate, XML, JBPM, HTML, JDBC, Web Services (SOAP/WSDL and REST), MySQL, Web Logic Server, Junit, Maven, Log4J, SVN and UNIX.\n  \n\nResponsibilities:\nExtensive use of core Java Collections, Generics, Exception Handling, and Design Patterns for functionality Involved in writing different Design Patterns like Filter, Action, Business Delegate, Service Locater, Data Transfer Objects (DTOs) and Data Access Objects (DAOs). \nUsed Hibernate in persistence layer and developed POJO's, Data Access Object to handle database operations.\nExpertise in developing reusable and interoperable Web service modules based on microservices, SOA architecture using SOAP and RESTful and Preparation of Java and JSP coding standard checklist. \nInvolved in the development of Servlet, Struts Action classes, Business Objects, Web Services.\nInvolved in writing JUnit Test Cases and Ant Build Script. \nInvolved in writing JSP using Bean, Logic, HTML, and Iterate Tags. \nWSDL has been used to expose the Web Services. \nSOAP has been used as a protocol to Communicate in the form of XML messages.\nDeveloped client request validations and processing using JavaScript and HTML.\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, and Hibernate cache concepts.\nImplementing or exposing the Micro services to base on RESTful API utilizing Spring Boot with Spring MVC.\nDeveloped Struts Action Forms, Action classes and performed action mapping using Struts. \nHands-on Experience on Selenium Web Driver to write user stories. \nUsed MAVEN as a build tool in adding dependences with PAGE OBJECT MODEL design pattern.\n\nEnvironment: Java, JSP, HTML, CSS, Servlets, XML, SOAP, WSDL, Oracle, Eclipse, JAX-R, JAX-WS, PL/SQL, WebSphere Server, Struts, DAO, Spring AOP, Spring MVC, Hibernate, Junit and Maven.\n\n\nResponsibilities:\n\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP.\nDeveloped web application using Struts, JSP, Servlet, Java beans that uses MVC design pattern.\nWrote JavaScript for client-side validation.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nConfigured Bean mappings within the framework and Hibernate persistence.\nMonitored the logs using Log4j and fixed the problem.\nThe application was deployed on the Tomcat.\nUsed CVS as version control system. \nKnowledge on bug fixing and Production Support.\n\nEnvironment: J2EE, JDBC, Struts, Hibernate, JavaScript, HTML, CSS, JSP, Servlet, Tomcat, Oracle, Eclipse IDE, CVS and Log4j.\n\n\nResponsibilities:\n\nDesign and Development of the Object-Oriented applications using OOA and OOD techniques in all Business\nAreas using CVS.\nDesigned and developed web pages using HTML, CSS and JSP.\nWrote Client-side validation scripts using JavaScript.\nStored data in Oracle database and accessed using Oracle JDBC drivers.\nImported Client data into the database from XML file by using the XML Parser.\nWorked on bug fixing and Production Support.\n\nEnvironment: JDK, Servlets, JSP, JDBC, SQL, HTML, JavaScript, Eclipse, XML and CVS.\n",
    "extracted_skills": [
        "agile",
        "angular",
        "ansible",
        "aws",
        "cassandra",
        "communication",
        "css",
        "docker",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "lambda",
        "mongodb",
        "mysql",
        "oracle",
        "r",
        "react",
        "s3",
        "scrum",
        "sql"
    ]
}