{
    "id": "resume_6015867b-16c4-4ed3-b9ec-989c08598e7b",
    "metadata": {
        "filename": "chenna kesava.docx",
        "processed_date": "2025-09-24T08:45:40.400070+00:00"
    },
    "raw_text": "\nCHENNA KESAVA\nPhone: 469-677-7837\nEmail: chennakesava231@gmail.com\n\nSUMMARY\n\n8+ years of experience in developing and designing Web Based Internet/Intranet, Client- Server and Multi-tier distributed applications using latest J2EE technologies and various open source frameworks.\nExperienced in all stages of SDLC (Software Development Life Cycle) including proposal, process engineering, requirement analysis, design, development, testing, deployment and support.\nProficient in Object Oriented Analysis and Design (OOAD) based on Unified Modeling Language (UML).\nProficient in Java Multithreading, Collections API, Socket programming, Swing programming.\nUsed Adobe flex framework for building and maintaining web applications to deploy on all major platforms.\nExtensive knowledge of MVC architecture and J2EE Design Patterns like Singleton, Session Facade, Service locator, DAO, DTO and Value Object in the development of web based Enterprise Applications.\nGood in Java/J2EE technologies such as JSP, JSF, Servlets, EJB, XML, XSD, JNDIandWeb services.\nHands-on experience in Front-End technologies like AngularJS, Bootstrap, HTML5, ReactJS, NodeJS, JavaScript, CSS3, Jquery, Google Web Toolkit (GWT), Tag Libraries, Custom Tags, Ajax, Ext.Js used for Responsive web design. \nExperience in JSF, Prime-Faces and Rich-Faces framework for Developing the User Interface.\nExpertise with the package managers such as NPM and Bower.\nKnowledge in Docker Components like Docker Engine, Docker Hub, Virtual Machine and Docker Registry.\nExpert in major relational databases like Oracle, MySQL, SQLServer and DB2.\nGood working experience in No-SQL Database including MongoDB, Cassandra, CouchDB and DynamoDB.\nProven experience in writing Queries, Stored Procedures, Triggers, Cursors, Functions and Packages using TOAD.\nProficient in GUI&validation plug-ins like Tiles,Validator Frameworks and Custom Tag Libraries.\nImplemented various Ajax Frameworks such as JQuery, DOJO and JSON. Designed and developed various integration components using JMS and MQ Series.\nExpertise in developing Web Services for data transfer from client to server and vice versa using Apache Axis, REST, SOAP, WSDL, and UDDI.\nWritten and developed scripts for automating tasks using, Python, Ant 1.5, and UNIX shell programming.\nExposure to Application Servers like BEA WebLogic, IBM WebSphere, Apache Tomcat and JBoss.\nHands on experience with source control tools like CVS, Clear Case, SVN, Git and Perforce.\nGood knowledge in working with Collections API, Multithreading and OOPs technologies.\nGood experience in using Amazon Web Services (AWS) and AWS SNS/SQS for delivering messages. \nDeveloped the Spring Features like Spring MVC, Spring DAO, Spring Boot, Spring Batch, Spring Heroku, Spring Security, Spring Integration, Spring Zuul, Spring Eureka, Spring Netflix, Spring Hystrix.\nDeveloped Struts based presentation layer, hibernate based DAO layer and integrated them using Spring Dependency injection, ORM and Web modules. \nExperienced in Middleware persistence framework like Hibernate/JPA, JDBC, iBatis for mapping Java POJO classes/Objects with database and using Hibernate Query Language (HQL).\nKnowledge in designing and implementing Solutions using EC2, S3, EBS, Elastic Load balancer and VPC.\nDeployed application updates to AWS Cloud and monitored the load balancing of different instances.\nExpertise in Cutting Edge Technologies like EJB, JMS, JTA, XML and Web SphereMQ Series with strong experience in Developing and Deploying Enterprise Java Beans on Application Servers like WebLogic, WebSphere and JBoss.\nExtensively worked on debugging using Logging Frameworks such as Apache Log4j.\nExperience in using Maven, Gradle, Ant builds and in Visualization tools like Tableau.\nPerformed Unit testing, Integration Testing& generating of test cases for web applications using Junit, JenkinsandLog4J.\nHands-on experience with IDE’s like IBM Eclipse, NetBeans, Spring Tool Suite(STS) and IntelliJ.\n\n\nTECHNICAL SKILLS\n\n\nPROFESSIONAL EXPERIENCE\n\nClient: Staples, Framingham, MA \t\t\t\t\t\tDuration:  Jan 2016 to till date\nRole: Sr. JAVA/J2EE Developer\nDescription: Staples mainly focuses on developing a Retail application for the Staples Incorporation for selling products such as printer, scanners, floppy, office accessories, sheets etc. The motive of Staplesis to provide quick service to the consumer who needs quick purchase of office accessories both in lesser and bulk quantities. Generation of internal feeds like Coupons, Rebates and Campaigns are additional challenges. It requires technical expertise as well as domain knowledge.\n\nResponsibilities\nWorked in Agile, Scrum Environment’s and participated in requirement gathering, analysis and design.\nDefined and constructed layers, server-side objects and client-side interfaces based on Java/J2EE design patterns.\nDeveloped and implemented Swing and Spring MVC framework for the application. \nUtilized Java 8 features like Lambda expressions and Stream API for Bulk data operations on Collections which would increase the performance of the Application.\nDesigned Prototype and project layout skeletons using JQuery, CSS3, HTML5, XML, DHTML and JavaScript. \nDeveloped Single Page Applications (SPA’s) using AngularJS. Created Multiple & Nested Views, Routing, Controllers, Services and Custom Directives, Node.js, Bower and Grunt.\nCreated an in-memory data structure cache by using React DOM for updating browser efficiently.\nUsed AngularJS in creating animations based on CSS classes for a new requirement surfaced for the client.\nCreating a responsive web application integrating Twitter Bootstrap with AngularJS and media queries.\nUsed react-redux library to connect Redux application state to ReactJS components.\nUsed redux store to combine different reducers to produce a global state.\nRESTful web services using Jersey for JAX-RS implementation and to transport detain JSON format.\nWorked on SOA Web Services using SOAP for transmission of large blocks of XML data over HTTP. \nConsumed Web Services to fetch and direct credit card information from third party application.\nDeveloped new features for a REST SOA backend in Clojure and led evolution of an entire backend architecture.\nUsed a Microservice architecture, with Spring Boot-based services interacting through a combination of REST and Apache Kafka message brokers\nDeveloped Microservices using Spring Boot, Spring Security, Eureka, HATEOAS and deployed to AWS.\nImplemented the associated business modules integration using Spring, and Hibernate data mapping.\nUsed Spring dependency injection, annotations and Spring MVC components to implement business layer and navigation part of application.\nUsed various jQuery and Bootstrap plug-in like date picker, Bootstrap selectors. \nExposed and consumed SOAP based Web Services to communicate between systems. \nUsed ActiveMQ to improve the stability and scaled the system for more concurrent users.\nAssisted in planning, installation and execution of new JRules, ILOG server, Application server and Team server and developed designs and strategies for business rules and address problems including configuration of ILOG Rules.\nUsed Splunk SPL queries to generate reports.\nUsed Splunk forwarders to provide reliable collection to deliver data to Splunk for indexing, storage and analysis.\nImplementing procedures for designing, coding and testing of application code through ILOG Jrules.\nExpertise in programming using Scala, built Scala prototype for the application requirement and focused on types of functional Scala.\nConfigured and verified AWS workstations as per application requirement.\nUsed GWT and Amazon AWS (EC2/S3/EBS) for prototyping and subsequent evaluation.\nWorked on creation of custom Docker container images, tagging and pushing the images.\nCreated Mule ESB based tool suite for handling message transitioning, validation, enrichment and routing upstream and downstream entity data consumers.\nUsed JMS for reliable and asynchronous exchange of essential information such as payment status report.\nWrote SQL queries, stored procedures and enhanced performance by running explain plans.\nComposed and executed MongoDB scripts to insert and update NoSQL database automating data changes and reporting and Managing and maintaining Oracle and NoSQL databases in production domain.\n Wrote an integration application in Groovy for the Magento Shopping Cart Application and CounterPoint. \nCreated and configured new JIRA projects and worked with departments to maintain existing JIRA projects. \nUsed log4j for logging and SVN for version control also occasionally employed GITHUB as repo store.\nUsed XStream API to transfer data back and forth between Spring MVC and Ext JS.\nDeveloped Maven scripts and developed builds using Maven and continuous integration servers like Jenkins.\nWritten highly referenced blog posts on Error Handling in Scala and Problems that Scala Fixes.\nImplemented REST web services in Scala using Akka for tracking an application.\nUsed Maven goals for testing and packaging the various components and releasing on Apache Archiva for easy accessibility and maintenance within the organization\nUse of data structures and algorithms for time and memory complexity reduction.\nUsed DevOps to refer to emphasize the collaboration and communication of both software developers and information technology professionals while automating the process of software delivery and infrastructure changes.\nPerforming Smoke Testing and Acceptance Testing with Selenium in multiple Java platforms.\nFollowed TDD (Test Driven Development) methodology to write unit tests with JUNIT and Mockito. Write automated regression tests using JMeter.\nEnvironment: Java, J2EE, JDK 1.7/1.8, RCP, AWS SDK, Ext JS, Git, Swing, JFC, Spring 4.x, AWS SNS/SQS, hibernate4.x, Scala, Core Java, SOAP/Rest, Web Services, Python 2.7, JavaScript, Clojure, UML, HTML5, CSS, SASS, RAD 7, WAS 8 WSDL, SDK’s, JIRA 5.x/6.x, JAXB, Linux, JAX-WS, JAX RPC, JMS, UNIX, Selenium NOSQL(MongoDB), AngularJS1.5, ReactJS, AJAX, Apache JMeter, JQuery, Mule ESB JUnit, Maven, EMR.\n\nClient: Wells Fargo, Des Moines, IA. \t\t\t\t\t          Duration:  May 2014 to Dec 2015\nRole: Sr. JAVA/J2EE Developer\t\t\t\t\t\t\t\nDescription: Global Wires Application is a wires payment application for corporate and financial users for creating Domestic and International wires. They can also make postdated payments up to 60 days. These wires can be initiated as freeform or template wires. We provide optional security to these wires through Secure Validation. Secure Validation is a process which provides the additional security to the customers during their transactions, in the process of wires creation it will generate a onetime pass code to validate the user, this one-time code is sent to the user's mobile or email. \n\nResponsibilities\nDeveloped the J2EE application based on the Service Oriented Architecture.\nUsed Design Patterns like Singleton, Factory, Session Facade and DAO.\nDeveloped using new features of Java 1.7 Annotations, Generics, enhanced for loop and Enums. \nDeveloped screens using HTML, CSS, JavaScript, JQuery and AJAX, Node.js.\nCreation of prototypes using Inkspace and Quickview 3.0\nDesigned SOA integration using Apache CXF.  Enabled rapid service tier development.\nUsed AngularJS for DOM Manipulation, Filters, and Directives.\nUsed Twitter Bootstrap to create responsive web pages which can be displayed properly in different screen sizes.\nImplemented Cross-browser Compatibility of UI pages for internet browsers such as Chrome, Firefox, and IE 9/10/11\nDebugged the application using Chrome Inspector, Firebug, IE Tester and many other debugging tools.\nCreated and injected Spring services, Spring controllers and DAOs to achieve dependency injection and to wire objects of business classes.\nUsed Spring Inheritance to develop beans from already developed parent beans.\nDeveloped Service Layer Using Spring, AspectJ and persistence layer using Hibernate.\nUsed Hibernate Transaction Management, Hibernate Batch Transactions, cache concepts.\nInvolved in implementing DAO layers using JPA standards and Hibernate API interfaces.\nCreated SQL queries, PL/SQL Stored Procedures, Functions for the Database layer by studying the required business objects and validating them with Stored Procedures using DB2 and JPA with Hibernate provider.\nExtensively used Hibernate mapping, HQL, EHCache, Query, Criteria, Transactions and Locking mechanisms.\nGot exposure to build and deploy the changes in a production environment by executing the build script and deploying the compiled GWT client side code and server side code to the production server. \nDeveloped REST Web Service clients to consume those Web Services as well other enterprise Services.\nExposed the Web Services to the client applications by sharing the WSDL’s.\nImplemented SOA to develop REST Based Web services using Apache Axis\nCreated logical and physical data models putting to practice, concepts of normalization and RDBMS.\nUsed Jenkins to automate the build and deploy process. \nDeveloped and consumed Apache CXF based Web Services as part of Payments Application.\nFocused on Test Driven Development; thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality.\nUsed Log4j utility to generate run-time logs.\nSVN was used for project management and version management.\nDeployed the application on JBOSSapplication server.\nEnvironment: J2EE, Springmok4.x, Spring MVC, Hibernate 3.x, AngularJS, jQuery, JSON, Servlets 2.3, JDBC, AJAX, Web services, SOAP, XML, Java Beans, XStream, Net Tool, Apache CXF 2.6, Apache POI, Ext JS, JQuery, JavaScript, JBOSS, Agile Methodology, Design Patterns, SVN, Apache Maven, JUnit, HTML Unit, XSLT, HTML/DHTML.\n\nClient: BCBS, Richardson, TX\t\t\t\t\t\tDuration: Nov 2012 – Apr 2014\nProject: Small Group Renewal\nRole: Sr. Java Developer\t\t\t\t\t\t\t\t\nDescription: Small Group Renewal(SGR) is the automated solution for streamlining the health insurance sales process.BA Renewals delivers information and tools created to assist with reselling or reacquiring existing accounts, presenting additional plan offerings and alternatives, and monitoring anniversary effective dates to reduce the forfeiture of any business opportunities. Workflow, Single Rating Engine (SRE), and other relevant common services are used to enable Renewing process automation.\n\n\nResponsibilities\nInvolved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modeling, analysis, design, development, testing, and monitoring.\nInvolved in Use Case Diagrams, Class Diagrams and Sequence diagrams using Rational Rose.\nSpring JMS was used to connect to ActiveMQ for interconnecting various internal systems.\nImplemented SOA web sphere appliance in the web services for the ease of error handling and load balancing.\nTested Web Services using SOAP UI and involved in composing test suites for operations.\nUsed Collection Framework and Multithreading for performing cache Operation.\nExtensively used various Spring Framework modules like DI(IOC), Bean Wiring, Inheritance, Auto Wiring, JDBC Templates, AOP and Spring Quartz Schedulers for Jobs.\nDeveloped session, entity beans and message driven beans.\nDeveloped, and debugged the EJB with WebSphere Application server.\nImplemented interceptors using Hibernate and build and release Spring Boot framework. \nGot exposure to build and deploy the changes in a production environment by executing the build script and deploying the compiled GWT client side code and server side code to the production server. \nDesigned and developed web pages using with HTML, DHTML, XHTML, CSS, and JSP.\nAchieved role control functionality mainly by retrieving JSON data from AJAX and combining the retrieved data with jQuery to manipulate nodes in DOM tree.\nUtilized a combination of regular expression and jQuery Validation Plugin to conduct input check.\nWhile in the newer sub project, conducted validation in AngularJS way.\nCreated test cases to validate Regular Expressions.\nUsed XML/XSLT for transforming common XML format and SAML for Single Sign-On.\nDesigned configuration XML Schema for the application.\nUsed Regular Expressions to Serializable for pattern classes. \nDeveloped Maven scripts and developed builds using Maven and continuous integration servers like Jenkins.\nUsed XML Http Request Object to provide asynchronous communication as part of AJAX implementation.\nExperience with KORN based scripts as part of triggering UNIX and J2EE based Jobs.\nUsed SOAP for Web Services by exchanging XML data between applications over HTTP.\nWSDL was used for publishing Web Service interfaces.\nJunit tests were written to test each module in the application. \nWrote Ant Scripts to automate the build and deploy process.\nPrepared the test plans and executed test cases for unit, integration and system testing using different automation tools like Junit, Soap UI and Fiddler.\nPerformance Testing experience using Jmeter.\nEnvironment:  Core Java/J2EE, Servlets, Java Spring, JSTL, EJB, JMS, XML, XSLT, JDBC, AJAX, IBM WebSphere Application Server 7.0, Oracle 10g, WSAD, IBM MQ, HTML, CSS, JavaScript, Eclipse, UML, Rational Rose, Windows XP, CVS, JUnit, ANT, Adobe Flex, Visio.\n\nClient: JPMorgan Chase, NY\t\t\t\t\t\t\tDuration: Feb 2011 – Oct 2012             \nPosition: Sr. Java Developer\nDescription:  CSR Dashboard is an internal facing application, accessed via the Prime View portal,which is currently designed to serve the CSR who need to provide a proactive and superior client service with Option Assignment events, with Corporate Actions and Money Transfer events to follow. This tool provides a CSR centric view of all key events for all families supported by a CSR, Team Lead or Area Manager.  As of today, Option Exercise and Corporate Actions have been on boarded. \n\nResponsibilities\nDeveloped the J2EE application based on the Service Oriented Architecture.\nUsed Spring Framework for dependency injection, integration of Hibernate using Spring ORM support, development of RESTful web services to give JSON output. \nUsed Spring MVC front controller pattern to handle requests from dispatcher servlet to handle incoming requests.\nConfigured Spring MVC from scratch using XML configurations, namespace handling, Spring security set up and giving access to resources.\nWrote code to transform XML documents using JAXB Marshalling and Unmarshalling using Spring Injections.\nUsed Hibernate in persistence layer, written hibernate mappings using Annotations, HQL, Criteria and Queries.\nInvolved in Design and Development of RESTful API.\nREST web services are created using Spring with Jackson Mappers to exchange data using JSON data structure.\nUsed SVN for source Version Control, resolving code conflicts and merging code base.\nDeployed the application in Web Logic Application Server.\nStrong experience in writing PL/SQL queries and performance tuning.\nDeveloped Unix Shell scripts to automate repetitive database processes. \nUsed Maven for dependency management, build applications and deploy to the containers, application servers and create versions in the repository.\nUsed JUnit for unit testing of the application and log4j for logging.\nEnvironment: Core Java, Java 1.6, Spring, Hibernate, SVN, Apache, Eclipse 3.3, JNDI, Log4j, JUnit, XML, XSD, AngularJS, Node.js, JQuery, HTML 5, bootstrap, JavaScript, Web Logic Application Server, Oracle, Windows XP, REST API, NetBeans, UNIX.\n\nClient: American Family Insurance Madison, WI                             \t\t  Duration: Nov 2009 –Jan 2011 \nRole:  Role: Java/J2EE Developer\nDescription: Sales Tool Project is an Online Auto Insurance Sales tool used to estimate the quote, calculate the     premium as per state rules and sell the quote to customers. Customers can access this tool from www.amfam.com and buy insurance online, Sales Tool Rewrite project is an enhancement and Integration project with the following major business requirements. Implement a new Online Auto Insurance Sales process flow for quoting to reduce the number of questions/responses necessary to provide a quote premium.\n\nResponsibilities\nDeveloped presentation screens by using JSP, HTML and JavaScript. \nImplemented Model View Controller (MVC-2) architecture and developed Form classes, Action Classes for the entire application using Struts Framework. \nPerformed client side validations using JavaScript and server side validations using in built Struts Validation Framework. \nImplemented the data persistence functionality of the application by using Hibernate to persist java objects to the relational database. \nUsed Hibernate Annotations to reduce time at the configuration level and accessed Annotated bean from Hibernate DAO layer. \nUsed HQL statements and procedures to fetch the data from the database. \nTransformed, Navigated and Formatted XML documents using XSL, XSLT. \nUsed JMS for asynchronous exchange of message by applications on different platforms. \nDeveloped the view components using JSP, HTML, Struts Logic tags and Struts tag libraries. \nInvolved in designing and implementation of Session Facade, Business Delegate, Service Locator patterns to delegate request to appropriate resources. \nInvolved in developing SQL queries, stored procedures, and functions. \nCreation of database objects like tables, views using oracle tools like Toad, and SQL* plus.\nInvolved in writing Stored Procedure in using PL/SQL. \nWorked on Linux environment for jobs scheduling for Inbound data on monthly basis.\nUsed JUnit Testing Framework for performing Unit testing. \nDeployed application in WebSphere Application Server and developed using Rational Application Developer RAD. \nEnvironment: Java, J2EE, JSP, Spring, Hibernate, JMS, XML, Web Services, SOAP, AJAX, HTML, JavaScript, CSS, Log4J, JUnit, Maven, WebSphere, Application Server, Eclipse, Oracle.\n\nClient: Value Labs, Hyderabad, Andhra Pradesh \t\t\t\t   Duration: May 2008-Oct 2009\nRole: Java/J2EE Developer\nDescription:  BSHM builds a system, which helps both Doctor and patient in an efficient manner by providing information about the availability of Doctors, maintaining patient records according to their visit and generating reports of patients of their medications, Lab Findings, Problems List and serves the pharmacy maintenance also. The information may be very critical from both doctor's and patient's point of view, BSHM maintains a safe and secure database system for patients. BSHM stores patient's records efficiently and make them easily retrievable. The whole system modules are Appointments, patient chart, Reports, pharmacy, Administration.\n\nResponsibilities\nInvolved in Analysis and Design of the Project, which is based on MVC (Model-View-Controller) Architecture and Design Patterns.\nInvolved in developing prototypes of the product.\nCreated UML Use Cases, Sequence diagrams, Class diagrams and Page flow diagrams using Rational Rose.\nDesigned GUI Components using Tiles frame work and Validation frame work.\nDesigned and developed UI using HTML, JSP and Struts where users have all the items listed for auctions.\nDeveloped ANT scripts for builds and deployments.\nDeveloped Controller Servlets, Action and Form objects for process of interacting with Oracle database and retrieving dynamic data.\nResponsible for coding SQL Statements and Stored procedures for back end communication using JDBC.\nParsing of XML documents was done using SAX and DOM and XML transformation was done using XSLT.\nWrote JavaScript validations on the client side.\nInvolved in writing Detail Design Documents with UML Specifications.\nInvolved in unit testing and system testing and also responsible for preparing test scripts for the system testing.\nResponsible for packaging and deploying components in to the Tomcat.\nUsed java IO to create reports, which were mailed to be mailed to manager every hour.\nResponsible for performance tuning of the product and eliminating memory leakages in the product.\nParticipated in Code Review meetings with developers. \nEnvironment: CoreJava, Java Beans, JSP, Jbuilder, JavaScript, Servlets, JDBC, LOG4J, XML, XSLT, \nHTML, Struts, Tiles, SAX, DOM, Tomcat, UNIX, Oracle.\n",
    "extracted_skills": [
        "agile",
        "aws",
        "cassandra",
        "collaboration",
        "communication",
        "css",
        "docker",
        "dynamodb",
        "ec2",
        "git",
        "heroku",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "lambda",
        "mongodb",
        "mysql",
        "node.js",
        "oracle",
        "project management",
        "python",
        "react",
        "redux",
        "rest api",
        "s3",
        "scala",
        "scrum",
        "sql",
        "tableau"
    ]
}