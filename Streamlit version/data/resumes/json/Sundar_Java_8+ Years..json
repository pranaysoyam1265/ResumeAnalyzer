{
    "id": "resume_f2f3cf76-b6be-4874-90b4-f481efbd3c14",
    "metadata": {
        "filename": "Sundar_Java_8+ Years..docx",
        "processed_date": "2025-09-24T08:45:56.214827+00:00"
    },
    "raw_text": "Personal Information:\nName: Pradeep Sundar\nCurrent Designation: Sr. Java/J2EE Developer\nCurrent Location: Nashville,TN\nContact: 415-769-8565\nEmail ID: psundar.sf@gmail.com\n\n\nEmployer Details:\nName:  Koti Reddy\nContact: 707-401-1021\nEmail ID: koti@radcomsoftwareservices.com\n\nProfile Objective:\nI am an IT Professional intending to continue my development experience as a worthy IT Software Programmer/Engineer (Java/J2EE Developer). I always want to be the part of a reputed organization which provides steady career growth along with job satisfaction, challenges and give value contribution in the success of organization.\n\nTechnical Profile:\nMore than 8 years of Java Development Experience that includes Analysis, Design, Development, documentation, Implementation, testing phases of Enterprise, Client/Server, Web based and system level applications in Java, J2EE, J2SE technologies.\n\nPrevious Clients I worked for:\n\n\nProfessional Summary:\nExperienced in analysis, design, developing and testing internet/intranet Web-based applications, Client/Server applications, J2EE Architecture, OO Design patterns. \nExperienced in all stages of SDLC (Software Development Life Cycle) including proposal, process engineering, requirement analysis, design, development, testing, deployment and support. \nExperience in applying design patterns like MVC, Singleton, Factory Pattern, Service Locator, Business Delegate, Data Access Object, Session Facade and Value object pattern etc. \nStrong experience in Web development using HTML5, DHTML, XHTML, CSS3, JavaScript, jQuery, AJAX Framework (Rich Faces, My Faces), AngularJS, React JS, BackboneJS, XML, XSL, XSLT, Ext JS. \nStrong experience in implementation and design of MVC architecture. Hands on experience on MVC frameworks such as Angular, Angular2, Backbone JS, Ember JS, Backbone, jQuery, Bootstrap. \nProficient in with GUI plug-ins like Tiles Framework, Custom Tag Libraries, plug-ins like Validator Framework. \nVery good understanding of Model View Controller (MVC), Client Server and N-tier architectures. \nExcellent Expertise in OOAD and OOP from designing UML diagrams using IBM Rational Rose. \nExpertise in Java concepts like OOP, Java Swing, Java Struts, Spring Framework, Hibernate ORM, JDBC, JMS. \nExtensive experience in concepts such as Java EE, J2EE technologies such as JDBC, JSP, JSF, Servlets, Hibernate, EJB, Spring, XML, XSD, XSL, JNDI, RDBMS, Web Services, Struts, Spring, Tiles, Hibernate, JMS, AJAX. Designing and Developing Single Page web applications (SPA) using AngularJS and NodeJS \nExtensive experience in using Amazon Web Services like RDS, EC2, Redshift, SQS, SNS, Cloud Watch and S3. \nExperience in developing spring features like Spring MVC, Spring DAO, Spring Boot, Spring Batch, Spring Ribbon, Spring Security, Spring Integration, Spring Eureka, Spring Netflix \nExperience in application development using Software development methodologies such as Agile, Iterative Waterfall development and TDD (Test Driven Development) environments. \nExcellent experience with Application Servers like IBM WebSphere, Oracle WebLogic, Glassfish, JBoss. \nExperience in using Hibernate and iBatis Object Relational Mapping tool in J2EE environment. \nDeveloped dynamic web applications and web services using Eclipse, JBuilder, JDeveloper, NetBeans and Web Logic. Created, tested, and deployed React apps with the best practices of React/Redux.\nImplemented various Ajax Frameworks such as jQuery, DOJO, JSON. Designed various integration components using JMS and MQ Series and worked on Spring Kafka and Zookeeper apart from JMS as messaging service. Experience in Microservices-Spring Boot, Pivotal Cloud Foundry and Spring Boot.\nExperienced in databases such as Oracle, DB2 and MS SQL Server to manage tables, views, indexes, sequences, stored procedures, functions, triggers and packages. \nManaged and maintained NoSQL (MongoDB, Apache Cassandra DB) databases in production domain. \nProficient in using Amazon Web Services (AWS). Extensive experience focusing on services like EC2, Elastic Beanstalk, Cloud Front, Cloud Formation, IAM, RDS, Elastic cache, SNS, SQS, AMI. \nResponsible for working a queue of JIRA tickets to address system issues, user requests, etc. \nApache Tomcat 8 and NodeJS servers to deploy and configure Java API's and frontend modules. \nExtensive Experience in retrieving and manipulating data from backend using Database SQL queries, PL/SQL- Stored Procedures, Functions, Sequences, Triggers, Views and Packages. \nExperience working on several Docker components like Docker Engine, Hub, Machine, creating Docker images, Compose, Docker Registry and handling multiple images primarily for middleware installations. \nExperienced with Jenkins methodologies includes Continuous Integration and Continuous Deployment. \nExcellent Experience in writing ANT, Hudson, Maven build scripts, providing logging facility using Log4j. \nExpertise in developing SOA (Service Oriented Architecture), REST and J2EE Web Services based on SOAP, WSDL, UDDI, JAX-WS, JAXB, JAX-RPC, JAX-RS using tools like Apache Axis. \nPart of Scrum, Sprint review, Retrospection and Virtual Closure meetings as a part of AGILE. \nExperience in using various version control tools like SVN, CVS and IBM Rational Clear Case. \nExperience in Build/deploy tools like CVS, VSS, SVN, git, Maven, Jenkins, Clear Case, Clear Quest and ANT. \nExperience in Integration tools Oracle SOA Suite/BPEL/Fusion Middleware, web-methods and Apache CAMEL. Writing Junit test cases and used Clear Quest, JMeter, Test-ng plugins to run selenium scripts. \nExpertise in Selenium automation using Selenium WebDriver, Selenium Grid, Junit &Maven and other unit testing frameworks like Protractor, Jasmine, Mockito, SoapUI.\n\nProfessional Experience:\nJackson National Life, Nashville, TN                                                                                  December 2016 to Present\nRole: Senior Java/J2EE Developer\nProject Description: The Electronic Order Entry (EOE) system is an automated web-based transaction processing application specifically designed to maximize efficiency in a rep's day-to-day business. With EOE a rep can electronically submit new account applications, update existing applications, and enter orders that identify and generate required disclosures. \n\nResponsibilities: \nParticipated in Software development life cycle (SDLC) to deliver business needs. \nDeveloped and Designed code, prepare test data, testing and debugging programs and review code. \nCreated UML use case diagrams, sequence diagrams and Technical Design Documentation. \nDesigned the applications using EJB framework and Struts. Designed the applications using Struts MVC framework. \nWorked on Core J2EE patterns like MVC, Business Delegate, Factory Pattern, Abstract Factory Pattern, Frontend Controller, Service Locator, Data Access Object, etc. for solving complexities in multitier services. \nDesigned and coded application components in an Agile environment utilizing a test-driven development approach. \nPerformed following sprint/stand-up sessions and used Excel extensively to write user stories. \nSolid ability to work on Agile and SOA project. Built pages using JavaScript, jQuery, CSS2, HTML/HTML5. \nExtensively used Struts MVC and DAO's to develop the web layer for the application. \nUsed JSP and JSTL Tag Libraries for developing User Interface components. \nExtensive JavaScript utilization for Business Rules and Client-side validation. \nDeveloped User Interface validation framework in combination with custom validation built on top of validation framework from the form bean. Performance monitoring, tuning and troubleshooting JBOSS and Apache server instances.\nExperience in Serialization, Synchronization, Multi-Threading and another core Java concept. \nConverted data sources from WebLogic to JBOSS. Data Binding using jQuery and JavaScript templating \nDeveloped PL/SQL programming on Oracle database using Oracle SQL Developer and Java JDBC technologies. \nInvolved in writing Configuration XML file that contains declarations and another dependent object declaration. \nResponsible for implementation of Hybrid Test Automation Framework build using Selenium WebDriver, Cucumber testing, Gatling testing and Maven technologies under Java platform utilizing industry leading harness design patterns and approaches. Used XML and SOAP Web Services for communicating data between different applications. \nUsed Root cause analysis to recognize issues and develop process improvements. \nOptimizing SQL queries, building complex SQLs, dynamic SQLs and triggers, written stored procedures. \nWorked on DB2 and Sybase for the database accessibility. Produced and analysed DB2 performance reports. \nIntegrated JPA persistence using Hibernate to save the current state of the drools knowledge session using the Spring Framework integration. Used Drools to generate various forms according to policy required \nGenerated scripts for effective integration of JIRA applications. Configured Log4j for logging activity at various levels. \nUpgraded JIRA (tool for continuous integration) and performed regression testing. \nManage all CM tools (JIRA, Jenkins, ANT, Git,) and their usage / process ensuring traceability, repeatability, quality, and support. Designed, developed, implemented, and maintained a human resources intranet site using Apache HTTP Server. \nImplemented JMS for communication by diverting the messages into a queue. \nUsed Log4j for logging and debugging and used JUnit extensively for testing. \nDesigned and coded application components in an Agile environment utilizing a test-driven development (TDD) approach. \nUsed JUnit to write repeatable tests mainly for unit testing using Mockito. \nExperienced in technical reporting and software documentation using MS Office products. \n\nEnvironment: JDK 1.6, J2EE, JSP, JPA, Core Java, EJB, Scrum, WebLogic, Oracle 11g, Eclipse 4.x, Log 4J, ANT, Oracle 11g, Windows. PL/SQL, DB2, JIRA, GIT, HTML5, CSS 2, jQuery, SOAP, Servlets, JSF Java Beans, JDBC, JNDI, Struts, Spring, Hibernate, JMS, AJAX, Java-Script, JUnit, Eclipse, RAD/RSA, IBM MQs, JBOSS, Tomcat HTML, DHTML, XML, XSL/XSLT.\n\nAlaska Airlines, Seattle, WA                                                                                                   January 2016 to November 2016\nRole: Java/J2EE Developer\nProject Description: American airlines are the sixth-oldest operating airline by foundation date, and the oldest airline still operating in the United States. This project is intended to replicate the online airline self-service reservation capabilities, where you can select from multiple air travel service providers, dates, times, and select your seat assignment. \n \nResponsibilities: \nDeveloped various J2EE components like Servlets, JSP, JSTL, AJAX, SAX, JAXP, JNDI and JMS. \nUsed Spring MVC framework to enable the interactions between JSP/View layer and implemented different DPs. \nData Operations were performed using Spring ORM wiring with Hibernate. \nImplemented business layer using Core java, Spring Beans using dependency injection, Spring annotations. \nUsed a micro service architecture, based services interacting through a combination of REST and MQ and leveraging AWS to build, test and deploy Identity microservices. Developing RESTFUL web services using JPA, Cloud Foundry. \nWorked on service-oriented systems that utilize REST web frameworks, SOAP and message queue technologies (Spring MVC, Spring REST Template, RabbitMQ AMQP server, Spring Integration) \nDeveloping database adapter, web services adapter, messaging adapter and custom workflow for non-oracle system using Camel and Implemented Apache Camel routes using Camel-Spring XML and Camel-Spring processor beans. \nSet up Jenkins server and build jobs to provide automated builds based on polling the GIT source control system. \nCreated AWS EC2 Linux instances and bash scripts to run post processing. Used Jenkins with Ansible playbooks to run the deployment process. Used S3 buckets to manage document management and RDS to host database. \nUsed AWS cloud formation templates and AMI to recreate instances. Experience working with Oracle EBS modules. \nDesigned and developed JSP pages using Spring MVC framework and created Spring MVC components like Dispatch servlets, configure Request mapping annotation controllers, view resolver components. \nDeveloped server-side services using Java, Spring, Web Services (SOAP, Restful, WSDL, JAXB, JAX-RPC) \nInvolved in implementing Microservices using Spring boot, Pivotal Cloud Foundry. \nWith Pivotal Cloud Foundry, the connection/service binding details are injected from the deployed cloud platform itself. \nBuilt screens with Spring MVC, JSPs, CSS, Dojo and custom JavaScript. \nHands on, project implementation experience with Cloud technologies like Pivotal Cloud Foundry. \nImplemented features like logging, user session validation using Spring-AOP module and Spring IOC. \nIntegrated Spring with Hibernate using configurations and implemented DAO layer to save entities into data base. \nUsed JSP, CSS3, jQuery and AngularJS. Set up Secure Sockets Layer (SSL) communication in WebSphere application server. \nExperienced in collaborating with senior backend and senior mobile developers in an Agile &Scrum Methodology\n\nEnvironment: Java 1.7, J2EE, Servlet/filters, JSP, JSTL, Spring IOC, Spring AOP, Spring MVC, Microservices, Spring REST, Spring Security, Hibernate 3.0, Ajax, AngularJS, Apache Camel, AWS, EC2, S3, WebSphere, Tomcat, Netflix API, Eclipse STS, Oracle 11g, MAVEN, Log4J, Jenkins, JProfiler, JMeter, Git, JIRA, JUnit, Mockito, Fiddler. \n\nFlorida Department of Environmental Protection, Tallahassee, FL                              September 2014 to December 2015\nRole: Java/J2EE Developer\nProject Description: The Florida Department of Environmental Protection is the Florida government agency charged with environmental protection. It is under the nominal control of the Governor. Project is about developing screens, which will allow users to view the status of the Datasets in Staging. Only users who are authorized to upload data will access these screens to see the status of Datasets. From these screens users will be able to upload, edit, delete, export the Datasets, and migrate error free data to production, view numbers of errors, link to error reports of the individual Datasets. \n \nResponsibilities: \nAnalysing the business and functional requirements provided by the client. \nWorked on integration methodology and strategy including interface, data flow, and process flow. \nUsed Hibernate for Object Relational Mapping (ORM) purposes for transparent persistence onto the Oracle 11g database using Hibernate Query language (HQL). Improved database performance by recognizing and rewriting slow queries. \nDeveloped a single page, mobile-first, cross-device/cross-browser web application for real-time location sharing utilizing AngularJS, JavaScript API. Developed server-side REST style web services and called them from backbone collections.\nIntegrated the Java code (API) in JSP pages and responsible for setting up AngularJS framework for UI development. \nImplemented code according to coding standards and Created AngularJS Controller, which Isolate scopes perform operations. Developed custom directives, Factories and Services in AngularJS. \nWorked on responsive design in making the application compatible with desktop, tablet, mobile and also developed tabbed pages. Wrote Jasmine unit tests using Karma to verify AngularJS modules and JavaScript utility routines.\nUsing AngularJS created Responsive Web Design (RWD) and did data manipulations to display data in company standard format in UI. Wrote Web Services SOA, (SOAP and WSDL) for address validations. \nUsed Declarative Transaction management system of Spring Framework and integrated it with JDBC and Hibernate transaction managers to customize transactional behaviour. Used Spring Framework to organize middle-tier applications. \nMaintaining existing scripts and writing new scripts to automate the existing environment using Maven \nUsed JSTL and custom tag library with frameworks such as AJAX and jQuery, to build interactive and attractive user interfaces. Used JavaScript to develop the front-end of the application. \nDesigned front-end based on Bootstrap templates and embedded forms verification with JavaScript together with Regular Expression. Worked on unit and integration testing of the application. \nDeveloped dynamic JSP webpages for the user interface. Wrote JUnit test cases to support business logic and unit testing. \nCreated SQL queries, used functions, procedures and triggers. \nImplemented advanced java API and core java for coding sophisticated business logic. \nSolid deployment experience on the UNIX platform. Developed html views with HTML5, CSS3, bootstrap and AngularJS. \n\nEnvironment: Java JDK, J2EE, JavaScript, HTML, CSS, Log4J, UML, AJAX, JSON, WebLogic, Hibernate, Oracle 11g, SQL, PL/SQL, HTTP, HTTPS, Windows, Web Services, Unix, Bootstrap, SOA, SOAP, WSDL, SSO, Junit, XML/XSL, Ant, jQuery, Struts, Spring, NoSQL\n\nCVS Caremark, Chicago, IL                                                                                                  November 2013 to August 2014\nRole: Java Full Stack Developer\nDescription: It is an exhaustive product that addresses entire gamut of automation needs of the Hospital and comprises of the following activities: In-Patient & Out-Patient Administration, Lab and other Clinical Investigations Pharmacy, General Inventory and Purchasing, Pay-Roll & HR Administration tenancy of General and Biomedical equipment, Financial Accounting and Billing House-Keeping, Ward management, ICU and OT administration, Marketing Health Services. \n \nResponsibilities: \nInvolved in SDLC Requirements gathering, Analysis, Design, Development, testing production of application using Waterfall model. Developed web applications with HTML5, CSS3, Bootstrap and Angular JS. \nUsed jQuery for basic animation and end user screen customization purposes. Also used CSS pre- processors (SASS) \nInvolved in the development of presentation layer and GUI framework using Angular JS and HTML. \nInvolved in rendering additional components with custom HTML tags using React.js \nInvolved in writing application level code to interact with APIs, Web Services using AJAX and Angular resources. \nDeveloped code for Responsive web design in JavaScript using frameworks like Angular.js, React.js \nUsed the Collections API, Generics, multi-threading while developing code. \nMethod references are used provided in Java8 to make use of methods already named \nDatabase development required creation of new tables PL/SQL stored procedures, functions, views, indexes and constraints, triggers and required SQL tuning to reduce the response time in the application. \nInvolved in the struts upgrade to 2.X which involved in changes to action class. \nExperience in developing LINUX shell scripts for automating deployment of applications \nDeveloped Spring middleware components for implementing business logic. \nDesigned and developed Business components and Integrated with Spring framework and developed various reusable Helper and Utility classes, which are used across all the modules of the application. \nUsed RESTful for producing web services and involved in writing programs to consume the web services \nDeployed the java application using Maven build script. \nUsed Log4j for logging various levels of information like error, info, and debug into the log files. \nImplemented SOA based architecture using web services to build a loosely coupled system. \nUsed Java/J2EE Design patterns such as Singleton, Service Locater, DAO etc. and Spring IOC pattern and responses. \nPerformed GitHub/GitHub-Desktop bash and Terminal commands to clone, fetch, merge and push the code and created pull requests for changes that are made. Implemented Swagger for the microservices for Documenting Rest API. \nDesigned enterprise API's and involved in developing the API's. Involved in testing API's using SoapUI and Postman. \nImplemented Rest API Design Guidelines for the microservices. \nInvolved in writing Maven scripts for automated deployment of the application and managed GitHub Projects and migrated from SVN to GitHub with merge and version and used Jenkins for continuous integration \nInvolved in working with the QA to assist in writing test code and debugging the defects in the application. \nResponsible for making sure that all system upgrade logs were current and creating a report for management. \nAssisted in designing several significant Cisco network upgrades for larger clients. \n \nEnvironment: Agile waterfall, HTML, CSS, JavaScript, jQuery, AJAX and Angular JS, XML, JSTL JSP, Java, Spring Frameworks, Hibernate, JDBC, RESTful Web services, SOAP, Jenkins, Maven, Mongo DB, NoSQL, Log4j, Jenkins, JIRA, LINUX, UNIX, SVN, GIT.\n\nLife Insurance Corporation, Hyderabad, Telangana, India                                        June 2012 to October 2013\nDesignation: JavaJ2EE/UI Developer\nProject Description: Customer Transfer is UI and Back end-based application. It can be used as a customer can transfer the agent for his LIC policies. It includes all policies depends on the customer's requirement and rendering the complete transferring to the agent as well as customer. \n \nResponsibilities: \nParticipated in designing of the framework, required technique to use in each component. Involved in requirements gathering and analysis from the existing system. Captured requirements using Use Cases and Sequence Diagrams. \nHand on experience in developing single page application (SPA) using AngularJS, created Multiple & Nested Views, Routing, Controllers, Services and Custom Directives, Node.js, Bower, Grunt. \nImplemented the associated business modules integration using Spring and Hibernate data ORM mapping. \nUsed Spring dependency injection, MVC components to implement business layer and navigation part of application. \nWorked on Rest Web services, Node Rest framework for backend services, Apache Casandra for database services. \nDesigned the framework mainly in Spring MVC, built from scratch, and wrote filters to limit the use & inheritance of some methods & class, components such as Action Mapping, Action class, Dispatch action class, Action Form bean. \nUsed Java Messaging Services (JMS) for reliable and asynchronous communication and exchange of important required information such as payment status report and credit card information. \nDeveloped new features for a RESTful backend services in Closure and led evolution of an entire backend architecture and used RAML based REST web services for API's using Mule ESB. Involved in Database design and Normalization. \nConfigured and verified AWS workstations as per application requirement and deployed application to AWS cloud \nUsed Active MQ to improve the stability and scaled the system for more concurrent users of the application. \nHandled browser compatibility issues in HTML, CSS and JavaScript for IE, Firefox and Chrome browsers \nInvolved in writing application level code to interact with APIs, Web Services using AJAX, JSON. \nCreated reusable templates and style sheets based on UI standards and guidelines. \nDeveloped Maven scripts and developed builds using Maven and continuous integration servers like Jenkins. \nUsed log4j to deliver control over logging and Used Git as Version Control System for the application. \nUse of data structures and algorithms for time and memory complexity reduction, oops concepts like inheritance, encapsulation, reusability and better performance of application. \nConfigured the WebSphere application server to connect with Oracle Server in the back end by creating JDBC data source and configured MQ Series and JMS Queues with IBM RAD and WAS to create new connection queues. \nCreated and configured new JIRA projects and worked with departments to maintain existing JIRA projects. \nUsed Junit and TestNG testing Framework as a test runner with Selenium and JMeter to test performance both on static, dynamic resources and developed Protractor test classes for end to end testing in Front end. \n \nEnvironment: Java, J2EE, JDK 1.8, RCP, AWS SDK, Ext JS, Git, Spring 4.x, AWS SNS/SQS, hibernate4.x, Core Java, SOAP/Rest, Web Services, JavaScript, closure, UML, Web Services, HTML5, CSS, SDK's, JIRA 5.x/6.x, JAXB, Linux, JAX-WS, JAX RPC, JMS, JSF, UNIX, Selenium, Angular JS, NodeJS, Apache, JMeter, jQuery, JUnit, Maven, EMR, Oracle 10g.\n\nCare Hospitals Group, Hyderabad, Telangana, India                                                           December 2010 to May 2012\nRole: Java Developer\nProject Description: Care Hospitals having server-side web application for their different health care providers. Customer will choose different health care benefits out of the plan options available. The services will enable them to manage health Check-up products, features, benefits and benefit values and attributes. Client interacts through web interface with web services written at back end to fetch data from database and select their plan benefits. \n \nResponsibilities: \nWorked with JAXB, SAXP and XML Schema for exporting data into XML format and importing data from XML format to data base and JAXB in the web services request response data marshalling as well as un marshalling process. \nImplemented the web services client to consume the third-party service API for validating credit cards information. \nUsed XML Web Services using SOAP to transfer the amount to transfer application that is remote and global to different financial institutions and designed configuration XML Schema for the application. \nImplemented views, modules using Struts tags, JSTL2.0, Mappings, Expression Language. \nInvolved in designing and implementing the application using various Java and J2EE Design patterns design patterns such as Singleton, Business Delegate, Façade, MVC and Data Access Object (DAO). \nDeveloped UI using Spring view component, JSP, HTML, CSS, JavaScript. Used Clear Case for source code maintenance. \nUtilized Spring MVC annotations and XML configuration for Dependency Injection. \nImplemented the MVC architecture using Apache Struts1.2 Framework and Tiles Framework for the views layout. \nWrote SQL queries, stored procedures, modifications to existing database structure for addition features Controller Servlets, Action, Form objects for process of interacting with Oracle database and retrieving dynamic data. \nInvolved in writing all formats of database quires like SQL, HQL in DAO layer. \nDeveloped Unit test cases using Junit and Developed ant scripts and developed builds using Apache ANT. \nCreated the design documents with use-case diagram, class diagrams, and sequence diagrams using Rational Rose. \nUsed Jenkins as a continuous integration tool for application building, testing and deploying. \nCo-ordinate with the QA lead for development of test plan, test cases, test code and actual testing responsible for defects allocation and those defects are resolved. Was part of production support team to resolve the production issues. \n \nEnvironment: Java, J2EE, Spring Framework, Spring MVC, Hibernate, SOAP/REST Web Services, JSP, HTML, CSS, JavaScript, SQL, HQL, XML, JMS, UML, Apache Tiles, Log4J, Apache Maven, Apache Tomcat, MySQL, JUnit, Log4j, Jenkins, InteliJ, CVS.\n\nHDFC Bank, Hyderabad, Telangana, India                                                                     July 2009 to November 2010\nRole: Software Developer\nProject Description: HDFC Bank Limited is an Indian banking and financial services company. HDFC Bank provides a range of commercial and transactional banking services, including working capital finance, trade services, transactional services, cash management. \n\nResponsibilities: \nResponsible for requirement gathering from the Business Analysts and for preparing the requirement specification document \nInvolved in development of the applications using Spring MVC and other components of the Spring Framework, the controller being Spring Core (Dispatcher Servlet) \nImplemented controller (abstract) and mapped it to a URL in -servlet.xml file. Implemented JSP corresponding to the controller where in the data was propagated into it from the model and view object from the controller. \nDesigned and Implemented MVC architecture using Spring Framework, which involved writing Action Classes/Forms/Custom Tag Libraries &JSP pages. \nDeveloped Action classes, Enterprise Java Beans (EJB) Session Beans using DAO design pattern. Implemented persistence layer using Hibernate that use the POJO's to represent the persistence database tuples. These POJOs are serialized Java Classes that would not have the business processes. Developed Perl scripts to automate frequent reports for the users. \nDesigned, developed and maintained the data layer using Hibernate and performed configuration of Spring Application Framework Used Hibernate to store the persistence data into the Oracle database and written HQL to access the data from the database. Debugged and troubleshooted JavaScript code using tools such as Firebug. \nUsed JMS (Java Messaging Service) for asynchronous communication between different modules. \nUsed XML, WSDL, UDDI, and SOAP Web services for communicating data between different applications. \nPart of a team that would plan develop and create mobile applications to match the needs of industrial clients. \nInitiated and developed mobile solutions for Java. Deployed the application on WebLogic Application server. \nWorked with QA team to design test plan and test cases for User Acceptance Testing (UAT) \nExperienced in technical reporting and software documentation using MS Office products \n\nEnvironment: Java, J2EE, Spring, Hibernate, HTML, Rest API, Scala, Spray, JavaScript, EJB 3.0, JSP 2.1, CSS, JDBC 3.0, JMS 1.1, XML, WSDL, Perl, UDDI, SOAP Web Services, SQL, WebLogic 9, Eclipse 3.2., Zookeeper\n\nTechnical Skills: \nLanguages: C, C++, Java, J2EE, SQL, PL/SQL. \nEnterprise Java: Java, J2EE, Sockets, JDBC, Servlets, JSP, JMS, Java Beans, JSTL, JSF, Struts, EJB, Spring, JTA, JNDI and JPA. \nWeb/XML Technologies: HTML, CSS, JavaScript, jQuery, Ajax, Bootstrap, AngularJS, React JS, Backbone JS, XML, XSD, XSL/XSLT, SAX/DOM, JSON, DOJO, Node JS. \nTools & Frameworks: Struts, Hibernate, Spring MVC, Spring Web Flow, Spring IOC, Spring AOP, JMS, JSF, Log4J, SOA, Jasper reports, SOAP UI, Spring Boot, Spring Batch, Spring Security, and Spring Data. \nWeb services: SOAP, RESTful, UDDI, WSDL, JAX-RPC, JAX-RS JAX-WS, JAX-B, Apache Axis2, Apache CFX, JMS, MQ, Amazon Web Services (AWS) and Micro Services. \nWeb/App Servers: Web Sphere, Apache Tomcat, JBoss, WebLogic. \nDatabase: Oracle, SQL-Server, MySQL server, MS SQL, IBM DB2, MongoDB and NoSQL \nDevelopment Tools: Eclipse, My Eclipse, RAD, Spring Tool Suite (STS), IntelliJ IDEA\nO-R mapping: Hibernate, JPA, JTA \nModelling/CASE Tools: Rational Rose, MS Visio Professional, Star UML \nPlatforms: Windows, Win 2k Server, Sun Solaris, UNIX\nMicro services: Swagger, Pivotal Cloud Foundry, Spring Micro Services, Spring boot, Netflix Eureka\nCloud Computing: AWS (Amazon Web Services), EC2, RDS, S3 \nMethodologies: RUP (Rational Unified Process), Agile, Waterfall, SCRUM, Rapid Application Development \nApplication Frameworks: Struts 1.x/2.x, Spring (Dependency Injection, Spring MVC, Factory Pattern, Core, Spring Context, Spring DAO, Spring IOC, Spring JDBC, Spring Security, Spring Boot, Spring Batch, Spring with Hibernate) \nORM Frameworks: JPA, Hibernate, Spring JPA, DAO \nOO Modelling: Rational Rose, MS Visio \nTesting Tools/ Others: JUnit, SoapUI, Putty, Rational Clear Quest, RTC, Load UI, JIRA \nVersion Control: GIT, CVS, SVN, Rational clear case, Star Team \n\nEducation: \nBachelor’s Degree (B.Tech) in Computer Science Engineering \n",
    "extracted_skills": [
        "agile",
        "angular",
        "ansible",
        "aws",
        "bash",
        "cassandra",
        "communication",
        "css",
        "docker",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "mongodb",
        "mysql",
        "node.js",
        "oracle",
        "r",
        "rds",
        "react",
        "redux",
        "rest api",
        "s3",
        "scala",
        "scrum",
        "sql"
    ]
}