{
    "id": "resume_6857d8f5-33c5-4efe-bdf3-dd9e3a37e170",
    "metadata": {
        "filename": "madhuri R.docx",
        "processed_date": "2025-09-24T08:45:43.215711+00:00"
    },
    "raw_text": "Madhuri\n(720) 722-0838\nmadhurir1702@gmail.com\n\n\nObjective:\n\nTo work in the most challenging position with an organization that provides ample opportunities to learn and to contribute for the growth of an organization. Possess 8 years of professional IT experience in designing and developing Web based and Enterprise applications using JAVA/J2EE technologies in Telecom, Financial, Insurance and Digital domains. \nProfessional Summary:\n\nExperienced in all phases of Software Development Life Cycle (SDLC) including Analysis, Design, and Development, Debugging, Support, Integration, Maintenance, and Enhancements of Java/J2EE Applications.\nExperience in working in environments using Agile (SCRUM) and Waterfall development methodologies.\nExpertise in client and server scripting languages like HTML5, CSS3, JavaScript, Bootstrap, JQuery, Angular JS, ReactJS, Backbone.js and Node JS.\nExperience with Java 8 features such as lambda expressions, Parallel operations on collections and for effective sorting mechanisms and new Date Time API. \nHandled operations and maintenance support for AWS cloud resources which includes launching, maintaining, and troubleshooting EC2 instances, S3 buckets, Auto Scaling, Dynamo DB, AWS IAM, Elastic Load Balancers (ELB) and Relational Database Services (RDS). Also created snapshots for data to store in AWS S3.\nExperience in developing and solid understanding of Service Oriented Architecture and Microservices Architecture.\nStrong hands on experience in implementing Design patterns like MVC, Data Access Object, Session Façade, Business Delegate, Factory, Proxy, and Singleton. \nExperience in developing web-based enterprise applications using Core Java, J2EE, Servlets, JSP, JSF, JDBC, Hibernate, Web Services (SOAP and REST), MVC Framework (Struts, Spring MVC) and SQL.\nExperience in both providing and consuming Web Services using SOAP and RESTful (JAX-RS and JAX-WS). \nExperience using persistence framework like Hibernate, JPA for mapping java classes with Database and using HQL (Hibernate Query Language).\nStrong experience in Core Java concepts like Collections, Multithreading, Event Handling, Exception Handling, and Generics.\nExperience with different Spring framework modules like Spring Core, Spring AOP, Spring IOC, Spring MVC, Spring Boot, Spring Batch, Spring Security, and Spring cloud.\nExperience in design and development of robust and highly scalable web service platforms and API’s based on REST and SOAP for e-commerce applications using AXIS, WSDL, UDDI, XML, JAX-WS, JAX-RS, JAXB, JAX-RPC technologies and Jersey frameworks.\nExpertise in XML technologies such as XSL, XSLT, XML schemas, XPath, XForms, XSL-FO and parsers like SAX.\nExperience on CQL (Cassandra query language), for retrieving the data present in Cassandra cluster by running queries in CQL. \nProficient in writing and handling SQL Queries, PL/SQL, Stored Procedures, and Triggers.\nGood experience with Relational databases like Oracle, My SQL, MS SQL Server, IBM DB2 and No SQL databases like Mongo DB and Dynamo DB.\nExperienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using Active MQ, Rabbit MQ as a message queue.\nExperience with application servers like Web Logic, JBOSS, Apache Tomcat and IBM Web Sphere.\nGood experience writing application deployment scripts using Shell Scripting. Worked on Windows, UNIX, LINUX platforms to move the project into production environment. \nExperience with Junit, Jasmine, Karma, Mockito and Log4J in developing test cases.\nWorking knowledge with version control tools like SVN, CVS, GIT, and Visual Source Safe.\nHands on experience in building tools like ANT, Maven, Gradle.\nExperienced in developing Rich GUI's by using Eclipse RCP, HTML, frameworks.\nHighly experience with Java complaint IDE’s like Spring Tool Suite, Eclipse, IntelliJ, and RAD.\n\nTechnical Skills\n\nCertifications\n\nAWS Certified Developer – Associate (KDNJ3B41CBQQQXSF)\t\t       \t\t\t Nov ‘17\n\nProfessional Experience:\nClient: BCBS, Chicago, IL                           \t\t                                                                                           Jan’17 – Till date\nRole: Full Stack Developer\n\nDescription: Well Mark Blue Cross and Blue Shield is a leading insurance company owned by its policyholder. BCBS is the health insurance and health care provider company. “Find a plan” is a web based J2EE application, created to help individuals and families easily shop for, and buy health insurance. Well mark offers a variety of insurance plans, as well as tools to help you choose the plan that’s right for you.\nResponsibilities:\nInvolved in various phases of Software Development Life Cycle (SDLC) and worked in a highly dynamic AGILE environment and participated in Scrum and Sprint meetings.\nDeveloped UI using HTML5, CSS3, JavaScript, Bootstrap, JQuery, Angular JS and Node JS.\nBuilt AngularJS modules, controllers, pop up modals, and file uploaders.\nCreated reusable directives, factories, and services in AngularJS.\nUsed Backbone.js and ReactJS to create Controllers to handle events triggered by clients and send request to server.\nUsed plug-in development for RCP version for developing the layouts like GridLayout and Fillout for RCP. \nDesigned and implemented application using Spring Boot, Spring MVC, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions, Spring HATEOAS, Spring Cloud and Spring JDBC.\nImplemented the authentication and authorization of the application using Spring Security and Oauth2. \nDesigned and developed Microservices business components and RESTful service endpoints using Spring boot.\nImplemented RESTful and SOAP based web services using for JAX-RS and JAX-WS respectively.\nImplemented first-hand the best/worst practices for integrating Microservices into existing system architecture.\nMicroservices were being used as a strategy to gradually replace a core monolithic application while still adding business features.\nWorked on integrated Hystrix dashboard to monitor spring micro-services using Circuit Breaker.\nImplemented Multithreading, Concurrency, Exception Handling, and Collections whenever necessary.\nPrepared calls through Hibernate and Spring JDBC for Interacting with the Database.\nExperienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances.\nParticipated in troubleshooting issues on AWS, Netflix Eureka, and Cloud environments.\nAuthored application using Spring Cloud services (spring version of Netflix OSS-Eureka, Circuit Breaker, and Ribbon). \nInvolved in writing Java API for Amazon Lambda to manage some of the AWS services.\nParticipated in creation of Spring Configurations using Java8 features, Lambda expressions, Streams, filters.\nWorked Docker container management along with volumes, container based DB and services, Docker Artifactory configuration and setup.\nExperience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors, and indexes in Oracle DB.\nPerformed data extraction and loading the JSON data with the server-side content in to the Mongo DB.\nConfigured JMS Server setup and DB Connection pool setup and deployed Returned items in Web Sphere Server.\nUsed Active MQ to communicate with controller and used service layer to implement the business logic.\nImplemented Batch jobs using Spring Batch created various item readers, item writers and item processors.\nInvolved in support for end to operations support for OSS/BSS (Business Support System) identify gaps, and propose solutions and manage issue resolution.\nValidations are done using SoapUI and Ready API testing tool framework in different environments. \nWorked with Spring Ribbon and Kafka broker service to handle heavy traffic.\nDeployed and tested the application on Web Sphere Application Server. \nDeveloped test cases for unit testing in the integration layer using Mockito framework.\nUsed UNIX shell scripts to search/modify files.\nSetup the (CI) and (CD) process for the application using the Jenkins.\nInstalled and deployed monitoring solution with Splunk services.\nWorked on Log4J to validate functionalities and JUnit for unit testing.\nImplemented configured and customized JIRA issue tracking software with agile plug-in across all company functions.\nUsed GitHub to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.\nEnvironment: Java1.8, J2EE, HTML5, CSS3, Bootstrap, JQuery, Angular JS, ReactJS, JavaScript, Node JS, Eclipse Rich Client Platform, Spring IOC, Spring MVC, Spring Security, Spring Boot, Spring Batch, Spring HATEOAS, Spring Data, Hibernate, Active MQ, RESTful, Postman, SOAP, Micro Service, AWS, EC2, Docker, Mongo DB, Oracle DB, Maven, STS, Web Sphere Application Server, Mockito, JMS, UNIX, Jenkins, JIRA, log4j and GIT.\nClient: Capital One, Wilmington, DE\t\t\t\t\t\t\t                    Feb’16 – Jan’17\nRole:  Full Stack Developer\n\nDescription: The move money services help general users and investment users, to carry monetary transactions among friends, family and to manage loans and pay bills.  The project consisted of developing and maintaining services of Capital One move money services like bill pay, home loan accounts, mortgage accounts etc. the services were developed maintained and tested for the devices and the web. We worked on the architectures, services and the front-end UI for each of the applications.\n\nResponsibilities:\nResponsible for all stages of design, development, and deployment of applications. Active role in Test Driven Development termed as TDD apart from Agile Software Development.\nUpgraded existing UI with HTML5, CSS3, jQuery and Bootstrap with AngularJS interaction.\nDesigned, developed a custom, single-page, responsive web application on front end using AngularJS.\nDeveloped custom directives, Factories and Services in AngularJS and created AngularJS Controller to isolate the scopes to perform operations.\nCreated the AngularJS app using Yeoman, Grunt and Bower and used Angular UI for component model.\nUsed JavaScript, jQuery for user interactions in pages. Creating a responsive web application integrating Twitter Bootstrap with Angular JS and media queries.\nAdded user validations and user permissions by using the NodeJS with libraries Express JS.\nImplemented Grails TagLibs to avoid groovy code in GSP pages. \nUsed Grails command objects for validating non-persistent objects. \nDeveloped an API to write XML documents from a database. Utilized XML and XSL Transformation for dynamic web-content and database connectivity.\nDesigned the application using various Spring technologies and used Spring Security to provide better authentication instances.\nDeveloped SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability.\nDeveloped Restful Web services for other systems to interact with our system and secured the service with Spring-Security Oauth-2.0. Added WS-Security using XWSS to secure the Web services.\nUsed AWS SDK for connecting to Amazon S3 buckets and EC2 to deploy on Docker Container with Microservices architecture.\nDeveloped AWS Lambda Functions in a stateless style and ensure there is no affinity between and compute infrastructure to manage the servers and run the code in the AWS.\nDeveloped services that utilize the Cloud Foundry and Azure client libraries (SDK) for Java.\nDeployed application using Pivotal Cloud Foundry (PCF) CLI. \nUsed Micro-services to ensure the scalability of application on cloud infrastructure.\nRefactored existing monolithic application by identifying components that needs to be transformed to Micro- services architecture, with Spring Boot-based services interacting through a combination of REST and AWS API-Gateway.\nInstalled secured and configured AWS cloud servers and virtual servers using Spring Cloud for AWS.\nAnalysis the logs data and filter required columns by Log stash configuration and send it to Elasticsearch.\nDeveloped the persistence layer using Hibernate Framework, created the POJO objects and mapped using Hibernate annotations and Transaction Management.\nImplemented Web-Services to integrate between different applications components using Restful web services by using Jersey for JAX-RS implementation.\nDeveloped SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability.\nWorked on MongoDB database concepts such as locking, transactions, indexes, Sharding, replication, schema design, etc.\nExtensively used JSON to parse the data from server side to satisfy the business requirement.\nUsed WebSphere server to route our JMS queue messages to different business floors and configured routes in WebSphere.\nUsed Apache Camel Framework to transform, extract and load the data.\nUsed Spring Core Annotations for Dependency Injection and used Apache Camel to integrate spring framework. \nImplemented request and response objects using SOAP web services and created routes using Apache Camel. \nDefined several UML diagrams; Activity diagrams, Sequence, and Object diagrams.\nDeveloped unit and integration tests for existing microservices using JUnit, Mockito and Docker environments.\nInvolved in installing and configuring Maven for application builds and deployment.\nConfigured and customized logs using Log4J and Used GIT as a version control tool. Used JMeter to test performance of SOAP protocol.\nWorked on Creating Kafka Adaptors for decoupling the application dependency.\nUsed JIRA to assign, track, report and audit the issues in the application.\nSetup the CI and CD process for the application using the Jenkins.\nInvolved in System Testing, Integration Testing, and Production Testing on WebLogic Server.\n\nEnvironment: HTML5, CSS3, JavaScript, Bootstrap, AngularJS, NodeJS, Express JS, jQuery, AJAX, Agile(SCRUM), Groovy, Grails, Hibernate, Spring, Struts, MongoDB, Spring Batch, Spring Boot, Spring Cloud, Spring Security, Servlet, JSON XML, GIT, Spring MVC, Apache Camel, JUnit, Maven, JMS, WebSphere, Restful, JAX-RS, Log4J, AWS, Docker, Microservices, Kafka, Elasticsearch, Logstash, JIRA, Jenkins, JMeter.\n\nClient: Sprint, Kansas City, MO                \t\t                                  \t\t\t                    May’14 – Dec’15\nRole:  Java/J2EEdeveloper\t\n\nDescription: Sprint Synaptic Storage as a Service is a web services-based storage solution that easily scales up and down to any size you need and allows you to pay only for the storage you use. It provides elastic capacity on demand with no commitments, minimums, or limits and allows access to your stored data from virtually anywhere and anytime.\n\nResponsibilities:\nInvolved in complete development of ‘Agile Development Methodology/SCRUM’, developed and tested the application during various iterations.\nDeveloped screens using HTML, CSS and JQuery.\nDeveloped the User Interface using Spring framework, JQuery and Ajax.\nImplemented routing logic and navigation from screen to screen and implemented login functionality on the client side in AngularJS.\nDeveloped and configured Jasmine test cases to test the Angular controllers for UI in Jasmine framework (JavaScript Testing Framework) in Eclipse IDE. \nHandled Java multithreading part in back - end component, one thread will be running for each user, which serves that user.\nUsed spring frame work Spring AOP features and JDBC module features to persist the data to the database for few applications. \nDeveloped the persistence layer using Hibernate Framework by configuring the mappings in hibernate mapping files and created DAO and PO.\nDeveloped various Java beans for performance of business processes and effectively involved in Impact analysis.\nDeveloped application service components and configured beans using Spring IOC, creation of Hibernate mapping files and generation of database schema.\nImplemented a highly-scalable vertical and horizontal, performance efficient Drools architecture. \nInstalled and configured JBOSS server with MYSQL persistence. Extracted rules data from the database and decision tables.\nCreated SOAP web services interface to Java-based runtime engine and accounts.\nHands on experience on Cassandra architecture with better understanding and write processes including mem-table, stable and commit log. \nActively involved in writing SQL using SQL query builder.\nWorked on MYSQL databases and Oracle databases technologies. \nUsed Maven as build tool and deploying the application.\nActively used the defect tracking tool JIRA to create and track the defects during QA phase of the project.\nUsed SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.\nDeveloped test cases using Junit.\n\nEnvironment: SCRUM, SDLC, Maven, HTML, CSS, JQuery, Jasmine FrameWork, Spring, Ajax, AngularJS, AOP, JDBC, Spring IOC, Hibernate, DAO, PO, Java beans, SOAP, SQL, Cassandra, JIRA, QA, SVN, Junit, JBOSS Server, Drools.\n\nClient:  State Farm, South Houston, TX                                                                                                            Aug’11 – Dec’13\nRole:  Java developer\t\t\t\t\n\nDescription: State Farm is a group of insurance and financial services companies in the United States. The group's main business is State Farm Mutual Automobile Insurance Company, a mutual insurance firm that also owns the other State Farm companies.\n\nResponsibilities:\nInvolved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modelling, analysis, design, development, testing, and monitoring.\nInvolved in the front end using JSP, HTML, CSS, JavaScript and JQuery.\nDeveloped GUI using SWT/RCP technology.\nExperience in working with different plug-ins of Eclipse RCP.\nDeveloped different GUI screens using widgets like Tree and Table form in Eclipse SWT/RCP.\nDeveloped perspective to show different views together in RCP.\nDeveloped Menus and views using Extension point in RCP. \nImplemented MVC architecture using JSP, Spring, Hibernate and used Spring Framework to initialize managed beans and services.\nInvolved in development of Agent Verification System using Spring MVC framework. \nUsed Spring Inheritance to develop beans from already developed parent beans.\nUsed Spring AOP for logging, auditing, and transaction management to distinguish business logic from the cross-cutting concerns. \nUsed Spring Security for Authentication and Authorization of the application.\nCreated data model and generated Hibernate mappings and domain objects using Hibernate tools.\nInterfaced with the My SQL back-end database by integrating Spring with Hibernate.\nExtensively used hibernate named queries, criteria queries, Hibernate Query Language (HQL) and Optimistic Locking and Caching to process the data from the database.\nDeveloped Unit /Integration test cases using JUnit.\nUsed Gradle tool for building and deploying the Web applications in Web Logic Server.\nUsed JIRA tool for tracking stories progress and follow agile methodology.\nUsed logging techniques provided by Log4J tool for efficient logging and debugging. \nDeveloped the application using Eclipse as the IDE and used its features for editing, debugging, compiling, formatting, build automation and version control (SVN). \nInvolved in Maintenance and Enhancements for the project.\n\nEnvironment: Java, J2EE, HTML, CSS, JavaScript, JQuery, Struts, Spring IOC, Spring MVC, Spring AOP, JDBC, Hibernate, My SQL, HQL, SQL, JUnit, Gradle, JIRA, Log4J, Eclipse, SVN, Sybase, RCP and Web Logic Server.\n\nClient: Techno soft Solutions, Hyderabad, India                                      \t\t\t\t   Sep’10 – Aug’11\nRole: Java/J2EE Developer\n\nDescription: Techno soft provides a range of professional services delivered by experts with operational experience building and running the largest E-Mail, messaging, and Internet networks. These services range from architecture and design of software solutions, website design & development to deployment services and operational support.\nResponsibilities:\nDeveloped front-end screens using JSP, HTML, CSS, JavaScript, JSON.\nImplemented Struts MVC design pattern and front controller pattern along with Action Servlet as front controller for this application.\nDeveloped SCM by using the JSP/HTML like one form for each functionality user interface, standard validations using the JavaScript, Servlets used as the controllers for the business logic and business logic using JDBC, XML parsing techniques etc using MVC.\nDeveloped SingleSignOn (SSO) functionality, through which we can run SCM from Oracle Applications.\nInvolved in developing the Routings and configured Routing Program as scheduled the concurrent request.\nDeveloped Server-Side components for the business services for creating Items, BOM, Sourcing Rules, and substitute.\nInvolved in raising the Notifications to Oracle Users through Mailing Concept for intimating to start the next process using workflow.\nExtensively worked on creating the setups for Organizations, Templates, Concurrent Requests, Cross Reference Types, User Creations, assigning responsibilities, creating value sets, Descriptive Flex Fields etc, in Oracle Applications.\nUsed CVS as version control system.\n\nEnvironment: Java, JDBC, Servlets, Oracle, JSP, XML, UML, HTML, CSS, JavaScript, UNIX, CVS, DB2 and Ionic Framework.\n\nClient: Udyog Software, Hyderabad, India                                                                                                      May’09 - Aug’10\nRole: Jr. Java Developer\t\t\t\t\n\nDescription: Udyog software is a pioneer in providing tax automation products, solutions for both direct and indirect taxes. The application developed offers various computation & filing services for account payable, account receivable and payroll transactions and is a preferred tax solution partner for various ERP vendors and implementers.\n\nResponsibilities:\nInvolved in Analysis and Design of the project, and developing prototypes of the product.\nDeveloped the application using Struts Framework that leverages classical Model View Controller (MVC) architecture.\nDeveloped Controller Servlets, Action, and Form objects for process of interacting with Oracle database and retrieving dynamic data.\nWrote custom support modules for upgrade implementation using PL/SQL, UNIX Shell scripts.\nDeveloped backend components, DB Scripts for the backend communication.\nUsed Apache Log4j logging API to log errors and messages.\nInvolved in Documentation and use case design using UML modeling include development of Class diagrams, Sequence diagrams, and use case Transaction diagrams.\nDeveloped HTML and JSP pages using Struts.\nResponsible for performance tuning of the product and eliminating memory leakages in the product.\nUsed Junit to perform unit testing.\nUsed Eclipse tool for application development.\nUsed Configuration Management Tools for version control which is built on CVS.\n\nEnvironment:  Java, JSP, HTML, AJAX, XML, DOM, SAX, JNDI, Struts, DB, PL/SQL, UNIX Shell Scripting, Rational Rose, Apache Tomcat, Oracle, JUnit, Log4j, CVS, Eclipse.\n\n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "azure",
        "cassandra",
        "communication",
        "css",
        "docker",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "lambda",
        "mongodb",
        "mysql",
        "oracle",
        "rds",
        "s3",
        "scrum",
        "sql"
    ]
}