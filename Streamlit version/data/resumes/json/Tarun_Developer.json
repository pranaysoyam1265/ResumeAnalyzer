{
    "id": "resume_a8c8f68d-959a-4c37-aeae-f257b0bb52af",
    "metadata": {
        "filename": "Tarun_Developer.docx",
        "processed_date": "2025-09-24T08:45:57.068703+00:00"
    },
    "raw_text": "Tarun Reddy\n502-378-5940 \ntarundev.work@gmail.com \n\nObjective\nAccomplished Java Developer and talented Software Engineer with demonstrated success in developing and maintaining business functionality, is seeking work in a challenging environment to promote individual as well as organizational growth. Proven expertise in maintenance of Web Based, Client-Server Architectures in areas like Telecom, Financial, Insurance etc. A self-starter and fit for working freely to accomplish points of reference and due dates. Proficient at organizing, following and finishing undertakings to achieve venture objectives.\n\nProfessional Summary\nAround 8 years of IT involvement in all phases of Software Development Life Cycle (SDLC), such as Planning, Analysis, Design, Implementation, Testing and Maintenance of various Client/Server Applications, Web Based applications using JAVA/J2EE technologies.\nWell versed with complete Software Development Life Cycle (SDLC) using various methodologies like Agile Methodology (Scrum, XP), Waterfall and followed Test Driven Development (TDD).\nDeveloped Web-based enterprise applications using Java/J2EE, Core Java, Servlets, JDBC, Hibernate, Web Services (SOAP and REST) and MVC Framework (Struts, Spring MVC). \nExpertise in developing UI using JSP, HTML5, CSS3, Java Script, Bootstrap, JQuery, Ajax, Angular1.x, 2 and ReactJS\nExperience with Java 1.8 features such as Lambda Expressions for making anonymous inline function calls by using functional Interfaces which makes code readable and concise. \nHands on experience with different Spring framework modules like Spring Core, Spring AOP, Spring MVC, Spring Batch, Spring Security, Spring Data and Spring Boot.\nExperience in developing XML based Web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach and REST based services with JAX-RS, Jersey and Spring Integration.\nExperience in developing the application with Service Oriented Architecture (SOA) and Micro Services Architecture.\nExpertise in working with the JavaScript, Ext JS, prototype JS and various MVC JavaScript frameworks AngularJS, Angular 2, Angular 4, BackboneJS, ReactJS, NodeJS, Hudson, Bamboo, Canvas and Jenkins.\nCreated and Configure Micro Service architecture for CDT Directory project and integrated with AngularJS application.\nHands-on experience on various AWS Cloud services like EC2, Route53, EBS, Auto Scaling, VPC, Cloud Formation, S3, RDS, Amazon Elastic Load Balancing, IAM, Cloud Watch and other services of the AWS infrastructure like Dynamo DB, SQS and EMR focusing on high-availability, fault tolerance and auto-scaling. \nWorked with Java 1.8 Streams API and parallel Streams API for enabling parallel processing of collections in distributed environment. \nExpert in Core Java with strong understanding of Garbage Collector, Collections, Multithreading, Event Handling, Exception Handling and Generics.\nProficient in implementing various Java design patterns like MVC, Session Facade, Data Access Object (DAO), Factory, Singleton, Data Transfer Object and Front Controller.\nKnowledgeable with RDBMS concepts like writing SQL Queries. Working experience of Relational DBMS like MySQL, Apache Solr, Elastic Search, Oracle SQL PL/SQL, Teradata, SQL Server (MS SQL), DB2, MongoDB, Dynamo DB and Cassandra. Postgre-SQL and NoSQL DBMS and Oracle Performance Tuning.\nExpertise in designing POJO classes using Hibernate Annotations using EJB/JPA API.\nExperience in working with DevOps/Continuous integration tools like GITHUB, Jenkins, Nexus, Jira and SonarQube.\nExperience with application servers like Web Logic, JBOSS, Apache Tomcat and IBM Web Sphere.\nExperienced in JMS over messaging to exchange the information in more reliable and asynchronous way in enterprise Applications. Used Apache ActiveMQ and Apache Camel as JMS provider. \nCore development experience for Groovy Grails restful web services.\nUsed Apache Kafka for integration and Data Processing with spring and for Multi-Threaded Message Consumption and worked on Zookeeper to maintain services.\nExperience in developing core infrastructure in Python on Google App Engine.\nGood experience with Cassandra NoSQL Database.\nGood understanding of Openshift platform in managing Docker containers Kubernetes Clusters, Mesos.\nImplemented a Continuous Delivery pipeline with Docker, Jenkins and GitHub and AWS AMIs to run the war, AMI and deploy jobs in Jenkins brew master instance, which reduces the time for the deployment of micro services.\nExperienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using ActiveMQ, RabbitMQ and Kafka as a message queue. \nGood Skills in using Dojo Components and integrating back-end applications with AJAX driven web 2.0 front-end using OO JavaScript Framework.\nExperienced in using Eureka Servers while deploying in EC2. \nHands on experience with Netflix cloud and fall-back technologies like Eureka, Hystrix and Ribbon.\nExperience DOJO DOM manipulation, Event Handlers, Events.\nStrong experience in database design using PL/SQL to write tables, Stored Procedures, Functions, Triggers, Indexers and proficiency in writing complex queries to retrieve data.\nUnit testing with mocha, chai.\nExpertise in using various IDE tools like Spring Tool Suite, RAD, Eclipse and IntelliJ.\nProficient in Continuous Integration and Continuous Deployment tools like Jenkins.\nExperience with Selenium, JUnit and Mockito in developing test cases and Log4J in determining application functionality.\nHaving Experience on UNIX, LINUX, Python Shell Scripting and Deployment of Applications in Server.\nExperience in writing shell scripting for deployment process and expertise in sharing files between Linux boxes and windows using the WinSCP, secure FTP, SCP client for Microsoft Windows.\nExperience working with version control tools like Git Hub, Subversion(SVN) and CVS. \nGood experience with JIRA in issue tracking.\nExperience with build automation tools like Gradle, ANT and Maven for builds and deployments to different environments.\n\n\nTechnical Skills\n\n\n\n\nProfessional Experience\n\nT-Mobile, Seattle, WA       \t\t\t \t\t\t                                               Mar’17 – Till Date\nRole: Full Stack Developer\n \nDescription: The project was to develop T-Mobile platform for web services that acts as a common gateway for APIs from different existing systems like Product and Offer Management, Billing, Sales, etc. The Java web services act as a one stop shop APIs for different T-Mobile Emerging Business Market Resellers, Clients and Partners looking to access T-Mobile APIs from their own systems. \n   \nRoles & Responsibilities:\nInvolved in analysis, specification, design, and implementation and testing phases of Software Development Life Cycle (SDLC) and used agile methodology (SCRUM) for developing application.\nApplication is implemented using Agile methodology where there is a daily SCRUM meeting to understand the status and resolve any issues.\nInvolved in the development of user interface using HTML5, CSS3, JSP, JavaScript, Bootstrap, JQuery, Angular JS, ReactJS and NodeJS. \nUtilized Java 1.8 features like Lambda expressions for collection, evaluation and comparing the data, Stream API for Bulk data operations on Collections which would increase the performance of the Application, Parallel operations on collections for effective sorting mechanisms and to change the sequential stream flow of threads while session establishment. \nDesigned and developed application using various Spring framework modules like Spring IOC, Developed Controller Classes using Spring MVC, Spring AOP, Spring Boot, Spring Batch, Spring Data modules and handled security using Spring Security.\nExperience with the features of Angular 2 such as directives, modules and routing. Highly used Angular 2 router to build single page application for navigate through the different status and multiple modals.\nDeveloped user interface using JSP, AJAX, Java, Saas, big data, cloud, POC, RBDMS, JSP Tag libraries and Struts Tag Libraries to simplify the complexities of the application.\nWorked on high level design / architecture, developed initial prototype demonstrating Google App Engine utilization and proof of concept which helped us in understand GAE and related technologies and how to use them efficiently.\nDeveloped RESTful web services to retrieve JSON documents related to customer and consumed SOAP based Web Services.\nImplemented Micro Services Architecture to divide the application into various sub modules.\nImplemented Restful Services with JAX-RS using Spring Boot and Micro Service Architecture.\nImplemented Batch jobs to deal with large number of chunks using Spring Batch Framework to execute the similar jobs simultaneously.\nDesigned and Developed the UI Framework built using JSF with Prime Faces. Creating custom JSF Facelet tags for error handling, data tables, true/false markers etc. \nResponsible for maintaining and expanding AWS (Cloud Services) infrastructure using AWS Stack especially worked with database setup and maintenance and created AWS EC2 instances.\nDesigned services to store and retrieve user data using Mongo DB database and communicated with remote servers using REST enabled Web Services on Jersey framework.\nExperience in Implementing API's in Java Multi-Threaded Environment\nDeveloped integration modules for disparate clients using Apache Camel. \nUsed Spring JDBC API to talk MySQL Database for Read and Write operations.\nDeveloped SOAP web services using JAX-WS API and REST web services using JAX-RS API.\nRan ad-hoc queries against Cassandra using CQL scripts.\nWorking experience with GAE's Google App Engine as PaaS involving App Engine APIs: Datastore, Cloud Storage, Bigtable, Blob-store, asynchronous services using Backend, Task Queues and Modules, and scheduled tasks using App Engine Cron Service and exposure to Amazon Web Services AWS.\nWorked with NoSQL Cassandra to store, retrieve, and update and manage all the details for Ethernet provisioning and customer order tracking.\nWrote scripts in JMeter to test the performance of the API's\nExperience in making the Devops pipelines using Openshift and Kubernetes for the Microservices Architecture.\nMaintained SVN repositories for DevOps environment: automation code and configuration.\nResponsible for writing the Design Specifications for the generic and application specific web services in Groovy n Grails.\nImplemented service layer on top of Cassandra using core Java, Datastax Java API and Restful API\nUsed Spring Core Annotations for Dependency Injection and used Apache Camel to integrate Spring framework.\nDeveloped BASH scripts to redact sensitive data from Apache access and error logs using a sed expression, deploy WAR files to environments in parallel.\nWorked with DROOLS engine for Spring Integration and validate business rule before executing in runtime.\nWeb application development using Groovy Grails JQuery AJAX and D3.js. \nUsed Hibernate API to talk MySQL Database for Read and Write operations\nEnsured idempotentcy of KRFS DevOps BASH scripts.\nExperience with NodeJS modules including Events, http, file system, MySQL. Wrote restful services on the server in NodeJS to listen to requests from devices. \nUsed PowerShell for DevOps in Windows-based systems.\nUnderstanding the role of Filenet and CSIF framework in the project. \nDeveloped Dash-Board to monitor and report Cache Coherence Servers. \nImplemented the validation, error handling, and caching framework with Oracle Coherence cache.\nCreated views using components of Prime Faces in XHTML files and configured JSF framework. \nDeveloped test scripts using JSF with Spring MVC to evaluate the performance of different modules of the application. \nImplemented persistence layer using Hibernate, created POJOs and mapped to databases Annotations.\nExperience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors and indexes in Oracle DB. \nUtilized kubernetes and docker for the runtime environment of the CI/CD system to build, test deploy.\nExperienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using ActiveMQ as a message queue.\nDeveloped test cases for unit testing in the integration layer using Mockito framework.\nExperience in Test Driven Development (TDD) by identifying test case scenarios and unit testing the code using JUnit framework.\nUsed Gradle as build tool and deploying the application on WebSphere Application Server. Used Jenkins to schedule the tests based on the carrier and priority of the test case.\nUsed Docker in Container Management. Used GIT for version control across common source code used by developers.\nMonitored the error logs using log4j and fixed the problems. Wrote unit tests using mocha, chai.\nUsed JIRA tool for Issue/bug tracking, monitoring of work assignment in the system.\nUsed Intellij as an IDE for the Application development.\n\n\nEnvironment: Agile Methodology, Java 1.8, J2EE, JSP, XML, HTML5, CSS3, JavaScript, JSP, Bootstrap, JQuery, AJAX, AngularJS, ReactJS, NodeJS, Hibernate, Spring, Spring IOC, Spring AOP, Spring Batch, Spring Boot, Spring Security, Spring MVC, Oracle, MongoDB, Mockito, Gradle, WebSphere, Restful, Log4J, SOA, Amazon Web Services (AWS), Docker, Micro Services, Unix Shell Scripting, GIT, JIRA, Jenkins and Intellij.\n\n\n\n\n\n\n\n\n\nWells Fargo, Des Moines, IA\t\t\t\t\t                                                                 Aug’15 – Mar’17\nRole: Full Stack Developer\t\t\t\t\t\t\n\nDescription: Wells Fargo is a financial service provider dedicated to providing mortgage, financial, investments and insurance products to its customers. The HMC Website is designed and developed for Wells Fargo customers and Home Mortgage Consultants to access their functionality through online. Customers use HMC Websites to apply for mortgages and obtain home buying information through online. Each branch and individual HMC has opportunity to subscribe or modify to their own HMC Website to support their sales efforts through Site Admin and Wizard.\n\nRoles & Responsibilities:\nInvolved in all phases of the Software Development Life Cycle (SDLC) using Agile methodology.\nDeveloped the view-controller components using HTML5, CSS3, JavaScript, JQuery and Angular JS.\nCreated distributed Oracle coherence domains, configuration and system design based on oracle coherence.\nExperience in building end to end web applications using MEAN stack with Angular1.X, 2\nDeveloped user-friendly interface to seamlessly combine the new module with existing login system by using Angular JS and Bootstrap.\nDeveloped HTML5 Mobile application with HTML5, Java, Jenkins, IIS, Java, Saas, big data, cloud, POC, RBDMS, Java Script, jQuery, JSON and RESTful web service.\nUsed Angular JS to create maintainable and testable single page application and Implemented two-way data binding and used ng-filters across the applications.\nDeveloped reusable and interoperable Web service modules based on SOA architecture using SOAP and RESTful Services. \nExpertise in using FIX Protocol API. Testing admin and application FIX messages like heartbeat, logon, logout, resend request, reject, sequence, pre-trade, trade and post-trade messages\nDeveloped the service layer, a layer that acts a bridge between the presentation layer and data access layer, with Spring Framework features like Spring JDBC and Spring ORM.\nUsed Apache camel integration for routing and transforming the data between two Applications using HTTP protocol.\nUsed Spring MVC Design Pattern to hold the UI data and serve the request and to send the response.\nImplemented Dependency Injection (IOC) feature of Spring Framework to inject beans into User Interface and AOP for Logging.\nConfigured and developed the web application using JSF and Hibernate to get the data from external clients on the status of technical support tickets. Used MySQL as the database.\nDeveloped Oracle PL/SQL packages and stored procedures for data warehouse that consolidated loan information from disparate systems and platforms.\nMigrated legacy databases by using ETL tools. Developed custom PL/SQL packages for gaps found in the ETL tools.\nDeveloped web service API methods using PL/SQL, SQL/XML and XML to enable conferencing resellers to write their own clients to interface with our web conferencing platform.\nInvolved in migrating monolithic application in Micro Service Architecture and Developed Micro services using Pivotal Cloud Foundry platform build upon Spring Boot Services.\nDeveloped applications using Application Lifecycle Management to deliver reliable applications.\nDeveloped persistence Layer using Hibernate to persist the data and to manage the data.\nWorked on Hibernate for mapping the Java objects to relational database and SQL queries to fetch the data, insert and update the data from the database. \nDeveloped Hibernate configuration files and queries and Implemented DAO classes.\nWeb Services were called using SOAP protocol, WSDL descriptor file, Universal Description, Discovery and Integration Registry (UDDI).\nCreated Stored Procedures, functions, views, indexes and constraints, triggers required SQL tuning to reduce the response time in the application.\nDeveloped the JSON structure for the data transfer in between the Goggle Web Toolkit (UI) and business tier.\nDeveloped Graphical User Interface (GUI) to display report data using JQuery in Cross-browser compatibility and Web Application Scaling.\nGUI design and development using Java Swing, JFC Used for open source web testing.\nConfigured development environment using WebSphere application server for developer’s integration testing.\nExperience with integration frameworks like Apache Camel for enterprise integration.\nDeveloped test cases for Unit testing using JUnit.\nUsed Jenkins and Maven for automated builds and deployments.\nTo keep track of issues and tasks on individuals used JIRA ticketing system.\nUsed Spring Tool Suite (STS) for application development.\n\nEnvironment: Java, J2EE, HTML, CSS, JQuery, AngularJS, Spring IOC, Spring MVC, Spring AOP, Spring Security, Hibernate, REST, SOAP, JAX-RS, JAX-WS, WSDL, Pivotal Cloud Foundry(PCF), Oracle, JUnit, Maven, Jenkins, JIRA, Apache Camel, WebSphere Application Server and STS IDE.\n\n\nClient: Allstate Insurance, Chicago, IL\t\t                                                                                               Oct’13 – Jun’15\nRole: JAVA Developer\n   \nDescription: The Allstate Corporation is the largest publicly held personal lines property and casualty insurer in America. The project involves the design and development of a Web based internet application to provide online insurance services. The web application provides functionalities such as policy management, profile management and claim reporting. The customer can access complete account information, policy information, receive instant auto insurance quote and report a claim.\n\nRoles & Responsibilities:\nWorked on design and implementation of Market Place application and involved in various phases of SDLC.\nWorked in Agile development environment and participated in SCRUM meetings throughout the life cycle of project.\nRole based application monitoring and recording audit history, activity of different roles accessing the site\nDeliver technical solutions utilizing defined technology stack.\nImplemented the front end using HTML, CSS, JavaScript and AngularJS was used to develop declarative User Interface.\nUsed JQuery, AJAX to interact with Java Servlet.\nIntegration of SEARS Product Management REST API's\nUsed Struts, and AJAX for highly interactive and graphic user interface.\nImplement JUnit test cases for Struts/Spring components\nDeveloped Action classes, Action Forms and Struts Configuration file to handle required UI actions, JSPs for Views and used HTML in web page component development.\nDeveloped Server-side presentation layer using Struts MVC Framework and designed and developed Application based on Spring framework using MVC design patterns.\nUsed Spring IOC for Dependency Injection and used Spring JDBC for interacting with database.\nUsed various design patterns like Business delegate, Singleton, Factory and DAO.\nPerformed Inheritance based Hibernate mappings in tables to simplify the data in Hibernate.\nInvolved in implementation of web services (top-down and bottom-up) using SOAP services.\nInteract with offshore team to coordinate and guide for the development happening in offshore.\nJUnit is used to perform the Unit Test Cases.\nUsed Oracle database for SQL, PL/SQL scripts, stored procedures, functions, triggers, Oracle forms/Reports.\nPerformance Tuning and Optimization with Java Performance Analysis Tool using Load Runner.\nWorked on Installing and configured WebLogic Application Server and Maven Build Tool. \nMade use of CVS for checkout and check in operations. \nEnvironment: Java, J2EE, Struts, Hibernate, JSP, Angular JS, HTML, XML, XSL/XSLT, JavaScript, AJAX, Spring MVC, SOAP, Oracle, CVS, J Profiler, Java Performance Analysis Tool, Eclipse, Maven, WebLogic.\n\n\n\n\n\nClient: Target, Minneapolis, MN                                                          \t\t                                      Sep’12 – July’13\nRole:  Java Developer\t\t\t\t\t\n\nDescription: This is an application developed with multiple web services, used for tracking the status of a purchase order by accessing three different databases. Order will be collected/placed through another web-based application. The OMS assign the order to the department. Once order is placed in the web-based application, from that moment user will be able to track the status using a track tool application. In each step of the process, different departments involved are using different tools and different database. This track tool is designed and developed in such a way that, it has robustness and flexibility to access all different DB used for tracking the status.\nResponsibilities:\nInvolved in various stages of Software Development Life Cycle (SDLC) deliverables of the project using the Agile methodology.\nDeveloped International Error Correction Screens using custom front-end forms using HTML, CSS, JavaScript, JQuery and AJAX.\nGathered and clarified requirements with business analyst to feed into high-level customization design, development and installation phases.\nUsed Spring Framework for dependency injection for Action classes using Application Context XML file.\nInvolved in implementation of MVC pattern using JSP and Spring Controller.\nDeveloped business objects using Spring IOC, Spring MVC and Spring AOP.\nImplemented MVC architecture using JSP Spring, Hibernate and used Spring Framework to initialize managed beans and services.\nImplemented SOA architecture with Web Services using SOAP, JAX-WS, WSDL, UDDI and XML.\nUsed Struts Framework, Tag Libraries to implement J2EE design patterns (MVC).\nDeveloped user interface using JSP, Struts published validation framework to support client side and Server-side validation.\nUsed Collections for Model classes in the DAO layer (Data Access Object) Involved in modifying some changes in DAO layer using Hibernate.\nCreated mappings among the relations and written SQL queries using Hibernate.\nImplemented Concurrency, Exception Handling and Collections whenever necessary.\nUsed Entity Beans to persist the data into IBM DB2 database like database access components, Creating Schemas and Tables.\nUsed SQL to perform data mapping and backend testing, also documented all the SQL queries for future testing purpose.\nCreated process flow for deploying application in Web Sphere application server.\nManaged build, reporting and documentation from the project information using Maven Tool and SVN for version control.\nUsed Jenkins for Continuous Integration.\nUsed JUnit for testing and used JIRA for tracking bugs.\nResponsible for the dealing with the problem, bug fixing and troubleshooting.\n\nEnvironment: Java, J2EE, HTML, CSS, JavaScript, JQuery, Ajax, Spring, Spring IOC, Spring AOP, Spring MVC, Hibernate, REST, SOAP, XML, XSLT, Eclipse, PL/SQL, JUnit, Maven Build Tool, IBM DB2, JIRA, Jenkins, SVN and IBM Web Sphere.\n\n\nClient: Radiant Technologies, India              \t                      \t                                                                   Jan’11 – Aug’12\nRole: Java/J2EE Developer\t\t\t\t\n\nDescription: The application is an enhancement of our Internet Financial Application Framework to provide the Internet financial facility for customers. Using this system retail and corporate customers can do Web transactions securely, process customer requests like claim a reporting, view all insurance policies, insurance payments etc. The application also facilitates second level authentication for paying the utility bills through web. \n\nRoles & Responsibilities:\nInvolved in Documentation and Use case design using UML modeling include development of Class diagrams, Sequence diagrams, and Use Case Transaction diagrams.\nDeveloped the application using Struts Framework that leverages classical Model View Controller (MVC) architecture.\nCreated user-friendly interface using HTML, CSS, JSP and JavaScript for client-side validation.\nDesigned the user interfaces using JSPs, developed custom tags, and used JSTL.\nImplemented Multithreading and Collections in java code.\nUsed AJAX for dynamically updating the content\nUsed Eclipse as IDE tool for creating Servlet, JSP, and XML.\nDeveloped various java business classes for handling different functions.\nImplemented Business processes such as user authentication, Transfer of Service using Session EJBs\nThe application was deployed on the JBoss.\nInvolved in build and deploying the application using ANT.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nDeveloped PL/SQL queries, Triggers and Stored Procedures to check the integrity of the data and actively involved in tuning SQL queries.\nDeveloped JUnit test cases for all the developed modules. Used SVN as version control\nMonitored the logs using Log4j and fixed the problem\nEnvironment: Java, J2EE, JSP, Struts, JNDI, DB2, HTML, CSS, EJB, XML, DOM, ANT, AJAX, JUnit, Eclipse, JBoss, MYSQL, LOG4J, SVN.\n\nClient: Birla, India              \t                      \t          \t\t\t\t\t\t         Jun’09 – Dec’10\nRole: Trainee Software Engineer \t\t\t\t\n\nDescription: This project was designed to build a Common Access Platform for customers and insurance agents using the Internet to interact with the system from any part and allow the customers to buy insurance online. Also, used by the HR department to manage the vast information generated due to massive business operations. The main objective is to help in tracking HR related issues, optimize and increase the productivity.\n\nRoles & Responsibilities:\nTechnical responsibilities included high level architecture and rapid development \nDesign architecture following J2EE MVC framework \nDeveloped interfaces using HTML, JSP pages and Struts -Presentation View \nDeveloped and implemented Servlets running under JBoss\nUsed J2EE design patterns and Data Access Object (DAO) for the business tier and integration Tier layer of the project \nUsed Java Message Service (JMS) for reliable and asynchronous exchange of important information, such as loan status report, between the clients and the bank\nDesigned and developed Message driven beans that consumed the messages from the Java message queue\nImplemented CMP entity beans for persistence of business logic implementation\nDevelopment of database interaction code to JDBC API making extensive use of SQL Query Statements and advanced prepared statement\nInspection/Review of quality deliverables such as Design Documents.\nWrote SQL Scripts, Stored procedures and SQL Loader to load reference data.   \nEnvironment: J2EE (Java Servlets, JSP, Struts), MVC Framework, Apache Tomcat, Oracle, JMS, SQL, HTML, JDBC, EJB\n\n\n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "bash",
        "cassandra",
        "ci/cd",
        "css",
        "docker",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "kubernetes",
        "lambda",
        "mongodb",
        "mysql",
        "oracle",
        "powershell",
        "python",
        "rds",
        "rest api",
        "s3",
        "scrum",
        "sql"
    ]
}