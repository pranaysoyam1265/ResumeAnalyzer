{
    "id": "resume_04f88dba-6db5-4096-99d2-b949f3a207c9",
    "metadata": {
        "filename": "avinash G.docx",
        "processed_date": "2025-09-24T08:45:39.394964+00:00"
    },
    "raw_text": "                                                                                              Avinash G\n Mobile: 913-730-0694                                                                                             Avinash87.java@gmail.com\n\nSUMMARY:       \n8+ Years of experience in analysis, design, Implementation, development, and Maintenance of various Dynamic/Static web applications using Java/J2EE technologies.\nExperience and working knowledge of Agile Methodology (Scrum, extreme programming and Unified process), Rational Unified Process and Test driven development (TDD).\nExtensive experience in designing professional UI web applications using front-end technologies like HTML/HTML5,  CSS/CSS3, JavaScript, XML, DHTML, XHTML, JQuery, AJAX, JSON, Angular JS, Backbone JS, Require JS, React JS and Bootstrap.\nProficient in using AJAX for implementing dynamic Web Pages where the content was fetched via API calls and updated the DOM (JSON Parsing).\nExperience integrating web services with web clients written using client-side MVC frameworks such as Angular JS, EXT JS,  Ember JS and Backbone JS.\nExperience with server-side frameworks like Node JS, Express JS.\nExperience in DOM (Document Object Model) to use in interacting with objects in HTML, XHTML and XML documents.\nExperience with Node JS along mean stack applications using Mongo DB, Ext Js and Angular Js.\nUsed HTML Helper classes for rendering HTML controls, used JQuery, Ajax to GET & POST data.\nExperience in using ORM frameworks like Hibernate, IBATIS and JPA.\nApplication Development experience using Core JAVA, Multi-Threading, Exception Handling, Serialization, Externalization, Collections framework, Generics etc.\nExperience in building web applications using SPRING framework features like MVC (Model View Controller), AOP (Aspect Oriented Programming), DAO (Data Access Object), Spring Boot, Spring Security, Spring Batch.\nExpertise in spring framework, include Spring IOC/Core, Spring DAO support, Spring ORM, Spring AOP, Spring Security, Spring MVC and Spring Integration.\nExperience in using JERSY along with Spring Container to create server side restful applications.\nExperience in Web Service Technologies like JAXP, JAXB, SOAP, WSDL, UDDI, Restful, Apache Cxf, JMS and Service Oriented Architecture (SOA).\nExperienced in using Log4j and good expertise in application build tools like ANT, Gradle and Maven.\nExperience in using the integrated development environments like Eclipse, Rational Application Developer, IBM Web Sphere Studio Application Developer (WSAD) and IntelliJ for Java/J2EE development.\nHands on experience with an in-depth level of understanding in the strategy and practical implementation of AWS.\nDesigned highly accessible, fault tolerant and cost effective and fault systems using multiple EC2 instances, Auto Scaling, Elastic Load Balance and AMIs.\nProficient in TDD (Test Driven Development) by writing test cases using Karma, Jasmine.\nExperience in database development using My SQL, PL/SQL , Oracle, DB2, No SQL and SQL Server environments.\nHave knowledge on Dynamo DB, mostly in Cloud environment. \nGood experience on Mongo DB scaling across data centers and/or in-depth understanding of Mongo DB HA strategies, including replica sets.\nIn depth knowledge of Cassandra and hands on experience with installing, configuring and monitoring Data Stax Enterprise cluster. \nHave worked on Backup and Recovery on Oracle, MySQL, PostgreSQL databases. I have experience in setting up automated scripts to run the backup.\nExperience in writing complex SQL Queries, Stored Procedures, Triggers, Cursors and Functions\nWorked on different Application Servers like Web Logic, Web Sphere, JBOSS Server and Web Server like Tomcat.\nLed team through examining the use of Docker to improve the efficiency of development and scalability of data streams and containerized micro services \nExperienced in Rabbit MQ, JMS and IBM MQ.\nGood experience on Design Patterns (J2EE) like Singleton, Factory Method, DAO, Session Facade, Front Controller, Service Locator and Delegate Pattern.\nHands on experience in developing Selenium IDE/ Web driver/RC/Grid scripts using Java, JavaScript, Ant/ Maven build tools.\nDeveloped Applications using Rule Engines, Drools.\nExperienced in UNIX Shell Scripting.\nExperience in using Grunt and Gulp for build process.\nExperienced in unit testing using JUnit and Mockito. \nExperience in using Bower, NPM.\nExperience in using JIRA how to track, plan and analyze.\nWorked on continuous integration using Jenkins/Hudson\nExperience in using caching frameworks like Redis\nExperience in using version control tools like GIT, CVS and Clear Case\nEfficient team member with excellent work/time management skills, communications and interpersonal \nskills and ability to work under strict deadlines.\n\n\nTECHNICAL SKILLS:\t\n\n\nEDUCATION:\nDegree: Bachelor of Technology, Electronics and Communication Engineering, Jawaharlal Nehru Technological University, Kakinada, India.   \n\nPROFESSIONAL EXPERIENCE:\n\nClient: State Government of New York, Albany, New York                                             Nov 2015- Till Date\nTitle: Sr. Java/UI developer\nDescription: : eClaims is the New York State Workers' Compensation Board's implementation of an electronic claim reporting standard for reports of injury filings. The WCB has adopted a national standard for claims reporting from the International Association of Industrial Accident Boards and Commissions the standard uses Electronic Data Interchange, commonly known as EDI, so that data can be transmitted electronically between the WCB and its EDI Trading Partners quickly, efficiently, and cost-effectively.\nResponsibilities:\nResponsible for the analysis, documenting the requirements and architecting the application based on J2EE standards. \nDesigned dynamic and browser compatible pages using HTML5, DHTML, CSS3, BOOTSTRAP and JavaScript.\nUsed JavaScript libraries to create slider and page-turning animations on calendar widgets.\nInvolved in developing web pages using Angular JS Framework and familiar with various Angular JS directives and services.\nUsed Angular JS as frameworks to create single page applications (SPA) which can bind data to specific views and synchronize data with server using Sass, Less, Bootstrap, Angular JS.\nResponsible for Web UI development in JavaScript using JQuery, AngularJS and AJAX.\nResponsible for secure batch data flow to downstream systems using Middleware Java technologies.\nDeveloped Mean Stack from scratch including Mongo DB server (Mongoose Connector) setup and Express JS server development.\nDeveloped drag and drop document editing using React Js.\nDeveloped the JQuery callback functions to implement asynchronous communication using AJAX.\nUsed the Java Collections API extensively in the application as security protection for XML, SOAP, REST and JSON to make a secure Web Deployment.\nBuilt backend REST API with Node JS, Express JS and also Implemented modules into Node JS to integrate with designs and requirement.\nGUI design and development using Java Swing, JFC Used for open source web testing.\nImplemented different Design patterns like DAO, Singleton Pattern and MVC architectural design pattern of Spring framework.\nWorked on the REST Web Services and used Spring Framework and developed the Spring Features like Spring Core, Spring IOC, Spring AOP, Spring Data Access, Spring web test, Spring MVC, Spring DAO, Spring Boot, Spring Batch, Spring Security, Spring Integration.\nBuilding RESTful services using Micro-services architecture with tools such as Spring-boot.\nDeveloping Intranet Web Application using J2EE architecture, using JSP to design the user interfaces and Hibernate for database connectivity.\nDevelopment of Hibernate objects for data fetching for batch and front-end processing.\nDesigned and developed the new features in the existing application to meet the customer's satisfaction.\nUsed Hibernate, object relational-mapping (ORM) solution, technique of mapping data representation from MVC model to Oracle Relational data model with SQL-based scheme.\nDesigned and developed the user interface screens, data base design changes and changes to user access modules.\nResponsible for implementation of java integration components for JBPM and DROOLs.\nDefined a message store architecture necessary to support drools rule engine input processing, scalability and recovery.\nInvolved in writing Oracle PL/SQL Stored procedures, triggers and views.\nImplementing BPM processes in existing system using both Synchronous and Asynchronous Web Services.\nLeveraged AWS cloud services such as EC2; auto-scaling; and VPC (Virtual Private Cloud) to build secure, highly scalable and flexible systems. \nAWS is used to coordinate and manage the delivery of messages to the subscribers. Client side validations and server side validations are done according to the business needs.\nExtensively used core java concepts like collection frame work, multi threading, OOPS and Exception Handling.\nManaged the dependency packages by NPM/Bower.\nWrote JUNIT test cases for web servers.\nWritten test cases and done Unit testing execution with JASMINE and KARMA.\nInvolved in CICD process using GIT, Nexus, Jenkins job creation, Maven build, Create Docker image and deployment in AWS environment.\n Converted our staging and Production environment from a handful AMI's to a single bare metal host running Docker.\nInvolved with Sprint Planning, Sprint grooming, Allocation of User Stories using Jira.\nUsed Log4J API for logging and debugging.\nEnvironment: Spring Core, Spring IOC, Spring MVC , JavaScript, JQuery, JSON, Spring DAO , Spring Boot , Spring Batch, Spring Security, Spring Integration, Spring-Hibernate integration framework, JSP, Oracle, PL/SQL, XML, AWS (EC2, VPC), Spring web flow, Drools, Maven,  JUnit, REST web service, HTML, CSS, SASS, AJAX, Jira, Angular JS, NPM/BOWER.\n                                               \nClient: Broadcom, Sunnyvale, California                                                                        May 2014 - Oct 2015\nTitle: Sr. Java/UI developer\nDescription: Broadcom Limited is a diversified global semiconductor leader built on 50 years of innovation, collaboration and engineering excellence. With roots based in the rich technical heritage of technology powerhouses AT&T/Bell Labs, Lucent and Hewlett-Packard/Agilent, Broadcom focuses on technologies that connect our world.\nResponsibilities:\nAs a Senior J2EE Developer assisted my team in developing two different  Web-based applications\nDesigned and developed the application using AGILE-SCRUM methodology. \nUsed HTML, JavaScript, Angular JS, JQuery, AJAX, CSS, and Bootstrap as data and presentation.\nDeveloping & Customizing UI JavaScript Plug-in using JQuery and JSON.\nCreated Mock-up designs and developed various functionalities with JavaScript and JQuery.\nDeveloped Model pop-ups with Angular JS for responsive web design on mobile devices.\nWrote Rest services to feed data to an application with AngularJS   framework.\n Developed a core component of Analytics with Node JS, Backbone JS.\nDeveloped user interface using JSP with JavaBeans, JSTL and Custom Tag Libraries, Javascript, CSS, JQuery, Node JS, HTML, SASS and Ajax to speed the application.\nUsed Web Services using SOAP, WSDL, UDDI and JAX-WS programming model.\nInvolved in implementation of enterprise integration with Web Services and Legacy Systems using SOAP and REST (Using Axis and Jersey frameworks).\nDesigned and developed Micro-Services using (MEAN Stack) node.js, Mongo DB.\nDeveloped web services using SOAP, WSDL and Apache Axis, which helped communicating through different modules of the application.\nInvolved in creating Restful web services using JAX-RS and JERSY tool.\nInvolved in J2EE Design Patterns such as Data Transfer Object (DTO), DAO, Value Object and Template.\nPrimarily focused on the spring components such as Spring MVC, Dispatcher Servlets, Controllers, Model and View Objects, View Resolver.\nUsed Spring IOC, AOP, Spring Batch modules to integrate with the application.\nGenerated DAO’s to map with database tables using Hibernate. \n Developed a multi-user web application using JSP, Servlet, JDBC, Spring and Hibernate framework to provide the needed functionality.\nAnalyze, debug and fix issues related to thread locking, clustering, network connections, Swing client performance on customer's production environment \nDesigned Interactive GUIs using Java Applets and Swing/JCF\nDeveloped Spring Beans and configured Spring using applicationContext.xml.\nDeveloping the web application using Core Java concepts like Collections, OO concepts, Exception handling for developing application modules\nAssisted Database Developers using PL/SQL for managing data associated with the tables in Oracle.\nManaged and maintained No SQL (Cassandra) databases in production domain.\nUses Second Level Cache to enhance performance and Proper Memory Management.\nDeveloped application using JMS for sending and receiving Point-to-Point JMS Queue messages.\nUsed Apache CXF as the Web Services framework to implement the REST APIs involved.\nSetup replication clusters with multiple nodes for MySQL and PostgresSQL.\nDatabase development required creation of new tables, SQL stored procedures, functions, views, indexes and constraints, triggers and required SQL tuning to reduce the response time in the application.\nInvolved in designing different BPM patterns in order to address the complex business scenarios are part of solution and technical design.\nBuilt application to track unique users using Redis accross various data groupings.\nCreated task handlers to expose the BPM processes to REST service calls in the process designer itself and integrated them with spring.\nUsed Maven for generating system builds and Jenkins for continuous integration.\nWhenever a new github branch gets started, Jenkins, our Continuous Integration server, automatically attempts to build a new Docker container from it, The Docker container leverages Linux containers. \nCreated WAR files from Maven and deployed them on Tomcat.\nWorked on Drools Rules Engine and Expectation Rule Engine for writing Business Rule Validation\nWrote unit-testing codes using JUnit, resolved bugs and other defects using Firebug.\nWrote JUNIT Test cases for Spring Controllers and Web Service Clients in Service Layer using Junit.\nUsed Log 4j for debugging, testing and maintaining the system state.\nUsing JIRA to manage the issues/project work flow.\n\nEnvironment: Spring, Hibernate, Web services, JAX-RS, JUNIT, SOAP, UI, SQL, JSP, JDBC, JSON, JavaScript, JQuery, AJAX, Html, CSS, Angular JS, PL/SQL, PostgressSql Maven, log4j, Jenkins, JIRA, JMS, APACHE AXIS, Apache CXF, GIT, UNIX, AGILE-SCRUM, Oracle, Tomcat, Drools.\n\n\nClient: NJM Insurance Group, Trenton, NJ.                               \t\t                    Nov 2013 - Apr 2014\nTitle: Sr. JAVA/J2EE Developer\nDescription: NJM was originally implemented in a mainframe and this project is responsible for converting from Mainframe to J2EE. The technologies used are Process Server for managing the business process and J2EE technologies for implementing the Application itself. \nResponsibilities:\nActively involved in defining and designing the tiers of the applications and implementation using J2EE best design practices.\nFollowed Agile Methodology in analyze, define, and document the application, which will support functional and business requirements. Coordinate these efforts with Functional Architects.\nDeveloped UI pages with JSP, Spring MVC, HTML5, CSS3, JavaScript, JQuery, and used Boot Strap for creating Responsive Web pages.\nImplemented scripting with AJAX and XML to dynamically refresh the page contents.\nUsed JQuery to navigate to different pages of the application using DOM elements, and to create AJAX pages.\nUsed AJAX and JSON to process asynchronous actions between front and back end.\nActively involving in creating JavaScript function for user input validation and verification.\nCoded JavaScript for page functionality and Pop up Screens.\nUsed Web Services using SOAP, WSDL, UDDI and JAX-WS programming model.\nWell versed with core Java concepts like Collections, Swing, Serialization and Servlets & JSP.\nDeveloped Micro-Service to provide RESTful API utilizing Spring Boot with Spring MVC.\nImplemented Spring MVC Architecture, Servlet targeting request module and flow of control generating JSP in Presentation layer.\nUsed Spring IOC, AOP modules to integrate with the application.\nDeveloped and maintained elaborate service based architecture utilizing open source technologies like Hibernate ORM and Spring MVC Framework.\nHandled rule engine with JBoss Drools for developing business rules of the applications.\nUsed various core java concepts such as Multi-Threading, Exception Handling, Collection API's to implement various features and enhancements.\nDeveloped DAO (Data Access Object) classes in order to access data from database.\nDeveloped ORM scripts for Hibernate to synchronize Domain Model and Relational Model.\nDeveloped complex Web Services and tailored JAX-RS API to suit the requirement.\nInvolved in integration of claimant information with IBM MQ Resource Adapter for message queuing. \nInvolved in writing the Java utility classes to convert MQ based control claimant information\nInstalled and configured JBOSS server with My SQL persistence. Extracted rules data from the database and decision tables.\nEmployed Redis to host centralized job queue for parallel servers to pull and distribute jobs among cluster of workers\nImplemented RDMS and MySQL as resource tier and developed MYSQL Stored procedures, Functions.\nWrote unit-testing codes using JUnit.\nWriting Test cases using Mockito frameworks.\nUsed Maven for generating system builds and Jenkins for continuous integration.\nEnvironment: J2EE, Hibernate, Spring MVC Framework, UML, Servlet, JSP, JSF, AJAX, DHTML, Java Script, JQuery, JSON,  EJB (Session and Message Driven Beans), Eclipse , IBM MQ, My SQL, JBoss, Drools, JUnit, Mockito, Maven, Web services, DAO, Web Sphere.\n\n\n\nClient: Uhlig LLC, Overland Park, KS.                \t\t                                          Nov 2012- Oct 2013\nTitle: UI Developer\nDescription: Uhlig LLC and its subsidiaries have played a leading role in the growth of variable-content publishing, consistently redefining the traditional boundaries between print and electronic media. Today, its products range from rich, full-color periodicals to complex legal and financial documents, each of which is custom-produced for each of its readers using the company’s powerful online editing and content-management tools.\nResponsibilities:\nInteracting with the system analysts, business users for design & requirement clarifications. \nDevelopment of UI models using HTML, JSP, JavaScript, AJAX and CSS.\nImplemented the presentation layer using JSP, JSP Tag Libraries (JSTL), HTML, CSS and JQuery. Also, Performed validations using validation framework for data inputs. \nUsed AJAX to handle the user requests asynchronously and to have faster responses from the server by directly connecting to the server.\nUsed RESTful services for publishing Web Service interfaces. \nInvolved in writing XML validation classes using Struts validation framework.\nWorked on the JAVA Collections API for handling the data objects between the business layers and the front end.\nDeveloped the application using Struts to develop presentation tier and business layer. \nUsed Hibernate extensively to have Database access mechanism with complex queries through Hibernate Query, Criteria interfaces. \nExtensively used SQL in constructing views, indexes, stored procedures, triggers, cursors, functions, relational database models. \nDeveloped Applications using Rule Engines, Drools. Explored Drools modules such as Drools Expert, and Drools Flow, which adds event processing capabilities to the platform.\nUsed Singleton, Service Locator, Data Value Objects, and Data Access Objects Design Patterns in interacting between presentation, service and database components. \nUsed WebSphere application server for deploying the application \nUsed IBM MQ Series for messaging services for the users who want to become as registered users. \nWrote various types of Business rules in the .drl i.e., drools file using Drools rule engine for business decision making.\nInvolved in writing JUnit Test Cases and ANT Build Script. \nSVN version control system has been used to check-in and check-out the developed artifacts.\nEnvironment: Java, J2EE Design Patterns, XML, CSS3, Web Sphere, Struts, Web Services, JSP, JSTL, EJB, Servlet, AJAX, Hibernate, RAD , IBM MQ Series, Rest, SQL Server, Drools, Unix, UML.\n\nClient: ICICI Bank, Hyderabad, India                                                      \t\t   Apr 2010 - Oct 2012\nTitle: Java Developer\nDescription: ICICI Bank is an Indian multinational banking and financial services company. It offers a wide range of banking products and financial services for corporate and retail customers through a variety of delivery channels and specialized subsidiaries in the areas of investment banking, life, non-life insurance, venture capital and asset management. Some other information like account payee details are maintained in the online banking database.\n\nResponsibilities:\nDeveloped the front end browser based screens with JAVA and J2EE technologies like JSP, Servlets, JavaScript, HTML and CSS form presentation layer. \nDeveloped web application using JSP, Servlet, Struts and integrating the application using Java Messaging Service API and Enterprise Java Bean to integrate with the backend systems using XML. \nProcessing XML files using SAX parsers and transformations using XSLT. \nDeveloped JSP's with Struts custom tags and implemented JavaScript validation of data\nUsed JDBC to connect to the oracle database and JNDI to lookup administered objects.\nDeveloped Struts forms and actions for validation of user request data and application functionality.\nWrote the MDB (Message Driven Bean) stuff to perform capture the response messages from the backend. \nUsed business delegate to call EJB from struts action class.\nDesigned and developed numerous Session Beans and deployed on WebLogic Application web Server.\nImplemented DAO layer using IBATIS and wrote queries for persisting demand Core Banking related information from the backend system using Query tool (Oracle). \nDeveloped the Login screen so that only authorized and authenticated administrators can only access the application.\nDeveloped Authentication and Authorization modules where authorized persons can only access the inventory related operations.\nDone automaton for build process using ANT Build scripts and handled all the releases and delivery to the client.\nEnvironment: EJB, Servlet, JavaScript, Struts, Java, Web logic, XML, IBATIS, JSP, JBOSS, ANT, Eclipse, Oracle.\n\nClient:  Infotech, India.                                                                                                  August 2008 – Mar 2010\nTitle: Java Developer\nDescription: Infotech Enterprises focus includes aerospace, defense, rail transportation, off-highway & industrial, power generation, mining, oil & gas, communications, utilities, geospatial, semiconductor and medical technology. We align closely with the business needs, goals, culture, and core values of our clients. This reflects in the deep, long-standing relationships we have developed and sustained with some of the leading names in these industries.\nResponsibilities:\t\nAnalyzed business requirements, participated in technical design, development and testing of various modules assigned. \nWorked on Design, UI, HTML, CSS, JQuery, accessibility, and optimization. \nTranslated designs and style guides into functional user interfaces, ensuring cross browser compatibility, performance and robustness. \nConverted wireframes and mockups for new web interface for a network analysis virtual appliance. \nWorked with full UI control of HTML/CSS, maintaining code and cleanliness. \nCreated some prototype to implement some of the latest features of HTML and CSS. \nDeveloped presentation tier as HTML, JSPs using Struts Framework. \nExtensively worked with making calls to APIs to fetch the data from the backend as JSON response and parse it on the UI for DOM/CSS Manipulation.\nDeveloped JSPs, Servlets, and EJBs in the Struts Framework to effectively handle the workflow of the application\nDeveloped the middle tier using EJBs Stateless Session Bean, Java Servlets. \nEntity Beans used for accessing data from the MySQL database. \nImplemented and Updating the database Tables, Packages, procedures, functions views \nWorked on Hibernate for data persistence.\nImproved page load performance by analyzing content and making adjustments to the code (by following optimization standards). \nWorked with complete redesigns of a daily events website and focused on improving readability, utility, and overall UX. \nWorked closely with QA team to understand the reported defects and fix them.\nEnvironment: Java, Hibernate, Struts, EJBs, JSP, Servlet, Junit, ANT, MySQL, log4j, JSON, HTML, JavaScript, JQuery.\n\n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "cassandra",
        "collaboration",
        "communication",
        "css",
        "docker",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "mysql",
        "node.js",
        "oracle",
        "postgresql",
        "react",
        "redis",
        "rest api",
        "scrum",
        "sql"
    ]
}