{
    "id": "resume_d1ce34a8-2dcf-4545-ad37-c39f4dd3b537",
    "metadata": {
        "filename": "Naveen.S_Resume.docx",
        "processed_date": "2025-09-24T08:45:45.128236+00:00"
    },
    "raw_text": " NAVEEN\nnaveen.snr87@gmail.com\n(347)-921-1618\n\nOBJECTIVE\nLooking to contribute design, analysis, development, management, documentation and interpersonal skills to an organization that’s growing, expanding and using leading-edge; Industry-proven technologies. The fundamental aim is to gain a dynamic and challenging role in the areas of Software Engineering in big projects that will offer the best opportunity for further development of my abilities, skills and knowledge in an established substantial firm with long term career growth possibilities. I strongly believe that I will highly contribute to the company development with my individual ability of organized, creative, and self-motivated in multi-tasking and working individually or as a member of the team.\n\nPROFESSIONAL SUMMARY\nHaving 8 years of Extensive IT experience in all phases of Software Development Life Cycle (SDLC) including Analysis, design, implementation, integration, testing and maintenance of applications using JAVA/J2EE technologies. \nWell versed with complete Software Development Life Cycle (SDLC) using various methodologies like Agile Methodology, Waterfall and Test-Driven Development.\nExperience with design patterns like Singleton, Factory Pattern, Prototype, Business Delegate, Session Facade, Service locator, Observer, Decorator, Front Controller and DAO pattern.\nExpertise in developing UI using JSP, HTML5, CSS3, Java Script, Bootstrap, jQuery, Ajax, Angular JS and Node.js.\nHands on experience with different Spring framework modules like Spring Core, Spring AOP, Spring MVC, s, Spring Security, Spring Data and Spring Boot. \nExperience with Java 8 features such as lambda expressions, Streams and Parallel Operations.\nExperience in developing the application with Service Oriented Architecture (SOA) and Micro Services Architecture and Test-Driven Development.\nHands-on experience on various AWS Cloud services like EC2, optRoute53, EBS, Auto Scaling, VPC, Cloud      Formation, S3, RDS, Amazon Elastic Load Balancing, IAM, Cloud Watch and other services of the AWS infrastructure like Dynamo DB, SQS and EMR focusing on high-availability, fault tolerance and auto-scaling.\nHaving Good experience in developing and migrating existing application into cloud-based platforms like Amazon Web Services (AWS) and Pivotal Cloud Foundry. \nExpert in Core Java with strong understanding of Garbage Collector, Collections, Multithreading, Event Handling, Exception Handling and Generics.\nDeveloped Web-based enterprise applications using Java/J2EE, Core Java, Servlets, JDBC, Hibernate, Web Services (SOAP and REST) and MVC Framework (Struts, Spring MVC).\nStrong experience in developing and consuming SOAP and RESTful based Web Services.\nExpertise in XML technologies like DTD, XSD, XSLT and various parsers like DOM, SAX and JAXB.  \nExperience using persistence framework like Hibernate, JPA for mapping java classes with Database and using HQL (Hibernate Query Language).\nExtensive knowledge in developing java persistence API (JPA) layer using Mybatis.\nExperienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using Active MQ, Rabbit MQ as a message queue.\nExperience in developing XML based Web Services (SOAP/UDDI/WSDL) using Top Down and Bottom Up approach and REST based services with JAX-RS, Jersey and Spring Integration.\nStrong experience in database design using PL/SQL to write tables, Stored Procedures, Functions, Triggers, Indexers and proficiency in writing complex queries to retrieve data.\nExpertise in using JDBC and Hibernate for connection and access to databases.\nGood experience with Relational databases like Oracle, My SQL, MS SQL Server, IBM DB2 and No SQL databases like Mongo DB, Cassandra and Dynamo DB.\nExperience with application servers like Web Logic, JBOSS, Apache Tomcat and IBM Web Sphere.\nExpertise in using various IDE tools like Spring Tool Suite, RAD, Eclipse and IntelliJ.\nProficient in Continuous Integration and Continuous Deployment tools like Jenkins.\nExperience with JUnit and Mockito in developing test cases and Log4J in determining application functionality.\nHaving Experience on UNIX, LINUX, Python Shell Scripting and Deployment of Applications in Server.\nExperience working with version control tools like Git Hub, Subversion(SVN) and CVS. \nExperience with build automation tools like Gradle, ANT and Maven for builds and deployments to different environments.\nStrong interpersonal and communication skills and self-motivated individual showing ability to learn and use new technologies and frameworks in considerably less time.\n\nTechnical Skills:\n\nPROFESSIONAL EXPERIENCE\n\nClient: Deutsche Bank\t\t                                                                                                            July’16 – Till Date\nLocation: New York\nRole: Sr. Java Full Stack Developer\n\nDescription: Deutsche bank spanned across the Europe, Asia and Middle East as well, which mainly involves in Global Transaction Banking, Corporate banking & Securities and Wealth management. Loan application of our project is an n tier based client/server comprehensive solution that makes it possible to receive process and close loans from a broker, over Internet, or at the bank branch. The Loan system resides on a robust database engine, providing clients with proven scalability that will meet the needs of the largest lenders. This centralized database aggregates loan information for all lines of business and sources of origination. \n\nResponsibilities: \nInvolved in various phases of Software Development Life Cycle (SDLC) such as requirements gathering, modeling, analysis, design, development and testing Followed Agile methodology. \nInteracted with the client, provide/take feedback on the features, suggest implement optimal solutions and tailored application to customer needs.\nDeveloped applications using Application Lifecycle Management to deliver reliable applications \nUtilized Java 8 features like Lambda expressions for collection evaluation and comparing the data, Stream API for Bulk data operations on Collections which would increase the performance of the Application, Parallel operations on collections for effective sorting mechanisms and to change the sequential stream flow of threads while session establishment.\nDeveloped UI using HTML5, CSS3, JavaScript, Bootstrap, jQuery, Angular 2, and Node JS.\nInvolved in Java code, which generated XML document, which in turn used XSLT to translate the content into HTML to present to GUI.\nDesigned and implemented application using Spring Boot, Spring MVC, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions and Spring JDBC.\nImplemented the authentication and authorization of the application using Spring Security and Oauth2. \nImplemented Spring IOC to make code loosely coupled and for Dependency Injection and Spring AOP for logging purposes.\n Used Thymeleaf as server side template engine along with spring MVC and spring data repositories.\nDesigned and developed Micro Services business components and RESTful service endpoints using Spring boot.\nImplemented Micro Service Architecture with Spring Boot based RESTful services and consumed SOAP based Web Services. \nImplemented RESTful and SOAP based web services using for JAX-RS and JAX-WS respectively.\nImplemented RESTful Web Services to retrieve data from client side using Micro Services Architecture.\nExperience in creating RESTful web services using Jersey, Spring framework and JAX-RS.\nImplemented Multithreading, Concurrency, Exception Handling and Collections whenever necessary.\nPrepared calls through Hibernate and Spring JDBC for Interacting with the Database.\nExperience in Hibernate which includes integrating legacy databases, writing custom CRUD statements, integrating stored procedures and functions and also performed polymorphic associations.\nExperienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances.\nExperienced working with database setup and maintenance on AWS EC2.\nCurrently working on Docker container implementation for the Enterprise build system.\nWorked Docker container management along with volumes, container based DB and services, Docker Arti factory configuration and setup.\nIngested Data in to OLMS repository which come from the upstream as a source information.\nExperience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors and indexes in Oracle DB.\nWorked on Mongo DB and wrote code which finds, update, save and insert data to Mongo DB.\nPerformed data extraction and loading the JSON data with the server-side content in to the Mongo DB.\nConfigured JMS Server setup and DB Connection pool setup & deployed Returned items in Web Sphere Server.\nDeveloped JMS components to send messages from one application to other application internally using Active MQ.\nUsed Active MQ to communicate with controller and used service layer to implement the business logic.\nImplemented Batch jobs using Spring Batch created various item readers, item writers and item processors.\nInvolved in support for end to operations support for OSS/BSS (Business Support System) identify gaps, and propose solutions and manage issue resolution.\nValidations are done using SoapUI and Ready API testing tool framework in different environments. \nDeployed and tested the application on Web Sphere Application Server. \nDeveloped test cases for unit testing in the integration layer using Mockito framework.\nUsed UNIX shell scripts to search/modify files.\nSetup the Continuous Integration (CI) and Continuous Development(CD) process for the application using the Jenkins.\nUsed Jenkins for continuous integration with Maven and GitHub.\nWorked on Log4J to validate functionalities and JUnit for unit testing\nImplemented configured and customized JIRA issue tracking software with agile plug-in across all company functions.\nUsed GitHub to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts\nUsed Eclipse IDE tool for application development.\n\nEnvironment: Java 1.7 and 1.8, J2EE, HTML5, CSS3, Bootstrap, jQuery, Angular 2, JavaScript, Node JS, Spring IOC, Spring MVC, Spring Security, Spring Boot, Spring Batch, Spring Data, Thymeleaf,  Hibernate, Active MQ, RESTful, SOAP, Micro Service Architecture, AWS, EC2, Docker, Mongo DB, Oracle DB, CI/CD, Maven, Eclipse, Web Sphere Application Server, Mockito, JMS, UNIX, Jenkins, JIRA, log4j and GIT.\n\nClient: Biogen Idec\t\t\t                                                                                                  Dec’14 - July’16\nLocation: Cambridge, MA\nRole: Java Full Stack Developer\n\nDescription: Biogen Idec Inc. is a global biotechnology company based in Cambridge, Massachusetts, specializing in discovering, developing, and delivering therapies for the treatment of neurodegenerative, hematologic and autoimmune diseases to patients worldwide. Zinbryta (daclizumab) online portal for pharmacies and prescribers to distribute the drug for the treatment of adults with relapsing forms of Multiple Sclerosis (MS).\n\nResponsibilities:\nInvolved in all the phases of SDLC including Requirements Collection, Design & Analysis of the Customer Specifications, Development and Customization of the Application.\nDesigned front-end presentation logic using JSP, HTML5, CSS3 and Strut tags. \nUsed JavaScript, jQuery, AngularJS, and AJAX technologies for front end user input validations and Restful web service calls. \nUsed jQuery for front end validations. \nCreated a Single Page Application (SPA) using AngularJS as framework, to bind data with specific views and to synchronize data with server. \nSystem builds using Spring Model View Controller (MVC) architecture.\nImplemented pre-authentication framework (Spring Security) for authentication and authorization. \nUsed Spring framework including Spring core /IOC, Spring Web, Spring Security, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions.\nUsed a Micro service architecture, with Spring Boot-based services interacting through a combination of REST and MQ to deploy Identity micro services and Micro Components\nUsed Hibernate, ORM solution, technique of mapping data representation from MVC model to Oracle Relational data model with an SQL-based schema.\n Handed Java Multi-Threading part in back-end component, one thread will be running for each user.  \nWritten SQL Queries and stored procedures to interact with Oracle DB.\nRESTful web services using Jersey for JAX-RS implementation.\nDesigned, configured and deployed Amazon Web Services (AWS) for a multitude of applications utilizing the Amazon cloud formation.\nDeployed and Monitored Micro Services Using Pivotal Cloud Foundry, also Managed Domains and Routes with the Cloud Foundry \nConfigured Data Sources for the Oracle database system using IBM WebSphere. \nDeveloped JUnit test cases for elements, web beans, handlers and view helper classes.\nFocused on Test Driven Development thereby creating detailed JUnit tests for every single piece of functionality before actually writing the functionality. \nUsed SVN for version control tool and Spring Tool Suite (STS) for IDE.\nUsed Tortoise SVN to maintain the version of files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.\nImplementation of Restful services in Apache camel using rest component, event notifier, JSON.\nConfigured and customized logs using Log4J.\nActively participated in the daily SCRUM meetings to produce quality deliverables.\nPerformed the technical design reviews and code reviews. \nCoordinated with Business Analyst, Architecture and QA team to ensure the quality and success for each iteration tasks.\nDesign, develop and test of SOA services using SOA / Web Service / Oracle Fusion Middleware\nEnvironment: Java, J2EE, JavaScript, XML, Tortoise SVN, Spring MVC, JDBC, Maven, Apache Camel, JMS, JSP, HTML, AngularJS, AJAX, AWS, Spring, Spring Framework, Spring Boot, Spring Security, Hibernate, SOA, Soap, Restful, WSDL, JIRA, CSS, Log4J, JUnit, Linux, STS, Oracle, Agile Methodology.\nClient: John Deere Financials\t\t\t\t                                                               Oct’13 - Dec’14\nLocation: Des Moines, IOWA\nRole: Java Developer\n\nDescription: Customer Self Service application is used by all John Deere Financial customers where they can pay the loan and view the loan details. It will process direct payments for Installment, Lease and Revolving account customers. CSS has more than 450000 accounts. This Multi-language based application and handle English and French languages.\n\nResponsibilities:\nDeveloped applications according to a structured agile project management methodology\nUsed the light weight container of the Spring Framework to provide architectural flexibility for Inversion of controller (IOC)\nInvolved in developing User Interface (UI) with HTML5, CSS3, JavaScript, DOJO, jQuery, JSON and JSF.\nUsed JSF tags and Content Server tags for writing java, JSF code and rendering the assets\nUsed Spring Framework for Dependency Injection\nDeveloped the application framework using MVC architecture using JSF, spring and hibernate\nWorked in development of data abstraction layer using Hibernate ORM framework with spring support.\nDeveloped an XML based editor interface that allows users to easily enter data for the attribute.\nWorked in the development of Servlets, JSP'S, Spring Beans and POJOs\nDeveloped Web services using Apache Axis SOAP engine that would be exposed to external applications to retrieve data from e-Client servicing platform\nWorked in development of web services for business operations using SOAP, WSDL, JAX-WS, JDOM, XML, XSL and Apache CXF\nWorked in Data extractor development to retrieve report data from a centralized database using RPM SOAP web services\nConsumed Web Services as a gateway for the payment through the third-party\nExtremely used plain JavaScript and jQuery, JavaScript Library to do the client-side validations\nUsed Maven as build automation tool for deploying the project on Apache Tomcat Server.\nDeveloped MySQL stored procedures and triggers using SQL in order to calculate and update the tables to implement business logic\nWorked in Writing and executing the Unit Test cases using JUnit to test specific functionality in the code\nUsed JMS to establish message communication\nAdded AJAX calls using jQuery\nUsed Log4J to capture the log that includes runtime exceptions, monitored error logs and fixed the problems\nDeveloped and used Maven for compiling and building the applications.\nEnvironment: Java, JSP, XML, HTML, JavaScript, jQuery, CSS3, Servlets, Spring, Hibernate, SOAP Web Services, MySQL, SQL, JAXP, POJO, AJAX, Apache Tomcat Server, JSF, DOJO, JSON, AXIS, MAVEN, JUNIT, JMS, Log4j.\n\nClient: The E-Vault company\t\t\t\t                                                               Jan ’12 - July ‘13\nLocation: Salt Lake City, Utah\nRole: Java Developer\n      \n      Description: The E-Vault company (a subsidiary of Seagate) Sales representative get Sales Order Leads and they use the Salesforce application to enter the information into that system. They also Use a NetSuite Order Processing and Accounting system to process the orders, generate invoices, make entries in AP, AC, GL, etc. and work order, etc. They are transferring the Sales order leads manually enter the NetSuite application.   The team wants to capture the different types of Salesforce entered Order leads into orders into the NetSuite system.   The incoming data will be in JSON format that data will get new properties and the new JSON object will be the SQL database using REST based POST http action methods.\n        \nResponsibilities: \nDesigned use case diagrams, data flow diagrams, component diagram, class diagram, and sequence diagram for the given requirement. Also involved in the review meetings of the design architecture for the new requirement and enhancement, given review comments for the designs.\nImplemented GUI using HTML, JSP, CSS, TILES, AJAX, JSTL, Struts TagLibs and Portal Pages.\nUsed AJAX to dynamically load a portion of the page when it was not needed for reloading the entire page.\nUsing RIDC Interface get content details and Create Content through application.\nDeveloped custom Skeleton, custom Skin and custom Layouts.\nImplemented custom LAF files applied to portal.\nDesign & Development of page flows, Web logic Workshop.\nDeveloped several JSP pages and JSR 168 for displaying and processing Information.\nImplemented customization by using Dynamic Visitor Tools (DVT).\nUsed Java-J2EE patterns like Model View Controller, Data Transfer Objects, Singleton, and factory patterns,\nDeveloped and implemented Content Publish using Site Studio, Content Publisher.\nUsing RIDC Interface get content details and Create Content through application.\nImplemented Spring IOC Setter Method Injection and writing Spring Configuration XML file that contains declarations and another dependent object declaration.\nI have worked in DAO layer of the application, written java code to access hibernate session factory using spring hibernate template, Hibernate Search Quires and written search, persistence, deletion for the persistence objects.\nDeveloped Web Services client and Service used SOAP Protocol for sending request and get response. \nCreated JUnit test cases for unit testing application.\nImplemented application logging feature using log4j.\n\nEnvironment: Java/J2EE, JSP, JSTL, Ajax, Spring, Struts, Ajax, Hibernate, JNDI, Web logic workshop, XML, XSLT, Web Services, UDDI, WSDL, Log4j, Oracle, Oracle Web logic Server, UCM, SVN, LDAP, Windows XP, UNIX, UML.\nClient: Techno soft Solutions\t\t                                                                                              Nov’10 - Dec ‘11\nLocation: New Delhi, India \nRole: Java Developer\t\t\t\t\t \n\nDescription: This project was designed to build a Common Access Platform for customers and insurance agents using Internet to interact with the system from any part and allow the customers to buy insurance online. Also used by the HR department to manage the vast information generated due to massive business operations. Main objective is to help in tracking HR related issues, optimize and increase the productivity.\n\nResponsibilities:\nDeveloped the application based on MVC architecture.\nWorked with Struts as a unified MVC framework and developed Tag Libraries.\nUsed Struts framework in UI designing and validations \nCaptured all the functional and technical requirements of the Supply Chain Management System.\nWas involved in the preparation of the software requirements and design document (SRS & SDS)\nAdapted Java Design Patterns DAO, Value Objects and Session Facade to develop business components. \nDeveloped class diagrams and Sequence diagrams.\nDefined the detailed application and database design.\nDevelopment of GUI for HTML and JSP Versions. Java Servlets were used as the common gateway interface between the client and server. \nJava Beans were used to handle business logic as a Model and Servlets to control the flow of application as Controller.\nDeveloped the application using Struts Framework with respect to Model View Controller architecture.\nInvolved in collecting requirements from Business Users and Data Modeling and designing and developing Tools using: J2EE, Java, Servlets, EJB, and JSP. \nFront end validations are written using JavaScript.\nUsed SQL Loader to loading data in text file into Oracle table, and updated relative information in Oracle.\nPerformed Unit Testing using JUnit.\nProvided a User Manual and User Training on the new system to ease them into the new system.\n\nEnvironment:  JDK, JEE, HTML, CSS, JDBC, struts, JavaScript, JSP, EJB, Java Scripting, CSS, CVS, WebSphere, oracle, Linux.\nClient: SLK Software\t\t\t\t\t\t\t\t\t      July’09 – Nov’10\nLocation:  Bangalore, India\nRole: Java Developer\n\nDescription: SLK Software Services is an offshore development company providing end-to-end solutions using its proven methodologies based on SEI CMM Level 4 Guidelines. SLK Billing Care is the Web-based front office application used by customer service representatives to create and maintain customer accounts, manage their services, and handle customer issues. SLK Billing care is designed as the front-end application to customer related activities supported by SLK charging and other billing products.\n\nResponsibilities:\nDeveloped Action Classes, which acts as the controller in Struts framework.\nDeveloped web application using Struts 2.X, JSP, Servlets, Java beans that uses MVC design pattern\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP\nWrote JavaScript for client-side validation.\nUsed Eclipse as IDE tool for creating Servlets, JSP, and XML.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nUsed SQL queries extensively to talk to DB2 database\nMonitored the logs using Log4J and fixed the problem\nThe application was deployed on the Tomcat.\nInvolved in build and deploying the application using ANT  \nUsed CVS as version control system \nWorked on bug fixing and Production Support\n\nEnvironment: Java, JDBC, Struts, JavaScript, Html, CSS, JSP, Servlets, Tomcat, DB2, Eclipse IDE, CVS, ANT, Log4J. \n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "cassandra",
        "ci/cd",
        "communication",
        "css",
        "docker",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "lambda",
        "mysql",
        "node.js",
        "oracle",
        "project management",
        "python",
        "rds",
        "s3",
        "scrum",
        "sql"
    ]
}