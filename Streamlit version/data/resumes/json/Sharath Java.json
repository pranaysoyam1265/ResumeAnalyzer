{
    "id": "resume_31134ec8-3aa3-4353-a58b-f035221fce49",
    "metadata": {
        "filename": "Sharath Java.docx",
        "processed_date": "2025-09-24T08:45:53.761897+00:00"
    },
    "raw_text": "Sharath\nJava Full Stack Developer\nsharath1323@gmail.com\n+1-2245728262\n\n\n\nSUMMARY:\n\nJava Full Stack developer with 7 years of experience in full software development life cycle including requirement analysis, design, coding, testing, debugging, maintenance and Big Data.\nExtensive experience in developing Web interfaces using HTML5, CSS3, Bootstrap, SASS, LESS, JavaScript, jQuery, Angular-JS, spring, spring REST and Backbone-JS. \nInvolved in Requirements gathering, Analysis, Design, Development and Testing of application developed using AGILE SCRUM methodology. \nDocumentation of the workflow and development cycle from start to finish including Design specification, report generation and interaction with group and vendor services.\nExtensive knowledge in developing single page applications (SPAs) using JavaScript frameworks like AngularJS, ReactJS and experienced in performing Responsive web design using Bootstrap and CSS3 Media queries.\nCommand in ReactJS for creating interactive UI's using One-way data flow, Virtual DOM, JSX, React Native concepts. \nExperienced in build tools like Ant, Maven, Gradle and using them with continuous integration tools like Jenkins to create and publish application artifacts. \nExperienced in performing automation using Selenium, Java and performing Behavioral driven testing using Cucumber and Jbehive. \nStrong work experience on Hadoop ecosystem components like Hive, HBase, Spark, Kafka, Sqoop.\nExperienced in installation, usage and management on AWS (Amazon Web Services), Jenkins and GIT for application servers.\nStrong knowledge of UNIX and basic Shell scripting. \nCreated POC's using Node-JS, Mongo-db, Express-JS and Body-Parser to create REST services. \nGood understanding of NoSQL Database and hands on work experience in writing application on No SQL database which is MongoDB. \nExperience in developing Stored Procedures, functions, triggers using Oracle and comfortable using databases SQL Server, node, MySQL and MS Access. \nProvided post-production application support, and perform project/task estimation throughout the duration of the project. \n                                                                            TECHNICAL SKILLS: \n\n\nLanguages:  C, C++, Java, SQL, PL/SQL. \nTools and Framework: Struts, Spring, Hibernate, Spring MVC, Spring Web Flow, Spring IOC, Spring AOP, Spring Security, JSF, JUnit, SOAP UI, JReport, Rational Rose, IBM MQ, RabbitMQ, Spring Boot. \n Build Tools: ANT, Vagrant, Maven, Gradle, Docker, Jenkins. \nVersion Control: Git,Tortoise SVN, CVS.\nWeb Technologies: HTML5, CSS3, JavaScript, JQuery, Bootstrap, JSON Restful, Angular.2, React.JS, AJAX, Node.JS. \nJ2SE/J2EE Technologies: Java, J2EE, JDBC, JMS, Java Beans, JSTL, Jakarta Struts, JSF, EJB, Spring, Hibernate. \nMethodologies: Agile, Test Driven Development, Waterfall. \nDatabases: Oracle, SQL-Server, MySQL server, MS SQL, MongoDB, NoSQL, Cassandra, HBase, Hive. \nWeb/Application Servers: Apache Tomcat, IBM Web Sphere, Web logic Application server, JBOSS, Camel. \nXML Technologies: XML, XSL, DOM, SAX, DTD, XQuery, XSD and XSLT. \nIDE / Tools: Eclipse, IntelliJ, Spring Tool Suite (STS), RAD, Adobe Dreamweaver. \nTesting Tools / Others: JUnit, Mockito, Soap UI, SLF4J, Log4j and JIRA. \nPlatforms: Windows, Linux and UNIX. \nWeb Services: SOAP, Restful, Micro services, JAX-RPC, WSDL.\nBig Data Technologies & Tools: Hadoop, Hive, MapReduce, Sqoop, HBASE, Impala, Kafka, Spark, Sqoop, Splunk.\nCloud Technologies:  AWS EC2, S3, RDS, MS Azure.\n                                                                                 Career Overview \nFULL STACK JAVA DEVELOPER                                                                                                          \nKogentix, Chicago, IL                                                                                                              January 2017 to Present\nResponsible for gathering and understanding the requirements and interacting with clients \nImplemented various J2EE patterns like Singleton Pattern, Factory Pattern, Abstract Factory pattern, Data Access Objects, Adaptor(Wrapper) Pattern.\nProject focus is on ingesting large sets of business related structured data into hdfs environment,perform fraud detection and reporting.\nInvolved in development of common data ingestion platform for various systems.\nIndividual contributor for developing Spring XD module job for csv data ingestion.\nHandling L3 production support responsibilities for various source systems apart from regular development tasks. Had source ownership of many source systems.\nInvolved in transformation and validation of data sets using pig and unix.\nMember of a team which is responsible for data import from MySQL,Oracle to Hive using sqoop.\nAcquire data from relational databases using Sqoop import and load the data to hive warehouse.\nPerform basic cleansing operations on the tables in hive.\nUtilized RabbitMQ for asynchronous messaging. \nInvolved in writing POJO classes and hbm mapping files to map database tables with Java objects \nInvolved in writing XML configuration file for Hibernate-Database connectivity\nWorked on application layer protocols like FTP, DNS, HTTP to handle requests on EC2 instance \nWorked on WSO2 for monitoring API usage \nExtracted reusable modules from a monolithic application into libraries for use in new microservices \nUsing Microservices in SOA architecture style where in Spring Boot services are provided to the other components by application components, through a communication protocol over a network \nIntegrated Struts framework and Hibernate and used Spring Framework for Dependency injection \nUsed AWS to deploy the project on EC2 instance \nExperience with Circle CI, GitHub, and Productive Auto Scaling(PAS) in AWS \nTroubleshoot, analyze, and check production issues in the existing EMS application and fixed bug in given timeframe \n\nJava Full Stack Developer \nNPD Group, Port Washington, NY                                                                        November 2015 to December 2016\nResponsible for gathering requirements from the client business unit by participating in design discussions and implementation feasibility analysis with business analysts at all levels. \nWorked on SOA to develop RESTful Web service to generate and consume services from different modules. Implemented MVC Framework to make single page applications [SPAs] for responsive services. \nUse JS framework such as AngularJS (for data driven apps) and Backbone.js (for heavy DOM manipulation). \nWeb application development using AngularJS with cutting edge HTML5 and CSS3. \nBuilt the project upon the Single Page Application (SPA) criteria. \nInvolved in building applications using ReactJS by building re-usable UI Components. \nWorked through cross browser compatibility issues with layout and styles for all new CSS that was implemented. \nConfigured System.js to bundle Angular 2 version app and created Call flow diagrams for IVR applications using VISIO \nUsed Front End Developing UI Interface using JSF, JSTL, HTML5.0, CSS, JavaScript, Ajax, and JQuery. \nWrote NoSQL queries and procedures to fetch the data from MongoDB for Inpatient accounts. \nUsed AngularJS to develop client side applications using JavaScript in a clean Model View Controller (MVC) way. \nExperienced in using Twitter Bootstrap Framework responsive design. Developed UI screens and client side scripts incorporating Servlets, JSF, and JavaScript. \nDeveloped additional UI Components using JSF and implemented an asynchronous, AJAX communication (JQuery) based rich client to improve customer experience. \nUsed Spring ORM Support for Hibernate to manage Hibernate Resources and consistent exception hierarchy. Integrated Spring DAO for data access using with Hibernate and Spring Validation Framework for Server side validation. \nUsed JavaScript and GWT to update a portion of a web page thus reducing bandwidth usage and load time in web pages to get user input and requests and Developed dynamic frontends using ReactJS. \nUsed Spring MVC, Spring ORM and Spring Security modules to integrate with MySQL database to implement persistence layer in Hibernate. \nDesigned stored procedures, triggers and functions in Oracle for business-critical requirements. Created E-R graphs and relationships among different database and creation tables with low coupling. \nDeveloped generic database Connection Pooling with WebLogic Admin server using spring, SQL query optimization. \nUsed Jasper reports and Jfree charts to generate various statistical reports. \nInvolved in performing Unit and Integration testing (JUnit). \nStrictly followed TDD using Agile methodologies. \nUsed Apache JMeter for load testing and log4J for debugging with various levels. Used Subversion for version control across common source code used by developers and deployed the applications on WebLogic Application Server. Utilized Gradle for continuous integration. \n\n Java/J2EE Developer                                        \n Thermo Fisher Scientific Inc                                                                                       January 2014 to October 2015\nInvolving in design, development, testing and implementation of the process systems, working on iterative life cycles business requirements, and creating Detail Design Document. \nUsed for polyglot programming, troubleshooting and aggregate testing. \nImplemented new features, components, and services from specs employing Java-based technologies without supervision. \nWrite the SQL queries for CRUD operations, and Stored Procedures. \nCreated custom components using JQuery and JavaScript which can be used by all the maintenance applications in MSS. \nConfigured JDBC in the application server. \nCreated Oracle store procedures for handling and processing complex data based logics. \nWorked on Java Script libraries like jQuery and JSON. \nUsed Maven for build and Jenkins for continuous integration. \nDesigned and developed web-based software using Spring MVC Framework and Spring Core. \nWorked on the JAVA Collections API for handling the data objects between the business layers and the front end. \nSet up JBoss Server, Configured MySQL Cluster in Linux OS and installed OpenCall XDMS. \nSuccessfully handled JSON/XML data and carried out JSON/XML parsing for form submissions and DOM manipulation. \nUsed Spring ORM module to integrate with Hibernate. \nDesigned and developed Web Services to provide services to the various clients using Restful. \nDesigned the user interface of the application using HTML5, CSS, JSF 2.1, JavaScript and AJAX. \nImplemented Hibernate Framework to connect to database and mapping of java objects to oracle database tables. \nUsed Log4J to capture the logging information and JUnit to test the application classes. \n\nJava/J2EE Developer    \nRegions Bank - Austin, TX                                                                                        October 2012 to December 2013\nResponsible for writing functional and technical specifications \nExtensively used J2EE design Patterns. \nImplemented the DOJO API for powerful scripting. \nFor updating the new modification and issues AJAX scripting is used. \nImplemented JSP, spring, Java Script and CSS for developing User Interfaces. \nFor exchanging the text and communication with web service JSON is used extensively. \nDeveloped Rich UI applications using JavaScript, HTML, and CSS. \nUsed the JavaScript alert dialog boxes with my Perl CGI program \nImplemented Collection Framework and used the Thread, I/O functionalities for meeting access. \nUsed Hibernate for database and to manage Transactions. \nHibernate as an ORM tool for OR mappings and configured hibernate.cfg.xml and hibernate.hbm.xml files to create the connection pool. \nUpgraded existing UI with HTML 5, CSS3, jQuery and Bootstrapwith AngularJS 2.0 interaction. \nHibernate Persistence Strategy is used for database operations and Developed Hibernate as the data abstraction to interact with the database. \nDeveloped Session and Entity (CMP) beans (EJB) for crucial business logic \nWorked on XML Parsing (DOM/SAX), XML Schemas/DTD and XML Beans. \nExtensively used JUnit for Unit Testing \n\nJava Developer           \nBirla Sun Life - IN                                                                                                             April 2010 to August 2012\nDesigning JSP using Java Beans. \nInvolved in Design, Development, Testing and Integration of the application. \nImplemented Struts framework 2.0 (Action and Controller classes) for dispatching request to appropriate class \nDeveloped using simple Struts Validation for validation of user input as per the business logic and initial data loading. \nDesign and implementation of front end web pages using CSS, DHTML, Java Script, JSP and HTML.\nDesigned table structure and coded scripts to create tables, indexes, views, sequence, synonyms and database triggers. \nInvolved in writing Database procedures, Triggers, PL/SQL statements for data retrieve. \nImplemented AOP and IOC concept using UI Spring 2.0 Framework. \nDeveloped using Transaction Management API of Spring 2.0 and coordinates transactions for Java objects \nGenerated WSDL files using AXIS2 tool. \nDeveloped using CVS as a version controlling tool for managing the module developments. \nConfigured and Tested Application on the IBM Web Sphere App. Server \nUsed Hibernate ORM tools which automate the mapping between SQL databases and objects in Java. \nWritten JUnit test cases for Business Objects, and prepared code documentation for future reference and upgrades. \n\n\n\n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "azure",
        "cassandra",
        "communication",
        "css",
        "docker",
        "ec2",
        "git",
        "hadoop",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "mongodb",
        "mysql",
        "node.js",
        "oracle",
        "r",
        "rds",
        "react",
        "s3",
        "scrum",
        "spark",
        "sql"
    ]
}