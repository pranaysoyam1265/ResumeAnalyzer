{
    "id": "resume_cceb891a-bad2-48ea-899b-38c33e068037",
    "metadata": {
        "filename": "Vinay.D_Resume.docx",
        "processed_date": "2025-09-24T08:45:59.727206+00:00"
    },
    "raw_text": "Vinay\nvinay.donthoju1@gmail.com\n\t\t+1 (515)-318-7323\n\nOBJECTIVE\nHaving 8 years of professional IT experience in all phases of Software Development Life Cycle (SDLC) including Analysis, Design, and Development Debugging, Support, Integration, Maintenance, and Enhancements of Java/J2EE Applications in domains like Insurance, Financial, Health Care etc. Good understanding of Business workflow, Business logic and Business methods for further implementation of user requirement in a distributed application environment. Technically skilled and qualified Java programmer looking for a position of a Senior Java Programmer to utilize my proficiency and skills in creating best interactive websites. \nPROFESSIONAL SUMMARY\nExperience in working in environments using Agile (SCRUM) and Waterfall development methodologies.\nExpertise in client and server scripting languages like HTML5, CSS3, JavaScript, Bootstrap, JQuery, AngularJS, ReactJS, BackboneJS and NodeJS.\nExperience with Java 1.8 features such as Lambda expressions, Parallel operations on collections and for effective sorting mechanisms and new Date Time API. \nHandled operations and maintenance support for AWS cloud resources which includes launching, maintaining, and troubleshooting EC2 instances, S3 buckets, Auto Scaling, Dynamo DB, AWS IAM, Elastic Load Balancers (ELB) and Relational Database Services (RDS). Also created snapshots for data to store in AWS S3.\nExperience in developing and solid understanding of Service Oriented Architecture and Micro Services Architecture.\nExperience with different Spring framework modules like Spring Core, Spring AOP, Spring IOC, Spring MVC, Spring Boot, Spring Batch, Spring Security, and Spring cloud.\nExperience using persistence framework like Hibernate, JPA for mapping java classes with Database and using HQL (Hibernate Query Language).\n Experience in both providing and consuming Web Services using SOAP and RESTful Web Services (JAX-RS and JAX-WS). \nExperience in design and development of robust and highly scalable web service platforms and API’s based on REST and SOAP for e-commerce applications using AXIS, WSDL, UDDI, XML, JAX-WS, JAX-RS, JAXB, JAX-RPC technologies and Jersey frameworks.\nStrong hands on experience in implementing Design patterns like MVC, Data Access Object, Business Delegate, Factory, Proxy, and Singleton. \nExperience in developing web-based enterprise applications using Core Java, J2EE, Servlets, JSP, JSF, JDBC, Hibernate, Web Services (SOAP and REST), MVC Framework (Struts, Spring MVC) and SQL.\nStrong experience in Core Java concepts like Collections, Multithreading, Event Handling, Exception Handling, and Generics.\nExpertise in XML technologies such as XSL, XSLT, XML schemas, XPath, XForms, XSL-FO and parsers like SAX, DOM.\nProficient in writing and handling SQL Queries, PL/SQL, Stored Procedures, and Triggers.\nGood experience with Relational databases like Oracle, My SQL, MS SQL Server, IBM DB2 and No SQL databases like Mongo DB and Dynamo DB.\nExperienced in implementation of JMS to exchange information over reliable channel in an asynchronous way by using Active MQ, Rabbit MQ as a message queue.\nExperience with application servers like Web Logic, JBOSS, Apache Tomcat and IBM Web Sphere.\nGood experience writing application deployment scripts using Shell Scripting. Worked on Windows, UNIX, LINUX platforms to move the project into production environment. \nExperience with JUnit and Mockito in developing test cases and Log4J in determining application functionality.\nWorking knowledge with version control tools like SVN, CVS, GIT, and Visual Source Safe.\nHands on experience in building tools like ANT, Maven, Gradle.\nInvolved in issue tracking and agile project management using JIRA.\nHighly experience with Java complaint IDE’s like Eclipse, RAD, Spring Tool Suite, IntelliJ. \n\nTechnical Skills\n\nPROFESSIONAL EXPERIENCE\n\nBlue Cross Blue Shield \t\t\t\t\t\t\t\t\t\tAug’16- Till Date\nLocation: Tulsa, OK\nRole: Sr. Full Stack Developer\t\t\t\t\n\nDescription: Blue Cross Blue Shield (BCBS) is working under a software application called Premium Provider Pier Network. Blue Cross Blue Shield is the largest customer-owned health insurance company in the United States. Premium Provider Pier Network is a large web application which helps customers to get quotes for various plans available including ACA plans, also supports various coverage levels such as health, dental, vision for 5 distinct states of USA. It has modules which help in renewing the existing plans, proposing and generating rates for various plans.\n\nResponsibilities:\nInvolved in various phases of Software Development Life Cycle (SDLC) and worked in a highly dynamic AGILE environment and participated in Scrum and Sprint meetings.\nDeveloped UI using HTML5, CSS3, JavaScript, Bootstrap, JQuery, AngularJS and NodeJS.\nBuilt AngularJS modules, controllers, pop up modals, and file uploaders.\nCreated reusable directives, factories, and services in AngularJS.\nExperienced with AWS services to smoothly manage application in the cloud and creating or modifying the instances.\nParticipated in troubleshooting issues on AWS, Netflix Eureka, and Cloud environments.\nInvolved in writing Java API for Amazon Lambda to manage some of the AWS services.\nParticipated in creation of Spring Configurations using Java8 features, Lambda expressions, Streams, filters.\nWorked Docker container management along with volumes, container-based DB and services, Docker Artifactory configuration and setup.\nDesigned and developed Micro Services business components and RESTful service endpoints using Spring boot.\nImplemented first-hand the best/worst practices for integrating Micro Services into existing system architecture.\nMicro Services were being used as a strategy to gradually replace a core monolithic application while still adding business features.\nDesigned and implemented application using Spring Boot, Spring MVC, Spring IOC, Spring Annotations, Spring AOP, Spring Transactions and Spring JDBC.\nImplemented the authentication and authorization of the application using Spring Security and Oauth2. \nWorked on integrated Hystrix dashboard to monitor spring micro-services using Circuit Breaker.\nImplemented Multithreading, Concurrency, Exception Handling, and Collections whenever necessary.\nPrepared calls through Hibernate and Spring JDBC for Interacting with the Database.\nExperience in writing complex PL/SQL queries using joins, Stored Procedures, Functions, Triggers, Cursors, and indexes in Oracle DB.\nPerformed data extraction and loading the JSON data with the server-side content in to the Mongo DB.\nConfigured JMS Server setup and DB Connection pool setup and deployed Returned items in Web Sphere Server.\nUsed Active MQ to communicate with controller and used service layer to implement the business logic.\nImplemented Batch jobs using Spring Batch created various item readers, item writers and item processors.\nInvolved in support for end to operations support for OSS/BSS (Business Support System) identify gaps and propose solutions and manage issue resolution.\nWorked with Spring Ribbon and Kafka broker service to handle heavy traffic.\nDeployed and tested the application on Web Sphere Application Server. \nDeveloped test cases for unit testing in the integration layer using Mockito framework.\nUsed UNIX shell scripts to search/modify files.\nSetup the (CI) and (CD) process for the application using the Jenkins.\nInstalled and deployed monitoring solution with Splunk services.\nWorked on Log4J to validate functionalities and JUnit for unit testing.\nImplemented configured and customized JIRA issue tracking software with agile plug-in across all company functions.\nUsed GitHub to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.\n\nEnvironment: Java1.8, J2EE, HTML5, CSS3, Bootstrap, JQuery, Angular JS, ReactJS, JavaScript, NodeJS, Spring IOC, Spring MVC, Spring Security, Spring Boot, Spring Batch, Spring Data, Hibernate, Active MQ, RESTful, Micro Service, AWS, EC2, Docker, Mongo DB, Oracle DB, Maven, STS, Web Sphere Application Server, Mockito, JMS, UNIX, Jenkins, JIRA, log4j and GIT.\n\nClient: Verizon\t\t\t\t\t\t\t\t\t\t\tJan'15 – June’16\nLocation: Atlanta, GA\nRole: Full Stack Developer\t\t\t\n\nDescription: Verizon is working under an application called My Verizon Diagnostics (MVD) which isused by representative in Verizon store. This application is used to diagnosis a phone if the user facing any issue. For iPhone devices, this application gets connected to Apple server on the backend to get the information of the device from the server and from security point from Apple; it needs the user’s permission to get the device information. While in android, we get the latest information directly from the device without any permission from user.\n\nResponsibilities:\nResponsible for all stages of design, development, and deployment of applications. Active role in Test Driven Development termed as TDD apart from Agile Software Development.\nUpgraded existing UI with HTML5, CSS3, jQuery and Bootstrap with AngularJS interaction.\nDesigned, developed a custom, single-page, responsive web application on front end using AngularJS.\nDeveloped custom directives, Factories and Services in AngularJS and created AngularJS Controller to isolate the scopes to perform operations.\nCreated the AngularJS app using Yeoman, Grunt and Bower and used Angular UI for component model.\nUsed JavaScript, JQuery for user interactions in pages. Creating a responsive web application integrating Twitter Bootstrap with Angular JS and media queries.\nAdded user validations and user permissions by using the NodeJS with libraries ExpressJS.\nDeveloped an API to write XML documents from a database. Utilized XML and XSL Transformation for dynamic web-content and database connectivity.\nDesigned the application using various Spring technologies and used Spring Security to provide better authentication instances.\nDeveloped SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability.\nDeveloped Restful Web services for other systems to interact with our system and secured the service with Spring-Security Oauth-2.0. Added WS-Security using XWSS to secure the Web services.\nDeveloped services that utilize the Cloud Foundry and Azure client libraries (SDK) for Java.\nUsed Micro-services to ensure the scalability of application on cloud infrastructure.\nRefactored existing monolithic application by identifying components that needs to be transformed to Micro- services architecture, with Spring Boot-based services interacting through a combination of REST and AWS API-Gateway.\nAnalysis the logs data and filter required columns by Log stash configuration and send it to Elastic Search.\nDeveloped the persistence layer using Hibernate Framework, created the POJO objects and mapped using Hibernate annotations and Transaction Management.\nImplemented Web-Services to integrate between different applications components using Restful web services by using Jersey for JAX-RS implementation.\nDeveloped SOAP based JAX-WS Web Service interfaces for integrating multiple systems, code re-usability.\nWorked on MongoDB database concepts such as locking, transactions, indexes, Sharding, replication, schema design, etc.\nExtensively used JSON to parse the data from server side to satisfy the business requirement.\nUsed WebSphere server to route our JMS queue messages to different business floors and configured routes in WebSphere.\nUsed Apache Camel Framework to transform, extract and load the data.\nDeveloped unit and integration tests for existing Micro Services using JUnit, Mockito and Docker environments.\nInvolved in installing and configuring Maven for application builds and deployment.\nConfigured and customized logs using Log4J and Used GIT as a version control tool. Used JMeter to test performance of SOAP protocol.\nWorked on Creating Kafka Adaptors for decoupling the application dependency.\nUsed JIRA to assign, track, report and audit the issues in the application.\nSetup the CI and CD process for the application using the Jenkins.\nInvolved in System Testing, Integration Testing, and Production Testing on IBM WebSphere Server.\n\nEnvironment: HTML5, CSS3, JavaScript, JQuery, Bootstrap, AngularJS, NodeJS, AJAX, Agile(SCRUM), Hibernate, Spring, Struts, MongoDB, Spring Batch, Spring Boot, Spring Cloud, Spring Security, JSON, XML, GIT, Spring MVC, Apache Camel, JUnit, Maven, JMS, WebSphere, Restful, JAX-RS, Log4J, Micro Services, Kafka, Elastic Search, Logstash, JIRA, Jenkins, JMeter.\nClient: AutoZone\t\t\t\t\t\t\t\t\t\tOct’13-Dec ‘14\nLocation: Memphis, TN\nRole: Sr. Java Developer\t\t\n \nDescription: AutoZone has been committed to providing the best parts, prices and customer service in the automotive aftermarket industry. AutoZone is the leading retailer and a leading distributor of automotive replacement parts and accessories in the U.S.  TAMSII application is used by employees at DC (Distribution Centers), AutoZone stores for placing the order, to check the inventory for the parts. The User Interface (UI) is developed using JSP, HTML. Web based TAMSII enables fast and easy access to place an order, checks the inventory, create customers, update customer profiles, create pricing profiles and lot more. This is done by migrate the existing TAMSII application using Web services. \n\nResponsibilities:\nInvolved in complete development of ‘Agile Development Methodology/SCRUM’, developed and tested the application during various iterations.\nDeveloped screens using HTML, CSS and JQuery.\nDeveloped the User Interface using Spring framework, JQuery and Ajax.\nImplemented routing logic and navigation from screen to screen and implemented login functionality on the client side in AngularJS.\nHandled Java multithreading part in back - end component, one thread will be running for each user, which serves that user.\nUsed spring frame work Spring AOP features and JDBC module features to persist the data to the database for few applications. \nDeveloped the persistence layer using Hibernate Framework by configuring the mappings in hibernate mapping files and created DAO and PO.\nDeveloped various Java beans for performance of business processes and effectively involved in Impact analysis.\nDeveloped application service components and configured beans using Spring IOC, creation of Hibernate mapping files and generation of database schema.\nImplemented a highly-scalable vertical and horizontal, performance efficient Drools architecture. \nInstalled and configured JBOSS server with MYSQL persistence. Extracted rules data from the database and decision tables.\nCreated SOAP web services interface to Java-based runtime engine and accounts.\nActively involved in writing SQL using SQL query builder.\nWorked on MYSQL databases and Oracle databases technologies. \nUsed Maven as build tool and deploying the application.\nActively used the defect tracking tool JIRA to create and track the defects during QA phase of the project.\nUsed SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.\nDeveloped test cases using JUnit.\nEnvironment: SCRUM, SDLC, Maven, HTML, CSS, and JQuery, Spring, Ajax, AngularJS, AOP, JDBC, Spring IOC, Hibernate, DAO, PO, Java beans, SOAP, SQL, JIRA, QA, SVN, JUnit, JBOSS Server, Drools.\n\nClient: Edward Jones\t\t\t\t\t\t\t\t\t\tDec'12 –Aug'13\nLocation:  St. Louis, MO\t\t\t\t\nRole: Java Developer\n\nDescription: Edward Jones is a decidedly different kind of investment firm. Our mission is to help individuals reach their serious, long-term financial goals. The web application provides functionalities such as policy management, profile management and claim reporting. The customer can access complete account information, policy information, receive instant auto insurance quote and report a claim.\n\nResponsibilities:\nInvolved in SDLC requirements gathering, analysis, design, development and testing of application developed using Agile methodology.\nDefined new validations through Angular JS for the form field validation implemented through HTML 5.\nUsed Spring MVC and Dependency Injection for handling presentation and business logic.\nTo maintain loose coupling between layers published the business layer as services and injected the necessary dependent components using Spring IOC and published cross cutting concerns like Logging, User Interface exceptions, Transactions using Spring AOP.\nIntegrated Spring DAO for data access using Hibernate.\nUsed Spring Security for Authentication and Authorization of the application.\nImplemented persistence framework using Hibernate & Handled Transaction Management using the provided data source.\nExtensively used JSON to parse the data from server side to satisfy the business requirement.\nResponsible for designing Hibernate mapping files based on business logic and Object relationships.\nIntegrated Spring and Hibernate together and worked on developing backend components and services using Hibernate and spring and extensively used HQL and SQL for querying databases. \nDeveloped Message Driven Bean for asynchronous sending Messages using JMS.\nConsumed Web Services to interact with other external interfaces to exchange the data in different forms by using RESTful service.\nUsed Spring JMS module for lookup for the queues and MDBs for the listeners \nEstablished Database Connectivity using JDBC, Hibernate O/R mapping with Spring ORM for Oracle. \nPackaged and deployed the application in IBM WebSphere.\nWritten LINUX shell scripts to identify user login information.\nUsed Log4J for application logging and notification tracing mechanisms.\nUsed Maven tools for building and deploying the Web applications.\nAnalysis and Bug fixing of the production problems and defects along with enhancements\nImplemented JUNIT test cases for unit testing and Suites for end to end testing.\nUsed JIRA for tracking the Project Stories in Agile Methodology.\nUsed Tortoise SVN to maintain the version of the files and took the responsibility to do the code merges from branch to trunk and creating new branch when new feature implementation starts.\n\nEnvironment: HTML5, CSS3, AngularJS, JSON, XML, AJAX, JQuery, Struts, Hibernate, Spring MVC, RESTful, HQL, SQL, IBM WebSphere Server, Oracle, JMS, JNDI, Maven, RMI, Eclipse IDE, UML, JIRA, Tortoise SVN, LINUX.\n\nClient: Aetna\t\t\t\t\t\t\t\t\t\t\tSep'11-Oct'12\nLocation: Hartford, CT\t\t\t\t\t\t\t\t\nRole: Java/J2EE Developer\t\t\t\t\t\t\t\t\n\t\t\t\nDescription:Aetna is one of the nation’s leaders in health care, dental, pharmacy and disability insurance. Aetna puts information and helpful resources to work for its members to help them make better informed decisions about their health care. Aetna provides insurance protection to more than 1 million businesses and professionals in the U.S. and internationally. This project is a reinsurance application for their customers and is developed with J2EE technologies with Struts Framework in the front end, with Hibernate Framework at data layer connecting to Oracle 9i/10g. The application was deployed on Web Sphere Application Server and development was done using RAD.\n\nResponsibilities:\nWas involved in all the phases of the project right from requirements gathering to maintenance. \nParticipated in Functional Document reviews and created Technical documents. \nIn architecting various Business Layer and Data Management components of multi-tiered web-based system over J2EE architecture. \nActively designed, developed and integrated the Metrics module with all other components. \nUsed Spring Security to provide authentication, authorization and access-control features for this application.\nUsed Scrum for managing product development. \nDevelopment using Bootstrap for real time web development. \nDesigned and developed Hibernate DAO's using spring framework's Hibernate Dao Support and Hibernate Template.\nDeveloped Struts Action and Form classes to access Java Beans and UI. \nDeveloped and deployed various Sessions beans. \nUsed Spring Core for middle tier development to achieve inversion of control. \nWrote complex queries and mapped database views using DAO in Oracle. \nUsed various Core Java concepts such as Multi-Threading, Exception Handling, Collection APIs, Garbage collections for dynamic memory allocation to implement various features and enhancements. \nDeveloped Web Services using XML messages that use SOAP. Developed Web Services for Payment Transaction and Payment Release. \nDeveloped the application using RAD as the IDE and used its features for editing, debugging, compiling, formatting, build automation and version control (SVN). \nInvolved in testing the applicable code using Mockito framework and JUnit. \nWrote test cases in Junit for unit testing of classes and implemented the logging using Log4j. \nRetrieving code from the repository and deploying in Production using ANT\nEnvironment: HTML, CSS, XML, DHTML, JSP, JavaScript, Servlet, Struts, Spring IOC, Spring Boot, Spring Data, JNDI, Hibernate, Log4j, Ant, WebSphere, Bootstrap, Scrum, Oracle, Rational Software Architect, Web Services(SOAP/WSDL), Web Logic Application Server, SVN, UNIX. \nClient: Mega Soft Technology \t\t\t\t\t\t\t\t\tAug' 09- June'11\nLocation: Hyderabad, India\t\t\t\t\t\t\t\nRole: Trainee Software Developer\n\nDescription: The main object of this project is to provide a frame work for evaluating the entire life cycle cost for a product, including warranty claims. The project aim is to provide warranty analysis by evaluating warranty claims data to spot trends and incorporate feedback into the next product version.\t\n\nResponsibilities:\nDeveloped web application using Struts, JSP, Servlet, Java beans that uses MVC design pattern\nCreated user-friendly GUI interface and Web pages using HTML, CSS and JSP\nWrote JavaScript for client-side validation.\nUsed Eclipse as IDE tool for creating Servlet, JSP, and XML.\nWrote SQL for JDBC prepared statements to retrieve the data from database.\nMonitored the logs using Log4J and fixed the problem\nThe application was deployed on the Tomcat.\nInvolved in build and deploying the application using ANT  \nUsed CVS as version control system \nWorked on bug fixing and Production Support\nEnvironment: J2EE, JDBC, Struts, JavaScript, Html, CSS, JSP, Servlet, Tomcat, Oracle, Eclipse IDE, CVS, ANT, Log4J. \n\n",
    "extracted_skills": [
        "agile",
        "angular",
        "aws",
        "azure",
        "css",
        "docker",
        "ec2",
        "git",
        "html",
        "java",
        "javascript",
        "jenkins",
        "jira",
        "lambda",
        "mongodb",
        "mysql",
        "oracle",
        "project management",
        "r",
        "rds",
        "s3",
        "scrum",
        "sql"
    ]
}